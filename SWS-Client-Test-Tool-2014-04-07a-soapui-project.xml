<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Sabre Web Services Client Test Tool" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" activeEnvironment="Default" id="9fea1c5b-8c6d-43eb-ba9d-6c6156b6bdc6" xmlns:con="http://eviware.com/soapui/config"><con:description>Sabre Web Services Client Test Tool v1.02 - Last Update: 2012-11-01

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR
BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
</con:description><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="SessionCreateSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}SessionCreateSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/SessionCreateRQ.wsdl" id="a93c5b00-5026-48bf-8e9a-f16bdb99aaf0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/SessionCreateRQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/SessionCreateRQ.wsdl</con:url><con:content><![CDATA[<definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd1="http://www.opentravel.org/OTA/2002/11" xmlns:tns="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <types>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.opentravel.org/OTA/2002/11" schemaLocation="SessionCreateRQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
    </xsd:schema>
  </types>
  <message name="GetSessionCreateInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:SessionCreateRQ"/>
  </message>
  <message name="GetSessionCreateOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:SessionCreateRS"/>
  </message>
  <portType name="SessionCreatePortType">
    <operation name="SessionCreateRQ">
      <input message="tns:GetSessionCreateInput"/>
      <output message="tns:GetSessionCreateOutput"/>
    </operation>
  </portType>
  <binding name="SessionCreateSoapBinding" type="tns:SessionCreatePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="SessionCreateRQ">
      <soap:operation soapAction="OTA"/>
      <input>
        <soap:header message="tns:GetSessionCreateInput" part="header" use="literal"/>
        <soap:header message="tns:GetSessionCreateInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </input>
      <output>
        <soap:header message="tns:GetSessionCreateOutput" part="header" use="literal"/>
        <soap:header message="tns:GetSessionCreateOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="SessionCreateRQService">
    <port name="SessionCreatePortType" binding="tns:SessionCreateSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/SessionCreateRQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://www.opentravel.org/OTA/2002/11" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:tns="http://www.opentravel.org/OTA/2002/11" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="SessionCreateRQ.xsd"/>
  &lt;include schemaLocation="SessionCreateRS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/SessionCreateRQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.opentravel.org/OTA/2002/11" elementFormDefault="qualified" xmlns="http://www.opentravel.org/OTA/2002/11" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="SessionCreateRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="POS">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Source">
                <xs:complexType>
                  <xs:attribute name="PseudoCityCode" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/SessionCreateRS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.opentravel.org/OTA/2002/11" elementFormDefault="qualified" xmlns="http://www.opentravel.org/OTA/2002/11" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="SessionCreateRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Success" minOccurs="0">
          <xs:complexType/>
        </xs:element>
        <xs:element name="Warnings" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Warning">
                <xs:complexType>
                  <xs:attribute name="Language" type="xs:string" use="optional"/>
                  <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                  <xs:attribute name="Type" type="xs:string" use="optional"/>
                  <xs:attribute name="Code" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for codes in the OTA code tables.</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:pattern value="[0-9A-Z]{1,3}"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="DocURL" type="xs:anyURI" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, this URL refers to an online description of the error that occurred.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Status" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, recommended values are those enumerated in the OTA_ErrorRS, (NotProcessed | Incomplete | Complete | Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Tag" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="RecordId" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ConversationId" type="xs:string" minOccurs="0"/>
        <xs:element name="Errors" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Error">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ErrorInfo">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Message" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ErrorCode" type="xs:string" use="required"/>
                  <xs:attribute name="Severity" type="xs:string" use="required"/>
                  <xs:attribute name="ErrorMessage" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 										message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-					DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Test"/>
            <xs:enumeration value="Production"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="version" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application 	to 					process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and 	needs to 				retrieve messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="status" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:endpoint>https://sws-sts.cert.sabre.com/</con:endpoint><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="OTA" name="SessionCreateRQ" bindingOperationName="SessionCreateRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="2e834c8f-6dd1-4c3d-923b-d89748841d67"><con:settings/><con:call name="SessionCreateRQ" id="871b085f-1e9e-4a5e-877d-73d9b5d8c74d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">999999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversationID</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCreateRQ</eb:Service>
         <eb:Action>SessionCreateRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1000</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:00</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:UsernameToken>
            <wsse:Username>username</wsse:Username>
            <wsse:Password>password</wsse:Password>
            <Organization>ipcc</Organization>
            <Domain>DEFAULT</Domain>
         </wsse:UsernameToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCreateRQ>
         <POS>
            <Source PseudoCityCode="ipcc"/>
         </POS>
      </SessionCreateRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="SessionCloseSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}SessionCloseSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/SessionCloseRQ.wsdl" id="da9c8f61-89f2-4a00-aa84-9e2e6aac1ae1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/SessionCloseRQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/SessionCloseRQ.wsdl</con:url><con:content><![CDATA[<definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd1="http://www.opentravel.org/OTA/2002/11" xmlns:tns="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <types>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://www.opentravel.org/OTA/2002/11" schemaLocation="SessionCloseRQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
    </xsd:schema>
  </types>
  <message name="SessionCloseInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:SessionCloseRQ"/>
  </message>
  <message name="SessionCloseOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:SessionCloseRS"/>
  </message>
  <portType name="SessionClosePortType">
    <operation name="SessionCloseRQ">
      <input message="tns:SessionCloseInput"/>
      <output message="tns:SessionCloseOutput"/>
    </operation>
  </portType>
  <binding name="SessionCloseSoapBinding" type="tns:SessionClosePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="SessionCloseRQ">
      <soap:operation soapAction="OTA"/>
      <input>
        <soap:header message="tns:SessionCloseInput" part="header" use="literal"/>
        <soap:header message="tns:SessionCloseInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </input>
      <output>
        <soap:header message="tns:SessionCloseOutput" part="header" use="literal"/>
        <soap:header message="tns:SessionCloseOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="SessionCloseRQService">
    <port name="SessionClosePortType" binding="tns:SessionCloseSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/SessionCloseRQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://www.opentravel.org/OTA/2002/11" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:tns="http://www.opentravel.org/OTA/2002/11" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="SessionCloseRQ.xsd"/>
  &lt;include schemaLocation="SessionCloseRS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/SessionCloseRQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.opentravel.org/OTA/2002/11" elementFormDefault="qualified" xmlns="http://www.opentravel.org/OTA/2002/11" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="SessionCloseRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="POS">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Source">
                <xs:complexType>
                  <xs:attribute name="PseudoCityCode" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/SessionCloseRS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.opentravel.org/OTA/2002/11" elementFormDefault="qualified" xmlns="http://www.opentravel.org/OTA/2002/11" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="SessionCloseRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Success" minOccurs="0">
          <xs:complexType/>
        </xs:element>
        <xs:element name="Warnings" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Warning">
                <xs:complexType>
                  <xs:attribute name="Language" type="xs:string" use="optional"/>
                  <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                  <xs:attribute name="Type" type="xs:string" use="optional"/>
                  <xs:attribute name="Code" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for codes in the OTA code tables.</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:pattern value="[0-9A-Z]{1,3}"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="DocURL" type="xs:anyURI" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, this URL refers to an online description of the error that occurred.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Status" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, recommended values are those enumerated in the OTA_ErrorRS, (NotProcessed | Incomplete | Complete | Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Tag" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="RecordId" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ConversationId" type="xs:string" minOccurs="0"/>
        <xs:element name="Errors" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Error">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ErrorInfo">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Message" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ErrorCode" type="xs:string" use="required"/>
                  <xs:attribute name="Severity" type="xs:string" use="required"/>
                  <xs:attribute name="ErrorMessage" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 										message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-					DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Test"/>
            <xs:enumeration value="Production"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="version" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application 	to 					process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and 	needs to 				retrieve messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="status" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/usg/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="OTA" name="SessionCloseRQ" bindingOperationName="SessionCloseRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="03b3af1c-59f8-4b73-ae3b-e4610bf98e46"><con:settings/><con:call name="SessionCloseRQ" id="ed5a731d-56b0-4b66-9ab3-5a368bceb0ab"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversationID</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCloseRQ</eb:Service>
         <eb:Action>SessionCloseRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESG!ICESMSLB\/RES.LB!-4210745990415812605!1154630!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCloseRQ>
         <POS>
            <Source PseudoCityCode="ipcc"/>
         </POS>
      </SessionCloseRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="TravelItineraryAddInfoSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}TravelItineraryAddInfoSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/tpfc/TravelItineraryAddInfoLLS2.0.0RQ.wsdl" id="08b2c711-d97f-4138-8ef2-c0f100f57844" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/tpfc/TravelItineraryAddInfoLLS2.0.0RQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/TravelItineraryAddInfoLLS2.0.0RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sws_xsd="http://webservices.sabre.com/sabreXML/2011/10" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2011/10" schemaLocation="TravelItineraryAddInfoLLS2.0.0RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
      <xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="TravelItineraryAddInfoInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:TravelItineraryAddInfoRQ"/>
  </wsdl:message>
  <wsdl:message name="TravelItineraryAddInfoOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:TravelItineraryAddInfoRS"/>
  </wsdl:message>
  <wsdl:portType name="TravelItineraryAddInfoPortType">
    <wsdl:operation name="TravelItineraryAddInfoRQ">
      <wsdl:input message="sws:TravelItineraryAddInfoInput"/>
      <wsdl:output message="sws:TravelItineraryAddInfoOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="TravelItineraryAddInfoSoapBinding" type="sws:TravelItineraryAddInfoPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="TravelItineraryAddInfoRQ">
      <soap:operation soapAction="TravelItineraryAddInfoLLSRQ"/>
      <wsdl:input>
        <soap:header message="sws:TravelItineraryAddInfoInput" part="header" use="literal"/>
        <soap:header message="sws:TravelItineraryAddInfoInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:TravelItineraryAddInfoOutput" part="header" use="literal"/>
        <soap:header message="sws:TravelItineraryAddInfoOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="TravelItineraryAddInfoService">
    <wsdl:port name="TravelItineraryAddInfoPortType" binding="sws:TravelItineraryAddInfoSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/TravelItineraryAddInfoLLS2.0.0RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="TravelItineraryAddInfoLLS2.0.0RQ.xsd"/>
  &lt;include schemaLocation="TravelItineraryAddInfoLLS2.0.0RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/TravelItineraryAddInfoLLS2.0.0RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="TravelItineraryAddInfoRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="AgencyInfo" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Address" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="AddressLine" minOccurs="0" type="xs:string"/>
                    <xs:element name="CityName" type="xs:string"/>
                    <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                    <xs:element name="PostalCode" type="xs:string"/>
                    <xs:element name="StateCountyProv" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="StateCode" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="StreetNmbr" type="xs:string"/>
                    <xs:element name="VendorPrefs" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Airline">
                            <xs:complexType>
                              <xs:attribute name="Hosted" type="xs:boolean" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="Ticketing" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                  <xs:attribute name="QueueNumber" type="xs:string" use="optional"/>
                  <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                  <xs:attribute name="TicketTimeLimit" type="sws:dateTime" use="optional"/>
                  <xs:attribute name="TicketType" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CustomerInfo" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ContactNumbers" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ContactNumber" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="InsertAfter" type="xs:integer" use="optional"/>
                        <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                        <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                        <xs:attribute name="Phone" type="xs:string" use="required"/>
                        <xs:attribute name="PhoneUseType" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="Corporate" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ID" type="xs:string"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:attribute name="MembershipID" type="xs:string" use="required"/>
                  <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                  <xs:attribute name="ProgramID" type="xs:string" use="required"/>
                  <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                  <xs:attribute name="TravelingCarrierCode" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="CustomerIdentifier" minOccurs="0" type="xs:string"/>
              <xs:element name="Email" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:attribute name="Address" type="xs:string" use="required"/>
                  <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                  <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                  <xs:attribute name="Type" use="optional">
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:enumeration value="BC"/>
                        <xs:enumeration value="CC"/>
                        <xs:enumeration value="FR"/>
                        <xs:enumeration value="TO"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="GivenName" minOccurs="0" type="xs:string"/>
                    <xs:element name="GroupInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="VendorPrefs" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Airline">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="Name" type="xs:string" use="required"/>
                        <xs:attribute name="NumSeatsRemaining" type="xs:integer" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Surname" minOccurs="0" type="xs:string"/>
                  </xs:sequence>
                  <xs:attribute name="Infant" type="xs:boolean" use="optional"/>
                  <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                  <xs:attribute name="NameReference" type="xs:string" use="optional"/>
                  <xs:attribute name="PassengerType" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ReturnHostCommand" type="xs:boolean" use="optional"/>
      <xs:attribute name="TimeStamp" type="xs:dateTime" use="optional"/>
      <xs:attribute name="Version" type="xs:string" fixed="2.0.0" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/sws_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be ommited. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/TravelItineraryAddInfoLLS2.0.0RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://services.sabre.com/STL/v01">
  <xs:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="TravelItineraryAddInfoRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="stl:ApplicationResults"/>
      </xs:sequence>
      <xs:attribute name="Version" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_For_SabreProtocol_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.sabre.com/STL/v01" xmlns="http://services.sabre.com/STL/v01" xmlns:STL="http://services.sabre.com/STL/v01" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added ShortText to SystemSpecificResults.
  		
  		May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace

		Created: April 21, 2011
		Description: This schema is the minimal Sabre Type Library (STL) schema needed for the Sabre SOAP Envelope schema to
		identify the STL_Payload  substitution group head element and type to be extended by message schemas..

		Copyright Sabre 2011
		The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only with the written permission of Sabre or in accordance with the terms and conditions stipulated in theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://services.sabre.com/STL_Header/v120" schemaLocation="STL_Header_v.1.2.0.xsd"/>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="ApplicationResults" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <!--- Results and Problem Information components.-->
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"></xsd:complexType>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="stlh:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="stlh:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="stlh:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="stlh:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="stlh:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="stlh:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="stlh:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_Header_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Header/v120" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns="http://services.sabre.com/STL_Header/v120">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added key to trace attributes.
			
			August 8 - added HostCommand to system specific results.
			
		  	May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace
		
			Created: April 21, 2011
			Description: This schema is a standalone schema that defines Header metadata 
			structures that are independent of the payload schema.
			
			Copyright Sabre 2011
			The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only
			with the written permission of Sabre or in accordance with the terms and conditions stipulated in
			theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Diagnostics" type="Diagnostics"/>
  <xsd:element name="Identification" type="Identification"/>
  <xsd:element name="ResultSummary" type="ResultSummary"/>
  <xsd:element name="Security" type="Security"/>
  <xsd:element name="Service" type="Service"/>
  <xsd:element name="Traces" type="Traces"/>
  <xsd:element name="SabreHeader" type="SabreHeader"/>
  <xsd:complexType name="SabreHeader">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="SabreHeaderGroup">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DiagnosticResults">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Diagnostics">
    <xsd:sequence>
      <xsd:element name="Level" type="DiagnosticLevels" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the level of diagnostic data requested or provided.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Data" type="Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Block of diagnostic data included in request or returned in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Diagnostic" type="DiagnosticResults" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Diagnostic data. Must be defined in a differrent namespace as the header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identification">
    <xsd:annotation>
      <xsd:documentation>The Identification metadata uniquely identify each message instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CustomerID" type="PseudoCityCodeOrOAC" minOccurs="1"/>
      <xsd:element name="CustomerAppID" type="stlh:Text.Short" minOccurs="0"/>
      <xsd:element name="ConversationID" type="TrackingID" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The ConversationId element is a string identifying the set of related messages that make up a
						conversation between two or more Parties. The Party initiating a conversation determines the value of
						the ConversationId element that shall be reflected in all messages pertaining to that
						conversation. It remains constant for all messages within a conversation.
						Service providers are expected to increment the optional TrackingID integer attribute when present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MessageID" type="Identifier" minOccurs="1"/>
      <xsd:element name="TimeStamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identifier.System">
    <xsd:annotation>
      <xsd:documentation>System identifier used to uniquily identify the specific system.
 	"Source" is used to return the application name responsible for fulfilling the particular request transaction.
	"ApplicationInstance" is used to return the application instance responsible for fulfilling the particular request transaction.
	"Cluster" is used to return the application cluster responsible for fulfilling the particular request transaction.
	"HostName" is used to return the particular server name responsible for fulfilling the particular request transaction.
	Â Example: Source ApplicationInstance="PROD1" Cluster="PROD TPF SCC" HostName="PSS" TPF Source</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="instance" type="Identifier"/>
        <xsd:attribute name="cluster" type="Identifier"/>
        <xsd:attribute name="host" type="Identifier"/>
        <xsd:attribute name="uri" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The uri representing the endpoint reference by which this system can be accessed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProblemBase">
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ProblemSummary">
    <xsd:sequence>
      <xsd:element name="Source" type="Identifier.System" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The system that the reporting system deemed to be the cause of the problem. If omitted, the
						reporting system is also the source of the problem. For application errors, the element may
						identify a system the application is dependent upon that failed to respond. For validation
						errors this may identify the service consumer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReportingSystem" type="Identifier.System">
        <xsd:annotation>
          <xsd:documentation>The system that created the results record. If the Source system identifier is omitted, the
						system identified here both was the cause of the problem and created the result record.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="Message.Condition" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>An informative code and message that describes the results. Note: the message code and text must
						NOT be required to process to understand retry/compensate status.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ResultSummary">
    <xsd:choice>
      <xsd:element name="Success" type="EmptyElement">
        <xsd:annotation>
          <xsd:documentation>Success indicates that the request was
						processed successfully.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Error" type="ProblemSummary"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Security">
    <xsd:annotation>
      <xsd:documentation>Header records no longer contain user credentials (username/password) as these are needed only for 
     		 SessionCreateRQ in which the credentials should be in the payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="SecurityToken" type="Text.Long"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="Text.Short">
        <xsd:attribute name="operation" type="Text.Short"/>
        <xsd:attribute name="version" type="Text.Short"/>
        <xsd:attribute name="ttl" type="xsd:nonNegativeInteger"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Traces">
    <xsd:sequence>
      <xsd:element name="Trace" type="TraceRecord" minOccurs="0" maxOccurs="999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TraceRecord">
    <xsd:annotation>
      <xsd:documentation>Record for all systems (consumer, proxies and gateways, providers) to use to trace the message. 
			The value is the common system name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="key" type="Text.Long">
          <xsd:annotation>
            <xsd:documentation>The key attribute is similar to ConversationID but is provided by the service requestor or entrypoint gateway and 
							must be unique across all Sabre gateways. Each gateway instance must prepend the ID value with its unique system identifier. 
							Internal service consumers must provide this value which may be their unique system identifier concantanated 
							with the ConversationID.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="start" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="end" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. 
						Example: 2002-10-10T12:00:00+05:00.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appInstance" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application instance involved in the particular transaction. 
						For example: PROD1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cluster" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application server cluster involved in the particular transaction. 
						Example: PROD TPFC SCC</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The server name involved in the particular transaction. 
						Example: PSS</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The targetURI is the endpoint address this system sent the message to. 
						For ServiceProviders it should be the abstract service address which is the address used by 
						registries to look up the actual service endpoint URI. The endpoint address may be a queue
						name (MOM service name).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="role" type="TraceRole"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrackingID">
    <xsd:annotation>
      <xsd:documentation>Tracking Identifier is an identifier intended for use to a set of related items and provide an 
			optional sequence number for the items.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="seq" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DiagnosticLevels">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Mock">
        <xsd:annotation>
          <xsd:documentation>Return a sample message without invoking service logic.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Simulate">
        <xsd:annotation>
          <xsd:documentation>Compute response without making changes to service data, state or status.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EmptyElement">
    <xsd:annotation>
      <xsd:documentation>Elements of this type are used for indicators whose presense denotes the 
				condition described by their name. They  have no content nor any attributes. 
				For example, an empty Success element denote that the process was successfully completed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCodeOrOAC">
    <xsd:annotation>
      <xsd:documentation>Customer Identifier assigned to office or agency or location. Commonly use values are 
			Psuedo City Code - 3 to 16 characters or the Sabre Office accounting code (OAC) which can be upto 25 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TraceRole">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="consumer">
        <xsd:annotation>
          <xsd:documentation>the system that initiated the service request and will be the ultimate consumer 
					of the service results.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="provider">
        <xsd:annotation>
          <xsd:documentation>System that performs the service operation defined in the service interface. 
					For RQ/RS exchange patterns, the provider reads the request message, applies business logic and 
					returns a response.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="gateway"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="TravelItineraryAddInfoLLSRQ" name="TravelItineraryAddInfoLLSRQ" bindingOperationName="TravelItineraryAddInfoRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="2bc592c8-2daf-476f-9e2d-4ecf78a30ae0"><con:settings/><con:call name="TravelItineraryAddInfoLLSRQ" id="64be26dc-e3f1-455d-bb5d-5d34ae44694b"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversationID</eb:ConversationId>
         <eb:Service eb:type="OTA">TravelItineraryAddInfoLLSRQ</eb:Service>
         <eb:Action>TravelItineraryAddInfoLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESH!ICESMSLB\/RES.LB!-3919092817016728189!177591!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <TravelItineraryAddInfoRQ Version="1.9.1" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="IPCC"/>
         </POS>
         <CustomerInfo>
            <PersonName TravelerRefNumber="1.1">
               <GivenName>RICHARD</GivenName>
               <Surname>FEYNMAN</Surname>
               <NameReference Text="REF1"/>
            </PersonName>
            <PersonName TravelerRefNumber="2.1">
               <GivenName>GWENETH</GivenName>
               <Surname>FEYNMAN</Surname>
               <NameReference Text="REF2"/>
            </PersonName>
            <Telephone AreaCityCode="817" PhoneNumber="555-1212" PhoneUseType="H" TravelerRefNumber="1.1"/>
            <Telephone AreaCityCode="817" PhoneNumber="555-1213" PhoneUseType="H" TravelerRefNumber="2.1"/>
            <Email EmailAddress="TEST.ONE@SABRE.COM" TravelerRefNumber="1.1"/>
            <Email EmailAddress="TEST.TWO@SABRE.COM" EmailType="CC" TravelerRefNumber="2.1"/>
            <CustomerIdentifier Identifier="1234567890"/>
         </CustomerInfo>
         <AgencyInfo>
            <Address>
               <TPA_Extensions>
                  <AgencyName>SABRE TRAVEL</AgencyName>
               </TPA_Extensions>
               <StreetNmbr>3150 SABRE DRIVE</StreetNmbr>
               <CityName>SOUTHLAKE</CityName>
               <PostalCode>76092</PostalCode>
               <StateCountyProv StateCode="TX"/>
               <CountryName Code="US"/>
            </Address>
            <Telephone AreaCityCode="817" PhoneNumber="555-1212" PhoneUseType="A"/>
            <Ticketing TicketType="7T-"/>
         </AgencyInfo>
      </TravelItineraryAddInfoRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="TravelItineraryAddInfoLLSRQ"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="OTA_AirBookSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}OTA_AirBookSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/tpfc/OTA_AirBookLLS2.0.0RQ.wsdl" id="bbd75f1c-51f2-4d1b-ba96-acce7691b7e0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/tpfc/OTA_AirBookLLS2.0.0RQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/OTA_AirBookLLS2.0.0RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sws_xsd="http://webservices.sabre.com/sabreXML/2011/10" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2011/10" schemaLocation="OTA_AirBookLLS2.0.0RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
      <xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="OTA_AirBookInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:OTA_AirBookRQ"/>
  </wsdl:message>
  <wsdl:message name="OTA_AirBookOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:OTA_AirBookRS"/>
  </wsdl:message>
  <wsdl:portType name="OTA_AirBookPortType">
    <wsdl:operation name="OTA_AirBookRQ">
      <wsdl:input message="sws:OTA_AirBookInput"/>
      <wsdl:output message="sws:OTA_AirBookOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OTA_AirBookSoapBinding" type="sws:OTA_AirBookPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="OTA_AirBookRQ">
      <soap:operation soapAction="OTA_AirBookLLSRQ"/>
      <wsdl:input>
        <soap:header message="sws:OTA_AirBookInput" part="header" use="literal"/>
        <soap:header message="sws:OTA_AirBookInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:OTA_AirBookOutput" part="header" use="literal"/>
        <soap:header message="sws:OTA_AirBookOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OTA_AirBookService">
    <wsdl:port name="OTA_AirBookPortType" binding="sws:OTA_AirBookSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/OTA_AirBookLLS2.0.0RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="OTA_AirBookLLS2.0.0RQ.xsd"/>
  &lt;include schemaLocation="OTA_AirBookLLS2.0.0RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/OTA_AirBookLLS2.0.0RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="OTA_AirBookRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="OriginDestinationInformation">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FlightSegment" maxOccurs="10">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="DestinationLocation">
                      <xs:complexType>
                        <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Equipment" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="AirEquipType" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="MarketingAirline">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="required"/>
                        <xs:attribute name="FlightNumber" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="MarriageGrp" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="OperatingAirline" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="OriginLocation">
                      <xs:complexType>
                        <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ArrivalDateTime" type="xs:string" use="optional"/>
                  <xs:attribute name="BrandID" type="xs:string" use="optional"/>
                  <xs:attribute name="DepartureDateTime" type="sws:dateTime" use="required"/>
                  <xs:attribute name="FlightNumber" type="xs:string" use="required"/>
                  <xs:attribute name="NumberInParty" type="xs:string" use="required"/>
                  <xs:attribute name="ResBookDesigCode" type="xs:string" use="required"/>
                  <xs:attribute name="Status" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ReturnHostCommand" type="xs:boolean" use="optional"/>
      <xs:attribute name="TimeStamp" type="xs:dateTime" use="optional"/>
      <xs:attribute name="Version" type="xs:string" fixed="2.0.0" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/sws_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be ommited. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/OTA_AirBookLLS2.0.0RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://services.sabre.com/STL/v01">
  <xs:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="OTA_AirBookRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="stl:ApplicationResults"/>
        <xs:element name="OriginDestinationOption" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FlightSegment" minOccurs="0" maxOccurs="10">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="DestinationLocation" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="MarketingAirline" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                        <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="MarriageGrp" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Ind" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="OriginLocation" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ArrivalDateTime" type="sws:dateTime" use="optional"/>
                  <xs:attribute name="DepartureDateTime" type="sws:dateTime" use="optional"/>
                  <xs:attribute name="eTicket" type="xs:boolean" use="optional"/>
                  <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                  <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                  <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                  <xs:attribute name="Status" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="Version" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_For_SabreProtocol_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.sabre.com/STL/v01" xmlns="http://services.sabre.com/STL/v01" xmlns:STL="http://services.sabre.com/STL/v01" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added ShortText to SystemSpecificResults.
  		
  		May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace

		Created: April 21, 2011
		Description: This schema is the minimal Sabre Type Library (STL) schema needed for the Sabre SOAP Envelope schema to
		identify the STL_Payload  substitution group head element and type to be extended by message schemas..

		Copyright Sabre 2011
		The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only with the written permission of Sabre or in accordance with the terms and conditions stipulated in theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://services.sabre.com/STL_Header/v120" schemaLocation="STL_Header_v.1.2.0.xsd"/>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="ApplicationResults" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <!--- Results and Problem Information components.-->
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"></xsd:complexType>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="stlh:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="stlh:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="stlh:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="stlh:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="stlh:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="stlh:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="stlh:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_Header_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Header/v120" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns="http://services.sabre.com/STL_Header/v120">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added key to trace attributes.
			
			August 8 - added HostCommand to system specific results.
			
		  	May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace
		
			Created: April 21, 2011
			Description: This schema is a standalone schema that defines Header metadata 
			structures that are independent of the payload schema.
			
			Copyright Sabre 2011
			The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only
			with the written permission of Sabre or in accordance with the terms and conditions stipulated in
			theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Diagnostics" type="Diagnostics"/>
  <xsd:element name="Identification" type="Identification"/>
  <xsd:element name="ResultSummary" type="ResultSummary"/>
  <xsd:element name="Security" type="Security"/>
  <xsd:element name="Service" type="Service"/>
  <xsd:element name="Traces" type="Traces"/>
  <xsd:element name="SabreHeader" type="SabreHeader"/>
  <xsd:complexType name="SabreHeader">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="SabreHeaderGroup">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DiagnosticResults">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Diagnostics">
    <xsd:sequence>
      <xsd:element name="Level" type="DiagnosticLevels" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the level of diagnostic data requested or provided.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Data" type="Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Block of diagnostic data included in request or returned in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Diagnostic" type="DiagnosticResults" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Diagnostic data. Must be defined in a differrent namespace as the header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identification">
    <xsd:annotation>
      <xsd:documentation>The Identification metadata uniquely identify each message instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CustomerID" type="PseudoCityCodeOrOAC" minOccurs="1"/>
      <xsd:element name="CustomerAppID" type="stlh:Text.Short" minOccurs="0"/>
      <xsd:element name="ConversationID" type="TrackingID" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The ConversationId element is a string identifying the set of related messages that make up a
						conversation between two or more Parties. The Party initiating a conversation determines the value of
						the ConversationId element that shall be reflected in all messages pertaining to that
						conversation. It remains constant for all messages within a conversation.
						Service providers are expected to increment the optional TrackingID integer attribute when present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MessageID" type="Identifier" minOccurs="1"/>
      <xsd:element name="TimeStamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identifier.System">
    <xsd:annotation>
      <xsd:documentation>System identifier used to uniquily identify the specific system.
 	"Source" is used to return the application name responsible for fulfilling the particular request transaction.
	"ApplicationInstance" is used to return the application instance responsible for fulfilling the particular request transaction.
	"Cluster" is used to return the application cluster responsible for fulfilling the particular request transaction.
	"HostName" is used to return the particular server name responsible for fulfilling the particular request transaction.
	Â Example: Source ApplicationInstance="PROD1" Cluster="PROD TPF SCC" HostName="PSS" TPF Source</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="instance" type="Identifier"/>
        <xsd:attribute name="cluster" type="Identifier"/>
        <xsd:attribute name="host" type="Identifier"/>
        <xsd:attribute name="uri" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The uri representing the endpoint reference by which this system can be accessed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProblemBase">
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ProblemSummary">
    <xsd:sequence>
      <xsd:element name="Source" type="Identifier.System" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The system that the reporting system deemed to be the cause of the problem. If omitted, the
						reporting system is also the source of the problem. For application errors, the element may
						identify a system the application is dependent upon that failed to respond. For validation
						errors this may identify the service consumer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReportingSystem" type="Identifier.System">
        <xsd:annotation>
          <xsd:documentation>The system that created the results record. If the Source system identifier is omitted, the
						system identified here both was the cause of the problem and created the result record.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="Message.Condition" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>An informative code and message that describes the results. Note: the message code and text must
						NOT be required to process to understand retry/compensate status.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ResultSummary">
    <xsd:choice>
      <xsd:element name="Success" type="EmptyElement">
        <xsd:annotation>
          <xsd:documentation>Success indicates that the request was
						processed successfully.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Error" type="ProblemSummary"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Security">
    <xsd:annotation>
      <xsd:documentation>Header records no longer contain user credentials (username/password) as these are needed only for 
     		 SessionCreateRQ in which the credentials should be in the payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="SecurityToken" type="Text.Long"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="Text.Short">
        <xsd:attribute name="operation" type="Text.Short"/>
        <xsd:attribute name="version" type="Text.Short"/>
        <xsd:attribute name="ttl" type="xsd:nonNegativeInteger"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Traces">
    <xsd:sequence>
      <xsd:element name="Trace" type="TraceRecord" minOccurs="0" maxOccurs="999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TraceRecord">
    <xsd:annotation>
      <xsd:documentation>Record for all systems (consumer, proxies and gateways, providers) to use to trace the message. 
			The value is the common system name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="key" type="Text.Long">
          <xsd:annotation>
            <xsd:documentation>The key attribute is similar to ConversationID but is provided by the service requestor or entrypoint gateway and 
							must be unique across all Sabre gateways. Each gateway instance must prepend the ID value with its unique system identifier. 
							Internal service consumers must provide this value which may be their unique system identifier concantanated 
							with the ConversationID.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="start" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="end" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. 
						Example: 2002-10-10T12:00:00+05:00.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appInstance" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application instance involved in the particular transaction. 
						For example: PROD1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cluster" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application server cluster involved in the particular transaction. 
						Example: PROD TPFC SCC</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The server name involved in the particular transaction. 
						Example: PSS</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The targetURI is the endpoint address this system sent the message to. 
						For ServiceProviders it should be the abstract service address which is the address used by 
						registries to look up the actual service endpoint URI. The endpoint address may be a queue
						name (MOM service name).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="role" type="TraceRole"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrackingID">
    <xsd:annotation>
      <xsd:documentation>Tracking Identifier is an identifier intended for use to a set of related items and provide an 
			optional sequence number for the items.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="seq" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DiagnosticLevels">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Mock">
        <xsd:annotation>
          <xsd:documentation>Return a sample message without invoking service logic.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Simulate">
        <xsd:annotation>
          <xsd:documentation>Compute response without making changes to service data, state or status.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EmptyElement">
    <xsd:annotation>
      <xsd:documentation>Elements of this type are used for indicators whose presense denotes the 
				condition described by their name. They  have no content nor any attributes. 
				For example, an empty Success element denote that the process was successfully completed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCodeOrOAC">
    <xsd:annotation>
      <xsd:documentation>Customer Identifier assigned to office or agency or location. Commonly use values are 
			Psuedo City Code - 3 to 16 characters or the Sabre Office accounting code (OAC) which can be upto 25 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TraceRole">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="consumer">
        <xsd:annotation>
          <xsd:documentation>the system that initiated the service request and will be the ultimate consumer 
					of the service results.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="provider">
        <xsd:annotation>
          <xsd:documentation>System that performs the service operation defined in the service interface. 
					For RQ/RS exchange patterns, the provider reads the request message, applies business logic and 
					returns a response.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="gateway"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="OTA_AirBookLLSRQ" name="OTA_AirBookRQ" bindingOperationName="OTA_AirBookRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="4d5e8045-fe46-420c-9e7b-0faa6d002de4"><con:settings/><con:call name="OTA_AirBookLLSRQ" id="21002a91-6460-4d66-b435-888179eb815f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversationID</eb:ConversationId>
         <eb:Service eb:type="OTA">OTA_AirBookLLSRQ</eb:Service>
         <eb:Action>OTA_AirBookLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESG!ICESMSLB\/RES.LB!-4210745990415812605!1154630!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <OTA_AirBookRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <OriginDestinationInformation>
            <FlightSegment DepartureDateTime="2012-11-22T07:30" FlightNumber="1887" NumberInParty="2" Status="NN" ResBookDesigCode="Y">
               <DestinationLocation LocationCode="LAS"/>
               <MarketingAirline Code="AA" FlightNumber="1887"/>
               <OriginLocation LocationCode="DFW"/>
            </FlightSegment>
            <FlightSegment DepartureDateTime="2012-11-29T06:00" FlightNumber="2032" NumberInParty="2" Status="NN" ResBookDesigCode="Y">
               <DestinationLocation LocationCode="DFW"/>
               <MarketingAirline Code="AA" FlightNumber="2032"/>
               <OriginLocation LocationCode="LAS"/>
            </FlightSegment>
         </OriginDestinationInformation>
      </OTA_AirBookRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA_AirBookLLSRQ"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="OTA_AirPriceSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}OTA_AirPriceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/tpfc/OTA_AirPriceLLS2.0.0RQ.wsdl" id="3789b214-b9d9-4e0e-a967-8de9fad77080" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/tpfc/OTA_AirPriceLLS2.0.0RQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/OTA_AirPriceLLS2.0.0RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sws_xsd="http://webservices.sabre.com/sabreXML/2011/10" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2011/10" schemaLocation="OTA_AirPriceLLS2.0.0RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
      <xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="OTA_AirPriceInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:OTA_AirPriceRQ"/>
  </wsdl:message>
  <wsdl:message name="OTA_AirPriceOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:OTA_AirPriceRS"/>
  </wsdl:message>
  <wsdl:portType name="OTA_AirPricePortType">
    <wsdl:operation name="OTA_AirPriceRQ">
      <wsdl:input message="sws:OTA_AirPriceInput"/>
      <wsdl:output message="sws:OTA_AirPriceOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="OTA_AirPriceSoapBinding" type="sws:OTA_AirPricePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="OTA_AirPriceRQ">
      <soap:operation soapAction="OTA_AirPriceLLSRQ"/>
      <wsdl:input>
        <soap:header message="sws:OTA_AirPriceInput" part="header" use="literal"/>
        <soap:header message="sws:OTA_AirPriceInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:OTA_AirPriceOutput" part="header" use="literal"/>
        <soap:header message="sws:OTA_AirPriceOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="OTA_AirPriceService">
    <wsdl:port name="OTA_AirPricePortType" binding="sws:OTA_AirPriceSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/OTA_AirPriceLLS2.0.0RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="OTA_AirPriceLLS2.0.0RQ.xsd"/>
  &lt;include schemaLocation="OTA_AirPriceLLS2.0.0RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/OTA_AirPriceLLS2.0.0RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="OTA_AirPriceRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="OriginDestinationInformation" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FlightSegment" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="DestinationLocation">
                      <xs:complexType>
                        <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="MarketingCarrier">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="required"/>
                        <xs:attribute name="FlightNumber" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="OriginLocation">
                      <xs:complexType>
                        <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ArrivalDateTime" type="sws:dateTime" use="optional"/>
                  <xs:attribute name="ConnectionInd" type="xs:string" use="optional"/>
                  <xs:attribute name="DepartureDateTime" type="sws:dateTime" use="optional"/>
                  <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                  <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                  <xs:attribute name="RPH" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PriceRequestInformation">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OptionalQualifiers">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="FlightQualifiers" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="VendorPrefs" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Airline">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="MiscQualifiers" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AirExtras" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="ProgramID" type="xs:string" use="required"/>
                                    <xs:attribute name="TierLevel" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Qualifier" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                              <xs:attribute name="Summary" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BaggageAllowance" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Number" type="xs:string" use="optional"/>
                              <xs:attribute name="Weight" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Commission" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Amount" type="xs:string" use="optional"/>
                              <xs:attribute name="Percent" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Endorsements" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Text" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="Override" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="HemisphereCode" minOccurs="0" type="xs:string"/>
                          <xs:element name="JourneyCode" minOccurs="0" type="xs:string"/>
                          <xs:element name="TourCode" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="BSPInclusiveTour" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="BulkTour" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="InclusiveTour" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="SuppressIT" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Text" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PricingQualifiers">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Account" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Code" maxOccurs="4" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BankersSellingRate" minOccurs="0" type="xs:string"/>
                          <xs:element name="BargainFinder" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Historical" type="xs:boolean" use="optional"/>
                              <xs:attribute name="Rebook" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BuyingDate" minOccurs="0" type="sws:date"/>
                          <xs:element name="CommandPricing" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Discount" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="AuthCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FareBasis" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                    <xs:attribute name="TicketDesignator" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Corporate" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="ID" maxOccurs="4" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="Force" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Fare" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Type" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FareOptions" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Excursion" type="xs:boolean" use="optional"/>
                              <xs:attribute name="Net" type="xs:boolean" use="optional"/>
                              <xs:attribute name="Public" type="xs:boolean" use="optional"/>
                              <xs:attribute name="Private" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ItineraryOptions" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="BreakFare" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="ForceConnection" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="ForceStopOver" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="OverrideBreak" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="SegmentSelect" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="required"/>
                                    <xs:attribute name="EndNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="SideTrip" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="required"/>
                                    <xs:attribute name="EndNumber" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="NameSelect" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="NameNumber" type="xs:string" use="required"/>
                              <xs:attribute name="EndNameNumber" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="NetRemit" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CAR" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Cash" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Credit" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Overrides" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="FuelSurchargeOverride" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="GoverningCarrierOverride" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Airline">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="NoAdvancePurchase" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="NoFareRestrictions" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="NoMinMaxStay" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="NoPenalty" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                    <xs:attribute name="PenaltyPercentage" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Purchase" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Ticketing" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PassengerStatus" minOccurs="0" type="xs:string"/>
                          <xs:element name="PassengerType" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="required"/>
                              <xs:attribute name="Force" type="xs:boolean" use="optional"/>
                              <xs:attribute name="Quantity" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PlusUp" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="TicketDesignator" minOccurs="0" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="Amount" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ShipsRegistry" minOccurs="0" type="xs:string"/>
                          <xs:element name="Taxes" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="NoTax" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="TaxExempt" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="TaxOverride" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="required"/>
                                    <xs:attribute name="Code" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ValidityDates" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="NotValidAfter" minOccurs="0" type="sws:date"/>
                                <xs:element name="NotValidBefore" minOccurs="0" type="sws:date"/>
                                <xs:element name="Segment">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="required"/>
                                    <xs:attribute name="EndNumber" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="AlternateCurrencyCode" type="xs:string" use="optional"/>
                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                        <xs:attribute name="Source" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="FutureTicket" type="xs:boolean" use="optional"/>
            <xs:attribute name="Retain" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ReturnHostCommand" type="xs:boolean" use="optional"/>
      <xs:attribute name="TimeStamp" type="xs:dateTime" use="optional"/>
      <xs:attribute name="Version" type="xs:string" fixed="2.0.0" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/sws_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be ommited. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/OTA_AirPriceLLS2.0.0RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://services.sabre.com/STL/v01">
  <xs:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="OTA_AirPriceRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="stl:ApplicationResults"/>
        <xs:element name="PriceQuote" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MiscInformation" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="HeaderInformation" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="BargainFinder" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="AlternateBooking" minOccurs="0" maxOccurs="24">
                                  <xs:complexType>
                                    <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="LastTicketingDate" minOccurs="0" type="xs:string"/>
                          <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                          <xs:element name="ValidatingCarrier" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="OptionalCharges" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ChargeDetails" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="ChargeBreakdown" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Base" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Equiv" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="PassengerTypeQuantity" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                          <xs:attribute name="Group" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Taxes" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Tax" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Total" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="NoChargeInd" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DiscontinueDate" minOccurs="0" type="sws:date"/>
                                <xs:element name="EffectiveDate" minOccurs="0" type="sws:date"/>
                                <xs:element name="PurchaseBy" minOccurs="0" type="sws:date"/>
                                <xs:element name="ReasonForIssuance" minOccurs="0">
                                  <xs:complexType>
                                    <xs:simpleContent>
                                      <xs:extension base="xs:string">
                                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                                      </xs:extension>
                                    </xs:simpleContent>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="SSIM" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Code" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="SSR" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Code" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Ticket" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="optional"/>
                                    <xs:attribute name="Simultaneous" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="TourCode" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="VendorPrefs" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Airline" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="CommericalName" type="xs:string" use="optional"/>
                              <xs:attribute name="DisplayOnly" type="xs:string" use="optional"/>
                              <xs:attribute name="EMD_Type" type="xs:string" use="optional"/>
                              <xs:attribute name="FeeApplication" type="xs:string" use="optional"/>
                              <xs:attribute name="FQTV_Tier" type="xs:string" use="optional"/>
                              <xs:attribute name="GuaranteeInd" type="xs:string" use="optional"/>
                              <xs:attribute name="IATA_Application" type="xs:string" use="optional"/>
                              <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="Owner" type="xs:string" use="optional"/>
                              <xs:attribute name="RefundForm" type="xs:string" use="optional"/>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                              <xs:attribute name="SegmentJourneyCouponInd" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ItineraryInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="FlightSegment" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="DestinationLocation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="MarketingAirline" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                          <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="OriginLocation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="DepartureDateTime" type="sws:date" use="optional"/>
                                    <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Status" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="BookingMethodReq" type="xs:string" use="optional"/>
                              <xs:attribute name="SegmentCount" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="PricedItinerary" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="AirItineraryPricingInfo" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AncillaryFees" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="FeeInformation" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="TaxAmount" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="TaxID" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                    <xs:attribute name="NumFees" type="xs:string" use="optional"/>
                                    <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FareCalculation" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ItinTotalFare" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="BaseFare" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Commission" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="EquivFare" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PrivateFare" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Taxes" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Tax" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="TaxName" type="xs:string" use="optional"/>
                                          <xs:attribute name="TicketingTaxCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="TotalFare" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Warnings" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Warning" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PassengerTypeQuantity" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                              <xs:attribute name="Quantity" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PTC_FareBreakdown" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="FareBasis" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                    <xs:attribute name="ContractNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="CorporateID" type="xs:string" use="optional"/>
                                    <xs:attribute name="FarePassengerType" type="xs:string" use="optional"/>
                                    <xs:attribute name="FareType" type="xs:string" use="optional"/>
                                    <xs:attribute name="FilingCarrier" type="xs:string" use="optional"/>
                                    <xs:attribute name="GlobalInd" type="xs:string" use="optional"/>
                                    <xs:attribute name="Market" type="xs:string" use="optional"/>
                                    <xs:attribute name="SurfaceSegment" type="xs:string" use="optional"/>
                                    <xs:attribute name="TicketDesignator" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Surcharges" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:simpleContent>
                                      <xs:extension base="xs:string">
                                        <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                        <xs:attribute name="Type" type="xs:string" use="optional"/>
                                      </xs:extension>
                                    </xs:simpleContent>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="TicketingFees" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="FeeInformation" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="AccountData" type="xs:string" use="optional"/>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="FunctionCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="ServiceType" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                  <xs:attribute name="TotalAmount" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="Version" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_For_SabreProtocol_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.sabre.com/STL/v01" xmlns="http://services.sabre.com/STL/v01" xmlns:STL="http://services.sabre.com/STL/v01" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added ShortText to SystemSpecificResults.
  		
  		May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace

		Created: April 21, 2011
		Description: This schema is the minimal Sabre Type Library (STL) schema needed for the Sabre SOAP Envelope schema to
		identify the STL_Payload  substitution group head element and type to be extended by message schemas..

		Copyright Sabre 2011
		The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only with the written permission of Sabre or in accordance with the terms and conditions stipulated in theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://services.sabre.com/STL_Header/v120" schemaLocation="STL_Header_v.1.2.0.xsd"/>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="ApplicationResults" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <!--- Results and Problem Information components.-->
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"></xsd:complexType>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="stlh:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="stlh:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="stlh:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="stlh:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="stlh:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="stlh:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="stlh:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_Header_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Header/v120" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns="http://services.sabre.com/STL_Header/v120">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added key to trace attributes.
			
			August 8 - added HostCommand to system specific results.
			
		  	May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace
		
			Created: April 21, 2011
			Description: This schema is a standalone schema that defines Header metadata 
			structures that are independent of the payload schema.
			
			Copyright Sabre 2011
			The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only
			with the written permission of Sabre or in accordance with the terms and conditions stipulated in
			theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Diagnostics" type="Diagnostics"/>
  <xsd:element name="Identification" type="Identification"/>
  <xsd:element name="ResultSummary" type="ResultSummary"/>
  <xsd:element name="Security" type="Security"/>
  <xsd:element name="Service" type="Service"/>
  <xsd:element name="Traces" type="Traces"/>
  <xsd:element name="SabreHeader" type="SabreHeader"/>
  <xsd:complexType name="SabreHeader">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="SabreHeaderGroup">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DiagnosticResults">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Diagnostics">
    <xsd:sequence>
      <xsd:element name="Level" type="DiagnosticLevels" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the level of diagnostic data requested or provided.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Data" type="Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Block of diagnostic data included in request or returned in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Diagnostic" type="DiagnosticResults" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Diagnostic data. Must be defined in a differrent namespace as the header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identification">
    <xsd:annotation>
      <xsd:documentation>The Identification metadata uniquely identify each message instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CustomerID" type="PseudoCityCodeOrOAC" minOccurs="1"/>
      <xsd:element name="CustomerAppID" type="stlh:Text.Short" minOccurs="0"/>
      <xsd:element name="ConversationID" type="TrackingID" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The ConversationId element is a string identifying the set of related messages that make up a
						conversation between two or more Parties. The Party initiating a conversation determines the value of
						the ConversationId element that shall be reflected in all messages pertaining to that
						conversation. It remains constant for all messages within a conversation.
						Service providers are expected to increment the optional TrackingID integer attribute when present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MessageID" type="Identifier" minOccurs="1"/>
      <xsd:element name="TimeStamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identifier.System">
    <xsd:annotation>
      <xsd:documentation>System identifier used to uniquily identify the specific system.
 	"Source" is used to return the application name responsible for fulfilling the particular request transaction.
	"ApplicationInstance" is used to return the application instance responsible for fulfilling the particular request transaction.
	"Cluster" is used to return the application cluster responsible for fulfilling the particular request transaction.
	"HostName" is used to return the particular server name responsible for fulfilling the particular request transaction.
	Â Example: Source ApplicationInstance="PROD1" Cluster="PROD TPF SCC" HostName="PSS" TPF Source</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="instance" type="Identifier"/>
        <xsd:attribute name="cluster" type="Identifier"/>
        <xsd:attribute name="host" type="Identifier"/>
        <xsd:attribute name="uri" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The uri representing the endpoint reference by which this system can be accessed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProblemBase">
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ProblemSummary">
    <xsd:sequence>
      <xsd:element name="Source" type="Identifier.System" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The system that the reporting system deemed to be the cause of the problem. If omitted, the
						reporting system is also the source of the problem. For application errors, the element may
						identify a system the application is dependent upon that failed to respond. For validation
						errors this may identify the service consumer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReportingSystem" type="Identifier.System">
        <xsd:annotation>
          <xsd:documentation>The system that created the results record. If the Source system identifier is omitted, the
						system identified here both was the cause of the problem and created the result record.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="Message.Condition" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>An informative code and message that describes the results. Note: the message code and text must
						NOT be required to process to understand retry/compensate status.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ResultSummary">
    <xsd:choice>
      <xsd:element name="Success" type="EmptyElement">
        <xsd:annotation>
          <xsd:documentation>Success indicates that the request was
						processed successfully.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Error" type="ProblemSummary"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Security">
    <xsd:annotation>
      <xsd:documentation>Header records no longer contain user credentials (username/password) as these are needed only for 
     		 SessionCreateRQ in which the credentials should be in the payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="SecurityToken" type="Text.Long"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="Text.Short">
        <xsd:attribute name="operation" type="Text.Short"/>
        <xsd:attribute name="version" type="Text.Short"/>
        <xsd:attribute name="ttl" type="xsd:nonNegativeInteger"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Traces">
    <xsd:sequence>
      <xsd:element name="Trace" type="TraceRecord" minOccurs="0" maxOccurs="999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TraceRecord">
    <xsd:annotation>
      <xsd:documentation>Record for all systems (consumer, proxies and gateways, providers) to use to trace the message. 
			The value is the common system name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="key" type="Text.Long">
          <xsd:annotation>
            <xsd:documentation>The key attribute is similar to ConversationID but is provided by the service requestor or entrypoint gateway and 
							must be unique across all Sabre gateways. Each gateway instance must prepend the ID value with its unique system identifier. 
							Internal service consumers must provide this value which may be their unique system identifier concantanated 
							with the ConversationID.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="start" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="end" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. 
						Example: 2002-10-10T12:00:00+05:00.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appInstance" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application instance involved in the particular transaction. 
						For example: PROD1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cluster" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application server cluster involved in the particular transaction. 
						Example: PROD TPFC SCC</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The server name involved in the particular transaction. 
						Example: PSS</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The targetURI is the endpoint address this system sent the message to. 
						For ServiceProviders it should be the abstract service address which is the address used by 
						registries to look up the actual service endpoint URI. The endpoint address may be a queue
						name (MOM service name).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="role" type="TraceRole"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrackingID">
    <xsd:annotation>
      <xsd:documentation>Tracking Identifier is an identifier intended for use to a set of related items and provide an 
			optional sequence number for the items.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="seq" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DiagnosticLevels">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Mock">
        <xsd:annotation>
          <xsd:documentation>Return a sample message without invoking service logic.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Simulate">
        <xsd:annotation>
          <xsd:documentation>Compute response without making changes to service data, state or status.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EmptyElement">
    <xsd:annotation>
      <xsd:documentation>Elements of this type are used for indicators whose presense denotes the 
				condition described by their name. They  have no content nor any attributes. 
				For example, an empty Success element denote that the process was successfully completed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCodeOrOAC">
    <xsd:annotation>
      <xsd:documentation>Customer Identifier assigned to office or agency or location. Commonly use values are 
			Psuedo City Code - 3 to 16 characters or the Sabre Office accounting code (OAC) which can be upto 25 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TraceRole">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="consumer">
        <xsd:annotation>
          <xsd:documentation>the system that initiated the service request and will be the ultimate consumer 
					of the service results.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="provider">
        <xsd:annotation>
          <xsd:documentation>System that performs the service operation defined in the service interface. 
					For RQ/RS exchange patterns, the provider reads the request message, applies business logic and 
					returns a response.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="gateway"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="OTA_AirPriceLLSRQ" name="OTA_AirPriceRQ" bindingOperationName="OTA_AirPriceRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="977776e1-be67-49e2-81f6-79e819d96085"><con:settings/><con:call name="OTA_AirPriceLLSRQ" id="40b89de4-b32c-4d06-9198-f9a053a7302a"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversationID</eb:ConversationId>
         <eb:Service eb:type="OTA">OTA_AirPriceLLSRQ</eb:Service>
         <eb:Action>OTA_AirPriceLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESG!ICESMSLB\/RES.LB!-4210745990415812605!1154630!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <OTA_AirPriceRQ Version="2.0.0">
         <PriceRequestInformation Retain="true">
            <OptionalQualifiers>
               <PricingQualifiers>
                  <PassengerType Code="ADT" Quantity="2"/>
               </PricingQualifiers>
            </OptionalQualifiers>
         </PriceRequestInformation>
      </OTA_AirPriceRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA_AirPriceLLSRQ"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="MiscSegmentSellSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}MiscSegmentSellSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/tpfc/MiscSegmentSellLLS2.0.0RQ.wsdl" id="44aa5378-594d-46f4-a518-5aad40ba5500" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/tpfc/MiscSegmentSellLLS2.0.0RQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/MiscSegmentSellLLS2.0.0RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sws_xsd="http://webservices.sabre.com/sabreXML/2011/10" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2011/10" schemaLocation="MiscSegmentSellLLS2.0.0RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
      <xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="MiscSegmentSellInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:MiscSegmentSellRQ"/>
  </wsdl:message>
  <wsdl:message name="MiscSegmentSellOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:MiscSegmentSellRS"/>
  </wsdl:message>
  <wsdl:portType name="MiscSegmentSellPortType">
    <wsdl:operation name="MiscSegmentSellRQ">
      <wsdl:input message="sws:MiscSegmentSellInput"/>
      <wsdl:output message="sws:MiscSegmentSellOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="MiscSegmentSellSoapBinding" type="sws:MiscSegmentSellPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="MiscSegmentSellRQ">
      <soap:operation soapAction="MiscSegmentSellLLSRQ"/>
      <wsdl:input>
        <soap:header message="sws:MiscSegmentSellInput" part="header" use="literal"/>
        <soap:header message="sws:MiscSegmentSellInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:MiscSegmentSellOutput" part="header" use="literal"/>
        <soap:header message="sws:MiscSegmentSellOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="MiscSegmentSellService">
    <wsdl:port name="MiscSegmentSellPortType" binding="sws:MiscSegmentSellSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/MiscSegmentSellLLS2.0.0RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="MiscSegmentSellLLS2.0.0RQ.xsd"/>
  &lt;include schemaLocation="MiscSegmentSellLLS2.0.0RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/MiscSegmentSellLLS2.0.0RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="MiscSegmentSellRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="MiscSegment">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OriginLocation">
                <xs:complexType>
                  <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="Text" type="xs:string"/>
              <xs:element name="VendorPrefs">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Airline">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="DepartureDateTime" type="sws:date" use="required"/>
            <xs:attribute name="InsertAfter" type="xs:integer" use="optional"/>
            <xs:attribute name="NumberInParty" type="xs:integer" use="required"/>
            <xs:attribute name="Status" type="xs:string" use="required"/>
            <xs:attribute name="Type" use="required">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:enumeration value="INS"/>
                  <xs:enumeration value="MCO"/>
                  <xs:enumeration value="OTH"/>
                  <xs:enumeration value="PTA"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ReturnHostCommand" type="xs:boolean" use="optional"/>
      <xs:attribute name="TimeStamp" type="xs:dateTime" use="optional"/>
      <xs:attribute name="Version" type="xs:string" fixed="2.0.0" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/sws_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be ommited. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/MiscSegmentSellLLS2.0.0RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://services.sabre.com/STL/v01">
  <xs:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="MiscSegmentSellRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="stl:ApplicationResults"/>
        <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
      </xs:sequence>
      <xs:attribute name="Version" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_For_SabreProtocol_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.sabre.com/STL/v01" xmlns="http://services.sabre.com/STL/v01" xmlns:STL="http://services.sabre.com/STL/v01" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added ShortText to SystemSpecificResults.
  		
  		May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace

		Created: April 21, 2011
		Description: This schema is the minimal Sabre Type Library (STL) schema needed for the Sabre SOAP Envelope schema to
		identify the STL_Payload  substitution group head element and type to be extended by message schemas..

		Copyright Sabre 2011
		The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only with the written permission of Sabre or in accordance with the terms and conditions stipulated in theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://services.sabre.com/STL_Header/v120" schemaLocation="STL_Header_v.1.2.0.xsd"/>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="ApplicationResults" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <!--- Results and Problem Information components.-->
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"></xsd:complexType>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="stlh:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="stlh:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="stlh:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="stlh:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="stlh:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="stlh:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="stlh:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_Header_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Header/v120" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns="http://services.sabre.com/STL_Header/v120">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added key to trace attributes.
			
			August 8 - added HostCommand to system specific results.
			
		  	May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace
		
			Created: April 21, 2011
			Description: This schema is a standalone schema that defines Header metadata 
			structures that are independent of the payload schema.
			
			Copyright Sabre 2011
			The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only
			with the written permission of Sabre or in accordance with the terms and conditions stipulated in
			theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Diagnostics" type="Diagnostics"/>
  <xsd:element name="Identification" type="Identification"/>
  <xsd:element name="ResultSummary" type="ResultSummary"/>
  <xsd:element name="Security" type="Security"/>
  <xsd:element name="Service" type="Service"/>
  <xsd:element name="Traces" type="Traces"/>
  <xsd:element name="SabreHeader" type="SabreHeader"/>
  <xsd:complexType name="SabreHeader">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="SabreHeaderGroup">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DiagnosticResults">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Diagnostics">
    <xsd:sequence>
      <xsd:element name="Level" type="DiagnosticLevels" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the level of diagnostic data requested or provided.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Data" type="Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Block of diagnostic data included in request or returned in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Diagnostic" type="DiagnosticResults" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Diagnostic data. Must be defined in a differrent namespace as the header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identification">
    <xsd:annotation>
      <xsd:documentation>The Identification metadata uniquely identify each message instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CustomerID" type="PseudoCityCodeOrOAC" minOccurs="1"/>
      <xsd:element name="CustomerAppID" type="stlh:Text.Short" minOccurs="0"/>
      <xsd:element name="ConversationID" type="TrackingID" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The ConversationId element is a string identifying the set of related messages that make up a
						conversation between two or more Parties. The Party initiating a conversation determines the value of
						the ConversationId element that shall be reflected in all messages pertaining to that
						conversation. It remains constant for all messages within a conversation.
						Service providers are expected to increment the optional TrackingID integer attribute when present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MessageID" type="Identifier" minOccurs="1"/>
      <xsd:element name="TimeStamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identifier.System">
    <xsd:annotation>
      <xsd:documentation>System identifier used to uniquily identify the specific system.
 	"Source" is used to return the application name responsible for fulfilling the particular request transaction.
	"ApplicationInstance" is used to return the application instance responsible for fulfilling the particular request transaction.
	"Cluster" is used to return the application cluster responsible for fulfilling the particular request transaction.
	"HostName" is used to return the particular server name responsible for fulfilling the particular request transaction.
	Â Example: Source ApplicationInstance="PROD1" Cluster="PROD TPF SCC" HostName="PSS" TPF Source</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="instance" type="Identifier"/>
        <xsd:attribute name="cluster" type="Identifier"/>
        <xsd:attribute name="host" type="Identifier"/>
        <xsd:attribute name="uri" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The uri representing the endpoint reference by which this system can be accessed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProblemBase">
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ProblemSummary">
    <xsd:sequence>
      <xsd:element name="Source" type="Identifier.System" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The system that the reporting system deemed to be the cause of the problem. If omitted, the
						reporting system is also the source of the problem. For application errors, the element may
						identify a system the application is dependent upon that failed to respond. For validation
						errors this may identify the service consumer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReportingSystem" type="Identifier.System">
        <xsd:annotation>
          <xsd:documentation>The system that created the results record. If the Source system identifier is omitted, the
						system identified here both was the cause of the problem and created the result record.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="Message.Condition" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>An informative code and message that describes the results. Note: the message code and text must
						NOT be required to process to understand retry/compensate status.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ResultSummary">
    <xsd:choice>
      <xsd:element name="Success" type="EmptyElement">
        <xsd:annotation>
          <xsd:documentation>Success indicates that the request was
						processed successfully.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Error" type="ProblemSummary"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Security">
    <xsd:annotation>
      <xsd:documentation>Header records no longer contain user credentials (username/password) as these are needed only for 
     		 SessionCreateRQ in which the credentials should be in the payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="SecurityToken" type="Text.Long"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="Text.Short">
        <xsd:attribute name="operation" type="Text.Short"/>
        <xsd:attribute name="version" type="Text.Short"/>
        <xsd:attribute name="ttl" type="xsd:nonNegativeInteger"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Traces">
    <xsd:sequence>
      <xsd:element name="Trace" type="TraceRecord" minOccurs="0" maxOccurs="999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TraceRecord">
    <xsd:annotation>
      <xsd:documentation>Record for all systems (consumer, proxies and gateways, providers) to use to trace the message. 
			The value is the common system name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="key" type="Text.Long">
          <xsd:annotation>
            <xsd:documentation>The key attribute is similar to ConversationID but is provided by the service requestor or entrypoint gateway and 
							must be unique across all Sabre gateways. Each gateway instance must prepend the ID value with its unique system identifier. 
							Internal service consumers must provide this value which may be their unique system identifier concantanated 
							with the ConversationID.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="start" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="end" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. 
						Example: 2002-10-10T12:00:00+05:00.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appInstance" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application instance involved in the particular transaction. 
						For example: PROD1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cluster" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application server cluster involved in the particular transaction. 
						Example: PROD TPFC SCC</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The server name involved in the particular transaction. 
						Example: PSS</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The targetURI is the endpoint address this system sent the message to. 
						For ServiceProviders it should be the abstract service address which is the address used by 
						registries to look up the actual service endpoint URI. The endpoint address may be a queue
						name (MOM service name).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="role" type="TraceRole"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrackingID">
    <xsd:annotation>
      <xsd:documentation>Tracking Identifier is an identifier intended for use to a set of related items and provide an 
			optional sequence number for the items.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="seq" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DiagnosticLevels">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Mock">
        <xsd:annotation>
          <xsd:documentation>Return a sample message without invoking service logic.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Simulate">
        <xsd:annotation>
          <xsd:documentation>Compute response without making changes to service data, state or status.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EmptyElement">
    <xsd:annotation>
      <xsd:documentation>Elements of this type are used for indicators whose presense denotes the 
				condition described by their name. They  have no content nor any attributes. 
				For example, an empty Success element denote that the process was successfully completed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCodeOrOAC">
    <xsd:annotation>
      <xsd:documentation>Customer Identifier assigned to office or agency or location. Commonly use values are 
			Psuedo City Code - 3 to 16 characters or the Sabre Office accounting code (OAC) which can be upto 25 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TraceRole">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="consumer">
        <xsd:annotation>
          <xsd:documentation>the system that initiated the service request and will be the ultimate consumer 
					of the service results.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="provider">
        <xsd:annotation>
          <xsd:documentation>System that performs the service operation defined in the service interface. 
					For RQ/RS exchange patterns, the provider reads the request message, applies business logic and 
					returns a response.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="gateway"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="MiscSegmentSellLLSRQ" name="MiscSegmentSellLLSRQ" bindingOperationName="MiscSegmentSellRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="f16d8cb3-3a6e-4442-bc38-e54bec67ebb7"><con:settings/><con:call name="MiscSegmentSellLLSRQ" id="7d4e3e27-b973-4c82-86d7-1ffb7ca6e0fa"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversationID</eb:ConversationId>
         <eb:Service eb:type="OTA">MiscSegmentSellLLSRQ</eb:Service>
         <eb:Action>MiscSegmentSellLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESG!ICESMSLB\/RES.LB!-4210745990415812605!1154630!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <MiscSegmentSellRQ Version="1.0.1" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="ipcc"/>
         </POS>
         <Segment Type="OTH" NumberInParty="1" Vendor="AA" Date="2011-11-29">
            <MiscLocation LocationCode="LAX"/>
            <Text>OTH SEGMENT</Text>
         </Segment>
      </MiscSegmentSellRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="MiscSegmentSellLLSRQ"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="AddRemarkSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}AddRemarkSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/AddRemarkLLS1.4.1RQ.wsdl" id="513c1268-6311-4375-8107-112bb85a0d53" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/AddRemarkLLS1.4.1RQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/AddRemarkLLS1.4.1RQ.wsdl</con:url><con:content><![CDATA[<definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd1="http://webservices.sabre.com/sabreXML/2003/07" xmlns:tns="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <types>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2003/07" schemaLocation="AddRemarkLLS1.4.1RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
    </xsd:schema>
  </types>
  <message name="AddRemarkInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:AddRemarkRQ"/>
  </message>
  <message name="AddRemarkOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:AddRemarkRS"/>
  </message>
  <portType name="AddRemarkPortType">
    <operation name="AddRemarkRQ">
      <input message="tns:AddRemarkInput"/>
      <output message="tns:AddRemarkOutput"/>
    </operation>
  </portType>
  <binding name="AddRemarkSoapBinding" type="tns:AddRemarkPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="AddRemarkRQ">
      <soap:operation soapAction="OTA"/>
      <input>
        <soap:header message="tns:AddRemarkInput" part="header" use="literal"/>
        <soap:header message="tns:AddRemarkInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </input>
      <output>
        <soap:header message="tns:AddRemarkOutput" part="header" use="literal"/>
        <soap:header message="tns:AddRemarkOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="AddRemarkService">
    <port name="AddRemarkPortType" binding="tns:AddRemarkSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/AddRemarkLLS1.4.1RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:tns="http://webservices.sabre.com/sabreXML/2003/07" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="AddRemarkLLS1.4.1RQ.xsd"/>
  &lt;include schemaLocation="AddRemarkLLS1.4.1RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/AddRemarkLLS1.4.1RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="AddRemarkRQ">
    <xs:annotation>
      <xs:documentation>Comment describing your root element</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="POS" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Source" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="PseudoCityCode" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">An identification code assigned to an office/agency by a reservation system.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TPA_Extensions" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MessagingDetails" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="MDRSubset" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BasicRemark" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="Text" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="70"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="AlphaCodedRemark" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="Code" type="xs:string" use="optional"/>
            <xs:attribute name="Text" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="69"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="ClientAddressRemark" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="Text" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="69"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="DeliveryAddressRemark" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="Text" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="67"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="InvoiceRemark" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="SegmentNumber" type="xs:integer" use="optional"/>
            <xs:attribute name="Text" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="69"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="ItineraryRemark" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="SegmentNumber" type="xs:integer" use="optional"/>
            <xs:attribute name="Text" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="69"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="FOPRemark" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CCInfo" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="CreditCardVendor" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" use="optional">
                          <xs:simpleType>
                            <xs:restriction base="xs:string">
                              <xs:maxLength value="2"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CreditCardNumber" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" use="optional">
                          <xs:simpleType>
                            <xs:restriction base="xs:string">
                              <xs:maxLength value="16"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CreditCardExpiration" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="ExpireDate" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="SuppressCCInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" use="optional">
                          <xs:simpleType>
                            <xs:restriction base="xs:string">
                              <xs:maxLength value="2"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CardSecurity" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Airline" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="Type" type="xs:string" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="GroupNameRemark" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="Text" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="29"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="HistoricalRemark" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="Text" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="68"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="HiddenRemark" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="Text" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="67"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="FutureQueuePlaceRemark" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="PseudoCityCode" type="xs:string" use="optional">
              <xs:annotation>
                <xs:documentation xml:lang="en">An identification code assigned to an office/agency by a reservation system.</xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="DateTime" type="xs:string" use="optional"/>
            <xs:attribute name="QueueIdentifier" type="xs:integer" use="optional"/>
            <xs:attribute name="PICCode" type="xs:integer" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="CorporateNumberRemark" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="Text" use="optional">
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:maxLength value="14"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 										message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-					DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Test"/>
            <xs:enumeration value="Production"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="Version" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application to process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and needs to retrieve messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/AddRemarkLLS1.4.1RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="AddRemarkRS">
    <xs:annotation>
      <xs:documentation>Comment describing your root element</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Success" type="xs:string" minOccurs="0"/>
        <xs:element name="Warnings" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Warning" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TPA_Extensions" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="HostCommand" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Errors" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Error" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ErrorInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Message" type="xs:string" minOccurs="0"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ErrorCode" type="xs:string" use="optional"/>
                  <xs:attribute name="Severity" type="xs:string" use="optional"/>
                  <xs:attribute name="ErrorMessage" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 										message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-									DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Test"/>
            <xs:enumeration value="Production"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="Version" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application to 									process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and needs to 									retrieve messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="OTA" name="AddRemarkLLSRQ" bindingOperationName="AddRemarkRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="d2e09777-b569-4946-9f5b-5e0a32259e9c"><con:settings/><con:call name="AddRemarkLLSRQ" id="049978cc-689f-462a-8197-2b2b6b1b913f"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversationID</eb:ConversationId>
         <eb:Service eb:type="OTA">AddRemarkLLSRQ</eb:Service>
         <eb:Action>AddRemarkLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESG!ICESMSLB\/RES.LB!-4210745990415812605!1154630!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <AddRemarkRQ Version="1.4.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="ipcc"/>
         </POS>
         <BasicRemark Text="TEST BASIC REMARK 0"/>
         <AlphaCodedRemark Code="H'" Text="TEST ALPHA CODED REMARK 0"/>
         <ClientAddressRemark Text="1400 S LAMAR ST"/>
         <ClientAddressRemark Text="DALLAS TX 75215"/>
         <FOPRemark Type="CC">
            <CCInfo>
               <CreditCardVendor Code="DS"/>
               <CreditCardNumber Code="6011333333333333"/>
               <CreditCardExpiration ExpireDate="2013-12"/>
               <SuppressCCInfo Code="XN"/>
               <CardSecurity Code="1234"/>
            </CCInfo>
         </FOPRemark>
         <FutureQueuePlaceRemark DateTime="2012-06-15T06:00:00" PICCode="11" PseudoCityCode="IPCC1" QueueIdentifier="499"/>
      </AddRemarkRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="SpecialServiceSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}SpecialServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/tpfc/SpecialServiceLLS2.0.0RQ.wsdl" id="81ece745-bf69-4d92-8aff-e09710b6976c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/tpfc/SpecialServiceLLS2.0.0RQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/SpecialServiceLLS2.0.0RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sws_xsd="http://webservices.sabre.com/sabreXML/2011/10" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2011/10" schemaLocation="SpecialServiceLLS2.0.0RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
      <xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="SpecialServiceInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:SpecialServiceRQ"/>
  </wsdl:message>
  <wsdl:message name="SpecialServiceOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:SpecialServiceRS"/>
  </wsdl:message>
  <wsdl:portType name="SpecialServicePortType">
    <wsdl:operation name="SpecialServiceRQ">
      <wsdl:input message="sws:SpecialServiceInput"/>
      <wsdl:output message="sws:SpecialServiceOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SpecialServiceSoapBinding" type="sws:SpecialServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="SpecialServiceRQ">
      <soap:operation soapAction="SpecialServiceLLSRQ"/>
      <wsdl:input>
        <soap:header message="sws:SpecialServiceInput" part="header" use="literal"/>
        <soap:header message="sws:SpecialServiceInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:SpecialServiceOutput" part="header" use="literal"/>
        <soap:header message="sws:SpecialServiceOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SpecialServiceService">
    <wsdl:port name="SpecialServicePortType" binding="sws:SpecialServiceSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/SpecialServiceLLS2.0.0RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="SpecialServiceLLS2.0.0RQ.xsd"/>
  &lt;include schemaLocation="SpecialServiceLLS2.0.0RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/SpecialServiceLLS2.0.0RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="SpecialServiceRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SpecialServiceInfo">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SecureFlight" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="PersonName" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="GivenName" minOccurs="0" type="xs:string"/>
                          <xs:element name="Surname" minOccurs="0" type="xs:string"/>
                        </xs:sequence>
                        <xs:attribute name="DateOfBirth" type="sws:date" use="optional"/>
                        <xs:attribute name="Gender" use="optional">
                          <xs:simpleType>
                            <xs:restriction base="xs:string">
                              <xs:enumeration value="F"/>
                              <xs:enumeration value="M"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="RedressNumber" minOccurs="0" type="xs:string"/>
                    <xs:element name="VendorPrefs" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Airline">
                            <xs:complexType>
                              <xs:attribute name="Hosted" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                  <xs:attribute name="SSR_Code" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="Service" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="PersonName" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                    <xs:element name="VendorPrefs" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Airline">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                              <xs:attribute name="Hosted" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                  <xs:attribute name="SSR_Code" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ReturnHostCommand" type="xs:boolean" use="optional"/>
      <xs:attribute name="TimeStamp" type="xs:dateTime" use="optional"/>
      <xs:attribute name="Version" type="xs:string" fixed="2.0.0" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/sws_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be ommited. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/SpecialServiceLLS2.0.0RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://services.sabre.com/STL/v01">
  <xs:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="SpecialServiceRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="stl:ApplicationResults"/>
      </xs:sequence>
      <xs:attribute name="Version" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_For_SabreProtocol_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.sabre.com/STL/v01" xmlns="http://services.sabre.com/STL/v01" xmlns:STL="http://services.sabre.com/STL/v01" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added ShortText to SystemSpecificResults.
  		
  		May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace

		Created: April 21, 2011
		Description: This schema is the minimal Sabre Type Library (STL) schema needed for the Sabre SOAP Envelope schema to
		identify the STL_Payload  substitution group head element and type to be extended by message schemas..

		Copyright Sabre 2011
		The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only with the written permission of Sabre or in accordance with the terms and conditions stipulated in theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://services.sabre.com/STL_Header/v120" schemaLocation="STL_Header_v.1.2.0.xsd"/>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="ApplicationResults" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <!--- Results and Problem Information components.-->
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"></xsd:complexType>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="stlh:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="stlh:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="stlh:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="stlh:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="stlh:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="stlh:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="stlh:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_Header_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Header/v120" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns="http://services.sabre.com/STL_Header/v120">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added key to trace attributes.
			
			August 8 - added HostCommand to system specific results.
			
		  	May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace
		
			Created: April 21, 2011
			Description: This schema is a standalone schema that defines Header metadata 
			structures that are independent of the payload schema.
			
			Copyright Sabre 2011
			The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only
			with the written permission of Sabre or in accordance with the terms and conditions stipulated in
			theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Diagnostics" type="Diagnostics"/>
  <xsd:element name="Identification" type="Identification"/>
  <xsd:element name="ResultSummary" type="ResultSummary"/>
  <xsd:element name="Security" type="Security"/>
  <xsd:element name="Service" type="Service"/>
  <xsd:element name="Traces" type="Traces"/>
  <xsd:element name="SabreHeader" type="SabreHeader"/>
  <xsd:complexType name="SabreHeader">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="SabreHeaderGroup">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DiagnosticResults">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Diagnostics">
    <xsd:sequence>
      <xsd:element name="Level" type="DiagnosticLevels" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the level of diagnostic data requested or provided.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Data" type="Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Block of diagnostic data included in request or returned in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Diagnostic" type="DiagnosticResults" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Diagnostic data. Must be defined in a differrent namespace as the header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identification">
    <xsd:annotation>
      <xsd:documentation>The Identification metadata uniquely identify each message instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CustomerID" type="PseudoCityCodeOrOAC" minOccurs="1"/>
      <xsd:element name="CustomerAppID" type="stlh:Text.Short" minOccurs="0"/>
      <xsd:element name="ConversationID" type="TrackingID" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The ConversationId element is a string identifying the set of related messages that make up a
						conversation between two or more Parties. The Party initiating a conversation determines the value of
						the ConversationId element that shall be reflected in all messages pertaining to that
						conversation. It remains constant for all messages within a conversation.
						Service providers are expected to increment the optional TrackingID integer attribute when present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MessageID" type="Identifier" minOccurs="1"/>
      <xsd:element name="TimeStamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identifier.System">
    <xsd:annotation>
      <xsd:documentation>System identifier used to uniquily identify the specific system.
 	"Source" is used to return the application name responsible for fulfilling the particular request transaction.
	"ApplicationInstance" is used to return the application instance responsible for fulfilling the particular request transaction.
	"Cluster" is used to return the application cluster responsible for fulfilling the particular request transaction.
	"HostName" is used to return the particular server name responsible for fulfilling the particular request transaction.
	Â Example: Source ApplicationInstance="PROD1" Cluster="PROD TPF SCC" HostName="PSS" TPF Source</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="instance" type="Identifier"/>
        <xsd:attribute name="cluster" type="Identifier"/>
        <xsd:attribute name="host" type="Identifier"/>
        <xsd:attribute name="uri" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The uri representing the endpoint reference by which this system can be accessed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProblemBase">
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ProblemSummary">
    <xsd:sequence>
      <xsd:element name="Source" type="Identifier.System" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The system that the reporting system deemed to be the cause of the problem. If omitted, the
						reporting system is also the source of the problem. For application errors, the element may
						identify a system the application is dependent upon that failed to respond. For validation
						errors this may identify the service consumer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReportingSystem" type="Identifier.System">
        <xsd:annotation>
          <xsd:documentation>The system that created the results record. If the Source system identifier is omitted, the
						system identified here both was the cause of the problem and created the result record.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="Message.Condition" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>An informative code and message that describes the results. Note: the message code and text must
						NOT be required to process to understand retry/compensate status.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ResultSummary">
    <xsd:choice>
      <xsd:element name="Success" type="EmptyElement">
        <xsd:annotation>
          <xsd:documentation>Success indicates that the request was
						processed successfully.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Error" type="ProblemSummary"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Security">
    <xsd:annotation>
      <xsd:documentation>Header records no longer contain user credentials (username/password) as these are needed only for 
     		 SessionCreateRQ in which the credentials should be in the payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="SecurityToken" type="Text.Long"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="Text.Short">
        <xsd:attribute name="operation" type="Text.Short"/>
        <xsd:attribute name="version" type="Text.Short"/>
        <xsd:attribute name="ttl" type="xsd:nonNegativeInteger"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Traces">
    <xsd:sequence>
      <xsd:element name="Trace" type="TraceRecord" minOccurs="0" maxOccurs="999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TraceRecord">
    <xsd:annotation>
      <xsd:documentation>Record for all systems (consumer, proxies and gateways, providers) to use to trace the message. 
			The value is the common system name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="key" type="Text.Long">
          <xsd:annotation>
            <xsd:documentation>The key attribute is similar to ConversationID but is provided by the service requestor or entrypoint gateway and 
							must be unique across all Sabre gateways. Each gateway instance must prepend the ID value with its unique system identifier. 
							Internal service consumers must provide this value which may be their unique system identifier concantanated 
							with the ConversationID.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="start" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="end" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. 
						Example: 2002-10-10T12:00:00+05:00.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appInstance" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application instance involved in the particular transaction. 
						For example: PROD1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cluster" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application server cluster involved in the particular transaction. 
						Example: PROD TPFC SCC</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The server name involved in the particular transaction. 
						Example: PSS</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The targetURI is the endpoint address this system sent the message to. 
						For ServiceProviders it should be the abstract service address which is the address used by 
						registries to look up the actual service endpoint URI. The endpoint address may be a queue
						name (MOM service name).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="role" type="TraceRole"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrackingID">
    <xsd:annotation>
      <xsd:documentation>Tracking Identifier is an identifier intended for use to a set of related items and provide an 
			optional sequence number for the items.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="seq" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DiagnosticLevels">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Mock">
        <xsd:annotation>
          <xsd:documentation>Return a sample message without invoking service logic.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Simulate">
        <xsd:annotation>
          <xsd:documentation>Compute response without making changes to service data, state or status.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EmptyElement">
    <xsd:annotation>
      <xsd:documentation>Elements of this type are used for indicators whose presense denotes the 
				condition described by their name. They  have no content nor any attributes. 
				For example, an empty Success element denote that the process was successfully completed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCodeOrOAC">
    <xsd:annotation>
      <xsd:documentation>Customer Identifier assigned to office or agency or location. Commonly use values are 
			Psuedo City Code - 3 to 16 characters or the Sabre Office accounting code (OAC) which can be upto 25 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TraceRole">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="consumer">
        <xsd:annotation>
          <xsd:documentation>the system that initiated the service request and will be the ultimate consumer 
					of the service results.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="provider">
        <xsd:annotation>
          <xsd:documentation>System that performs the service operation defined in the service interface. 
					For RQ/RS exchange patterns, the provider reads the request message, applies business logic and 
					returns a response.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="gateway"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="SpecialServiceLLSRQ" name="SpecialServiceLLSRQ" bindingOperationName="SpecialServiceRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="3e836647-5a1f-4294-8d29-daca4a1a2c5d"><con:settings/><con:call name="SpecialServiceLLSRQ" id="23ec602d-986d-4803-b5ef-117002853325"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversationID</eb:ConversationId>
         <eb:Service eb:type="OTA">SpecialServiceLLSRQ</eb:Service>
         <eb:Action>SpecialServiceLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESG!ICESMSLB\/RES.LB!-4210745990415812605!1154630!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SpecialServiceRQ Version="1.5.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="ipcc"/>
         </POS>
         <SpecialServices>
            <SecureFlight SSRCode="DOCS" SegmentNumber="A">
               <Airline Hosted="true"/>
               <PersonName DateOfBirth="1918-05-11" Gender="M" NameNumber="1.1">
                  <GivenName>Richard</GivenName>
                  <Surname>Feynman</Surname>
               </PersonName>
            </SecureFlight>
         </SpecialServices>
      </SpecialServiceRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="SpecialServiceLLSRQ"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="EndTransactionSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}EndTransactionSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/EndTransactionLLS1.4.1RQ.wsdl" id="7a465f49-461f-4f0d-8dbf-e07a8a373874" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/EndTransactionLLS1.4.1RQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/EndTransactionLLS1.4.1RQ.wsdl</con:url><con:content><![CDATA[<definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd1="http://webservices.sabre.com/sabreXML/2003/07" xmlns:tns="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <types>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2003/07" schemaLocation="EndTransactionLLS1.4.1RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
    </xsd:schema>
  </types>
  <message name="EndTransactionInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:EndTransactionRQ"/>
  </message>
  <message name="EndTransactionOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:EndTransactionRS"/>
  </message>
  <portType name="EndTransactionPortType">
    <operation name="EndTransactionRQ">
      <input message="tns:EndTransactionInput"/>
      <output message="tns:EndTransactionOutput"/>
    </operation>
  </portType>
  <binding name="EndTransactionSoapBinding" type="tns:EndTransactionPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="EndTransactionRQ">
      <soap:operation soapAction="OTA"/>
      <input>
        <soap:header message="tns:EndTransactionInput" part="header" use="literal"/>
        <soap:header message="tns:EndTransactionInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </input>
      <output>
        <soap:header message="tns:EndTransactionOutput" part="header" use="literal"/>
        <soap:header message="tns:EndTransactionOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="EndTransactionService">
    <port name="EndTransactionPortType" binding="tns:EndTransactionSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/EndTransactionLLS1.4.1RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:tns="http://webservices.sabre.com/sabreXML/2003/07" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="EndTransactionLLS1.4.1RQ.xsd"/>
  &lt;include schemaLocation="EndTransactionLLS1.4.1RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/EndTransactionLLS1.4.1RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="EndTransactionRQ">
    <xs:annotation>
      <xs:documentation>This service is used to complete and store any changes made to a PNR.  Possible host entry would be "6JOHN DOEÂ§E", with a response of "OK 1242 IBWRMX".</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="POS" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Source" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="PseudoCityCode" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">An identification code assigned to an office/agency by a reservation system.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="16"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TPA_Extensions" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MessagingDetails" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="MDRSubset" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UpdatedBy" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TPA_Extensions" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Access" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AccessPerson" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="GivenName" type="xs:string" minOccurs="0"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="EndTransaction" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SendEmail" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 						message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-					DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" type="xs:string" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Version" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application 	to 					process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and needs to 				retrieve messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/EndTransactionLLS1.4.1RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="EndTransactionRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Success" type="xs:string" minOccurs="0"/>
        <xs:element name="Warnings" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Warning" minOccurs="0">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UniqueID" minOccurs="0">
          <xs:complexType>
            <xs:attribute name="ID" type="xs:string" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="UpdateTime" type="xs:string" minOccurs="0"/>
        <xs:element name="Text" type="xs:string" minOccurs="0"/>
        <xs:element name="TPA_Extensions" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="HostCommand" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Errors" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Error" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ErrorInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Message" type="xs:string" minOccurs="0"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ErrorCode" type="xs:string" use="optional"/>
                  <xs:attribute name="Severity" type="xs:string" use="optional"/>
                  <xs:attribute name="ErrorMessage" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 						message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-					DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" type="xs:string" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Version" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application 	to 					process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and needs to 				retrieve messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="OTA" name="EndTransactionLLSRQ" bindingOperationName="EndTransactionRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="9755f99a-aac6-4241-a98b-dde7216e3919"><con:settings/><con:call name="EndTransactionLLSRQ" id="1f0b8af7-9649-4855-940c-7c39bf4b95b2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversationID</eb:ConversationId>
         <eb:Service eb:type="OTA">EndTransactionLLSRQ</eb:Service>
         <eb:Action>EndTransactionLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESG!ICESMSLB\/RES.LB!-4210745990415812605!1154630!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <EndTransactionRQ Version="1.4.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="ipcc"/>
         </POS>
         <UpdatedBy>
            <TPA_Extensions>
               <Access>
                  <AccessPerson>
                     <GivenName>SWS TEST</GivenName>
                  </AccessPerson>
               </Access>
            </TPA_Extensions>
         </UpdatedBy>
         <EndTransaction Ind="true"/>
      </EndTransactionRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="OTA_CancelSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}OTA_CancelSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_CancelLLSRQ.wsdl" id="6e6d3daa-1269-4023-b1f9-5d216ea8ab5e" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_CancelLLSRQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_CancelLLSRQ.wsdl</con:url><con:content><![CDATA[<definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd1="http://webservices.sabre.com/sabreXML/2003/07" xmlns:tns="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <types>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2003/07" schemaLocation="OTA_CancelLLSRQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
    </xsd:schema>
  </types>
  <message name="OTA_CancelInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:OTA_CancelRQ"/>
  </message>
  <message name="OTA_CancelOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:OTA_CancelRS"/>
  </message>
  <portType name="OTA_CancelPortType">
    <operation name="OTA_CancelRQ">
      <input message="tns:OTA_CancelInput"/>
      <output message="tns:OTA_CancelOutput"/>
    </operation>
  </portType>
  <binding name="OTA_CancelSoapBinding" type="tns:OTA_CancelPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="OTA_CancelRQ">
      <soap:operation soapAction="OTA"/>
      <input>
        <soap:header message="tns:OTA_CancelInput" part="header" use="literal"/>
        <soap:header message="tns:OTA_CancelInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </input>
      <output>
        <soap:header message="tns:OTA_CancelOutput" part="header" use="literal"/>
        <soap:header message="tns:OTA_CancelOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="OTA_CancelService">
    <port name="OTA_CancelPortType" binding="tns:OTA_CancelSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_CancelLLSRQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:tns="http://webservices.sabre.com/sabreXML/2003/07" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="OTA_CancelLLSRQ.xsd"/>
  &lt;include schemaLocation="OTA_CancelLLSRS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_CancelLLSRQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="OTA_CancelRQ">
    <xs:annotation>
      <xs:documentation>Request to cancel a PNR.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="POS" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Source" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="PseudoCityCode" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">An identification code assigned to an office/agency by a reservation system.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TPA_Extensions">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SegmentCancel">
                <xs:annotation>
                  <xs:documentation>Acceptable values for "Type" are "Air", "Car", "Hotel", "Other", or "Entire".</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Segment" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="Number" type="xs:nonNegativeInteger" use="optional"/>
                        <xs:attribute name="EndNumber" type="xs:nonNegativeInteger" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="DoNotUse" type="xs:string" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>Do not use this element.  It was added to force proper generation of the OTA_CancelTPA_ExtensionsSegmentCancel class for Axis framework users.</xs:documentation>
                      </xs:annotation>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="Type" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="MessagingDetails" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="MDRSubset" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 										message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-					DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Test"/>
            <xs:enumeration value="Production"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="Version" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application 	to 					process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and 	needs to 				retrieve messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_CancelLLSRS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://webservices.sabre.com/sabreXML/2003/07">
  <xs:element name="OTA_CancelRS">
    <xs:annotation>
      <xs:documentation>Root element for response from a OTA_Cancel request.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Success" type="xs:string" minOccurs="0"/>
        <xs:element name="Warnings" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Warning">
                <xs:complexType>
                  <xs:attribute name="Language" type="xs:string" use="optional"/>
                  <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                  <xs:attribute name="Type" type="xs:string" use="optional"/>
                  <xs:attribute name="Code" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for codes in the OTA code tables.</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:pattern value="[0-9A-Z]{1,3}"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="DocURL" type="xs:anyURI" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, this URL refers to an online description of the error that occurred.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Status" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, recommended values are those enumerated in the OTA_ErrorRS, (NotProcessed | Incomplete | Complete | Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Tag" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="RecordID" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UniqueID" minOccurs="0">
          <xs:complexType>
            <xs:annotation>
              <xs:documentation xml:lang="en">An identifier used to uniquely reference an object in a system (e.g. an airline reservation 																			reference, customer profile reference, booking confirmation 	number, or a reference to a previous 																						availability quote).</xs:documentation>
            </xs:annotation>
            <xs:sequence>
              <xs:element name="CompanyName" minOccurs="0">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="CompanyShortName" use="optional">
                        <xs:simpleType>
                          <xs:annotation>
                            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                          </xs:annotation>
                          <xs:restriction base="xs:string">
                            <xs:minLength value="1"/>
                            <xs:maxLength value="32"/>
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                      <xs:attribute name="TravelSector" use="optional">
                        <xs:simpleType>
                          <xs:annotation>
                            <xs:documentation xml:lang="en">Used for codes in the OTA code tables.</xs:documentation>
                          </xs:annotation>
                          <xs:restriction base="xs:string">
                            <xs:pattern value="[0-9A-Z]{1,3}"/>
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                      <xs:attribute name="Code" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                          <xs:annotation>
                            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                          </xs:annotation>
                          <xs:restriction base="xs:string">
                            <xs:minLength value="1"/>
                            <xs:maxLength value="8"/>
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                      <xs:attribute name="CodeContext" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Identifies the context of the identifying code, 																			such as DUNS, IATA or internal code, etc.</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                          <xs:annotation>
                            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                          </xs:annotation>
                          <xs:restriction base="xs:string">
                            <xs:minLength value="1"/>
                            <xs:maxLength value="32"/>
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="URL" type="xs:anyURI">
              <xs:annotation>
                <xs:documentation xml:lang="en">URL that identifies the location associated with the record identified by the UniqueID.</xs:documentation>
              </xs:annotation>
            </xs:attribute>
            <xs:attribute name="Type" use="required">
              <xs:annotation>
                <xs:documentation xml:lang="en">A reference to the type of object defined by the UniqueID element.</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation xml:lang="en">Used for codes in the OTA code tables.</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:pattern value="[0-9A-Z]{1,3}"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="Instance">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:minLength value="1"/>
                  <xs:maxLength value="32"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ID" use="required">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:minLength value="1"/>
                  <xs:maxLength value="32"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
            <xs:attribute name="ID_Context" use="optional">
              <xs:annotation>
                <xs:documentation>Used to identify the source of the identifier (e.g. IATA, ABTA, etc.).</xs:documentation>
              </xs:annotation>
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:minLength value="1"/>
                  <xs:maxLength value="32"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
        <xs:element name="CancelInfoRS" minOccurs="0">
          <xs:annotation>
            <xs:documentation>May contain rules associated with canceling a reservation as well as the supplier's cancellation number.</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:annotation>
              <xs:documentation>May contain rules associated with canceling a reservation as well as the supplier's cancellation number.</xs:documentation>
            </xs:annotation>
            <xs:sequence>
              <xs:element name="CancelRules" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="CancelRule" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="CancelByDate" type="xs:date" use="required"/>
                        <xs:attribute name="Amount" use="required">
                          <xs:simpleType>
                            <xs:restriction base="xs:decimal">
                              <xs:fractionDigits value="3"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="CurrencyCode" use="required">
                          <xs:simpleType>
                            <xs:restriction base="xs:string">
                              <xs:pattern value="[a-zA-Z]{3}"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="DecimalPlaces" type="xs:nonNegativeInteger" use="optional">
                          <xs:annotation>
                            <xs:documentation>Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit".</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="Percent" use="required">
                          <xs:simpleType>
                            <xs:restriction base="xs:decimal">
                              <xs:minInclusive value="0.01"/>
                              <xs:maxInclusive value="100.00"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="UniqueID">
                <xs:complexType>
                  <xs:annotation>
                    <xs:documentation xml:lang="en">An identifier used to uniquely reference an object in a system (e.g. an airline reservation 																			reference, customer profile reference, booking confirmation 	number, or a reference to a previous 																						availability quote).</xs:documentation>
                  </xs:annotation>
                  <xs:sequence>
                    <xs:element name="CompanyName" minOccurs="0">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute name="CompanyShortName" use="optional">
                              <xs:simpleType>
                                <xs:annotation>
                                  <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                                </xs:annotation>
                                <xs:restriction base="xs:string">
                                  <xs:minLength value="1"/>
                                  <xs:maxLength value="32"/>
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="TravelSector" use="optional">
                              <xs:simpleType>
                                <xs:annotation>
                                  <xs:documentation xml:lang="en">Used for codes in the OTA code tables.</xs:documentation>
                                </xs:annotation>
                                <xs:restriction base="xs:string">
                                  <xs:pattern value="[0-9A-Z]{1,3}"/>
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="Code" use="optional">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                              </xs:annotation>
                              <xs:simpleType>
                                <xs:annotation>
                                  <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                                </xs:annotation>
                                <xs:restriction base="xs:string">
                                  <xs:minLength value="1"/>
                                  <xs:maxLength value="8"/>
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="CodeContext" use="optional">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">Identifies the context of the identifying code, 																			such as DUNS, IATA or internal code, etc.</xs:documentation>
                              </xs:annotation>
                              <xs:simpleType>
                                <xs:annotation>
                                  <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                                </xs:annotation>
                                <xs:restriction base="xs:string">
                                  <xs:minLength value="1"/>
                                  <xs:maxLength value="32"/>
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:attribute>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="URL" type="xs:anyURI">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">URL that identifies the location associated with the record identified by the UniqueID.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                  <xs:attribute name="Type" use="required">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">A reference to the type of object defined by the UniqueID element.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for codes in the OTA code tables.</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:pattern value="[0-9A-Z]{1,3}"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="Instance">
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="32"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="ID" use="required">
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="32"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="ID_Context" use="optional">
                    <xs:annotation>
                      <xs:documentation>Used to identify the source of the identifier (e.g. IATA, ABTA, etc.).</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="32"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TPA_Extensions" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
              <xs:element name="HostCommand" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Errors" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Error">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ErrorInfo">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Message" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ErrorCode" type="xs:string" use="required"/>
                  <xs:attribute name="Severity" type="xs:string" use="optional"/>
                  <xs:attribute name="ErrorMessage" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 										message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-					DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Test"/>
            <xs:enumeration value="Production"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="Version" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application 	to 					process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and 	needs to 				retrieve messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="OTA" name="OTA_CancelLLSRQ" bindingOperationName="OTA_CancelRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="bd824b18-7f6c-43e8-8d62-b28f3f335b99"><con:settings/><con:call name="OTA_CancelLLSRQ" id="45a01a2f-3c35-42b9-9258-93b512c92064"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversationID</eb:ConversationId>
         <eb:Service eb:type="OTA">OTA_CancelLLSRQ</eb:Service>
         <eb:Action>OTA_CancelLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESG!ICESMSLB\/RES.LB!-4210745990415812605!1154630!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <OTA_CancelRQ Version="1.0.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="ipcc"/>
         </POS>
         <TPA_Extensions>
            <SegmentCancel Type="Entire"/>
         </TPA_Extensions>
      </OTA_CancelRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="OTA_TravelItinerarySoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}OTA_TravelItinerarySoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_TravelItineraryReadLLS1.15.1RQ.wsdl" id="d8d75205-ad22-418b-bc9e-0ee466b06607" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_TravelItineraryReadLLS1.15.1RQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_TravelItineraryReadLLS1.15.1RQ.wsdl</con:url><con:content><![CDATA[<definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd1="http://webservices.sabre.com/sabreXML/2003/07" xmlns:tns="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <types>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2003/07" schemaLocation="OTA_TravelItineraryReadLLS1.15.1RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
      <xsd:import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
    </xsd:schema>
  </types>
  <message name="OTA_TravelItineraryInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:OTA_TravelItineraryReadRQ"/>
  </message>
  <message name="OTA_TravelItineraryOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:OTA_TravelItineraryRS"/>
  </message>
  <portType name="OTA_TravelItineraryPortType">
    <operation name="OTA_TravelItineraryReadRQ">
      <input message="tns:OTA_TravelItineraryInput"/>
      <output message="tns:OTA_TravelItineraryOutput"/>
    </operation>
  </portType>
  <binding name="OTA_TravelItinerarySoapBinding" type="tns:OTA_TravelItineraryPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="OTA_TravelItineraryReadRQ">
      <soap:operation soapAction="OTA"/>
      <input>
        <soap:header message="tns:OTA_TravelItineraryInput" part="header" use="literal"/>
        <soap:header message="tns:OTA_TravelItineraryInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </input>
      <output>
        <soap:header message="tns:OTA_TravelItineraryOutput" part="header" use="literal"/>
        <soap:header message="tns:OTA_TravelItineraryOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="OTA_TravelItineraryService">
    <port name="OTA_TravelItineraryPortType" binding="tns:OTA_TravelItinerarySoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_TravelItineraryReadLLS1.15.1RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:tns="http://webservices.sabre.com/sabreXML/2003/07" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="OTA_TravelItineraryReadLLS1.15.1RQ.xsd"/>
  &lt;include schemaLocation="OTA_TravelItineraryReadLLS1.15.1RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_TravelItineraryReadLLS1.15.1RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://webservices.sabre.com/sabreXML/2003/07">
  <xs:element name="OTA_TravelItineraryReadRQ">
    <xs:annotation>
      <xs:documentation>PNR display request</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="POS" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Source" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="PseudoCityCode" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">An identification code assigned to an office/agency by a reservation system.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="16"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TPA_Extensions" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MessagingDetails" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="MDRSubset" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ApplicationID" type="xs:string" minOccurs="0"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UniqueID">
          <xs:complexType>
            <xs:annotation>
              <xs:documentation xml:lang="en">An identifier used to uniquely reference an object in a system (e.g. an airline reservation 																			reference, customer profile reference, booking confirmation 	number, or a reference to a previous 																						availability quote).</xs:documentation>
            </xs:annotation>
            <xs:sequence>
              <xs:element name="TPA_Extensions" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Transaction" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="ID" use="optional">
              <xs:simpleType>
                <xs:annotation>
                  <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                </xs:annotation>
                <xs:restriction base="xs:string">
                  <xs:minLength value="1"/>
                  <xs:maxLength value="32"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 						message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-					DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" type="xs:string" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Version" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application 	to 					process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and needs to 				retrieve messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_TravelItineraryReadLLS1.15.1RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://webservices.sabre.com/sabreXML/2003/07">
  <xs:complexType name="ItemType">
    <xs:sequence>
      <xs:element name="Air" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation xml:lang="en">Flight reservation information.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="DepartureAirport" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Departure point of flight segment.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                <xs:attribute name="CodeContext" type="xs:string" use="optional" default="IATA">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Terminal" type="xs:string" use="optional"/>
                <xs:attribute name="TerminalCode" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="ArrivalAirport" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Departure point of flight segment.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                <xs:attribute name="CodeContext" type="xs:string" use="optional" default="IATA">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Terminal" type="xs:string" use="optional"/>
                <xs:attribute name="TerminalCode" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="OperatingAirline" minOccurs="0">
              <xs:annotation>
                <xs:documentation>The operating airline of the flight if it is a codeshare  flight.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="Code" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="CompanyShortName" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <xs:element name="Equipment" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="AirEquipType" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="MarketingAirline" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="Code" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <xs:element name="MarriageGrp" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="Ind" type="xs:string" use="optional"/>
                <xs:attribute name="Group" type="xs:string" use="optional"/>
                <xs:attribute name="Sequence" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="Seats" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Seat" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="CustomerRPH" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Reference to customer assigned to this seat.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="Segment" type="xs:integer" use="optional"/>
                      <xs:attribute name="SegmentStatus" type="xs:string" use="optional"/>
                      <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                      <xs:attribute name="Number" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation>Seat number (e.g. 20A, 17C, etc.).</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="Characteristic" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Seat characteristic.  Suggested values include: Window, Aisle, EconomyPlus, etc.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="SeatChanged" type="xs:string" use="optional"/>
                      <xs:attribute name="SmokingPreference" type="xs:string" use="optional"/>
                      <xs:attribute name="Status" type="xs:string" use="optional"/>
                      <xs:attribute name="SeatType" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="TPA_Extensions" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="ConnectionIndicator" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Type" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="AirlineRef" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="ID" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="Meal" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="Eticket" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Ind" type="xs:boolean" use="optional" default="false"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="UpdatedDepartureTime" type="xs:string" minOccurs="0"/>
                  <xs:element name="UpdatedArrivalTime" type="xs:string" minOccurs="0"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="DepartureDateTime" type="xs:string">
            <xs:annotation>
              <xs:documentation xml:lang="en"/>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ArrivalDateTime" type="xs:string">
            <xs:annotation>
              <xs:documentation xml:lang="en"/>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="StopQuantity" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation xml:lang="en">Used to provide a reference to an object that is stored elsewhere in a collection of the same objects.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="RPH" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation xml:lang="en">Used to provide a reference to an object that is stored elsewhere in a collection of the same objects.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="FlightNumber" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>The flight number of the flight.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="SmokingAllowed" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation>The flight number of the flight.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional">
            <xs:annotation>
              <xs:documentation xml:lang="en">Specific Booking Class for this segment.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
          <xs:attribute name="ElapsedTime" type="xs:string" use="optional"/>
          <xs:attribute name="AirMilesFlown" type="xs:string" use="optional"/>
          <xs:attribute name="ActionCode" type="xs:string" use="optional"/>
          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="Vehicle" minOccurs="0">
        <xs:annotation>
          <xs:documentation xml:lang="en">Vehicle rental information.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="TPA_Extensions" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Line" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Number" type="xs:string" use="optional"/>
                      <xs:attribute name="Status" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="POS" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Source" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="RequestorID" minOccurs="0">
                                <xs:complexType>
                                  <xs:attribute name="ID" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="ConfId" minOccurs="0">
              <xs:annotation>
                <xs:documentation>A confirmation number by which this reservation can be uniquely identified</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="ID" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">A unique identifying value assigned by the creating system.  																			The ID 			attribute 	may be 		used to 			reference a 																			primary-key value within a database or in a particular implementation.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <xs:element name="Vendor" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Identifies the vendor associated with this information</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:attribute name="Code" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="CompanyShortName" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <xs:element name="VehRentalCore" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Information that is common,  or core, to all requests and responses associated with the reservation of a vehicle.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:annotation>
                  <xs:documentation>The VehicleRentalCoreType complex type identifies the data that is common, or core, to almost every transaction associated with the rental of a vehicle.</xs:documentation>
                </xs:annotation>
                <xs:sequence>
                  <xs:element name="PickUpLocation" minOccurs="0">
                    <xs:annotation>
                      <xs:documentation>A code to identify the pick up location, along with an optional code context.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Code and optional string to describe a location point.</xs:documentation>
                      </xs:annotation>
                      <xs:attribute name="LocationCode" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="LocationName" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="ServiceLocationName" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Identifies the context of the identifying code, 																		such as DUNS, IATA or internal code, etc.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="CodeContext" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Identifies the context of the identifying code, 																		such as DUNS, IATA or internal code, etc.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="ReturnLocation" minOccurs="0">
                    <xs:annotation>
                      <xs:documentation>A code to identify the return location, along with an optional code context.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Code and optional string to describe a location point.</xs:documentation>
                      </xs:annotation>
                      <xs:attribute name="LocationCode" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="CodeContext" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Identifies the context of the identifying code, 																		such as DUNS, IATA or internal code, etc.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="PickUpDateTime" type="xs:string" use="optional"/>
                <xs:attribute name="PickUpDay" type="xs:string" use="optional"/>
                <xs:attribute name="ReturnDateTime" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="RentalRate" minOccurs="0">
              <xs:annotation>
                <xs:documentation>Information on the rates associated with this vehicle.  Rate information can include the distance and the base rental cost, along with information on the various factors that may infuence this rate.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="RateDistance" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="TPA_Extensions" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Rate" minOccurs="0">
                                <xs:complexType>
                                  <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  <xs:attribute name="GuaranteedQuoted" type="xs:string" use="optional"/>
                                  <xs:attribute name="Changed" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Mileage" minOccurs="0">
                                <xs:complexType>
                                  <xs:attribute name="ExtraMileageCharge" type="xs:decimal" use="optional"/>
                                  <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                  <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="MileageKilometers" minOccurs="0">
                                <xs:complexType>
                                  <xs:attribute name="Code" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="VehicleCharges" minOccurs="0">
                    <xs:annotation>
                      <xs:documentation>Information on the charges associated with this vehicle.  Such charges may include the base rental amount, additional mileage amounts, fuel costs, etc.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="VehicleCharge" minOccurs="0" maxOccurs="unbounded">
                          <xs:complexType>
                            <xs:annotation>
                              <xs:documentation>The VehicleChargeType complex type defines information on a specific charge associated with the rental of a vehicle, including unit cost, quantity and total cost.</xs:documentation>
                            </xs:annotation>
                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="TPA_Extensions" minOccurs="0" maxOccurs="5">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="ApproximateTotalCharge" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                  <xs:attribute name="RateType" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="NumDays" type="xs:string" minOccurs="0"/>
                              <xs:element name="NumHours" type="xs:string" minOccurs="0"/>
                              <xs:element name="Mileage" type="xs:string" minOccurs="0"/>
                              <xs:element name="TotalMandatoryCharges" type="xs:string" minOccurs="0"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="DropOff" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="Charge" type="xs:string" use="optional"/>
                            <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="GuaranteedInd" type="xs:string" minOccurs="0"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="RateQualifier" minOccurs="0">
                    <xs:annotation>
                      <xs:documentation>Indicates the type of rates applicable to the customer, along with any discount number or promotional codes that affect the quoted rate.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:annotation>
                        <xs:documentation>The RateQualifierCoreType complex type defines the rate information that is common to all transactions.  Such information may include rate codes, rate type, promotional codes, etc.  This information may be used to determine the rate that is made available.</xs:documentation>
                      </xs:annotation>
                      <xs:sequence>
                        <xs:element name="TPA_Extensions" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="AdditionalRateInformation" minOccurs="0">
                                <xs:complexType>
                                  <xs:attribute name="RateCode" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="PricedEquips" minOccurs="0">
              <xs:annotation>
                <xs:documentation>A collection of special equipment that is part of this reservation, along with the charges associated with this equipment.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="PricedEquip" minOccurs="0">
                    <xs:complexType>
                      <xs:annotation>
                        <xs:documentation>The VehicleEquipmentPricedType complex type identifies the data that describes a priced piece of special equipment in association with the rental of a vehicle.  The data consists of the equipment and the correspondinng charge.</xs:documentation>
                      </xs:annotation>
                      <xs:sequence>
                        <xs:element name="Equipment" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="EquipType" type="xs:string" use="optional"/>
                            <xs:attribute name="Quantity" type="xs:integer" use="optional"/>
                            <xs:attribute name="SpecialEquip" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="VehSegmentInfo" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="PricedOffLocService" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="OffLocService" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Telephone" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:attribute name="PhoneNumber" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Fax" minOccurs="0" maxOccurs="unbounded">
                                <xs:complexType>
                                  <xs:attribute name="Number" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="TPA_Extensions" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="CorporateID" type="xs:string" minOccurs="0"/>
                        <xs:element name="ClientID" type="xs:string" minOccurs="0"/>
                        <xs:element name="CustLoyalty" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="MembershipID" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="InvoiceRemarks" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="Remarks" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="PassengerName" type="xs:string" minOccurs="0"/>
                        <xs:element name="Voucher" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="Type" type="xs:string" use="optional"/>
                            <xs:attribute name="BillingNumber" type="xs:string" use="optional"/>
                            <xs:attribute name="ID" type="xs:string" use="optional"/>
                            <xs:attribute name="Format" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="DeliveryCollectionFee" type="xs:string" minOccurs="0"/>
                        <xs:element name="CollectionInfo" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="ContactNumbers" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="ContactNumber" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="PhoneNumber" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Address" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="AddressLine" type="xs:string" minOccurs="0"/>
                                    <xs:element name="StreetNmbr" type="xs:string" minOccurs="0"/>
                                    <xs:element name="CityName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="PostalCode" type="xs:string" minOccurs="0"/>
                                    <xs:element name="StateCountyProv" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="StateCode" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="CountryCode" type="xs:string" minOccurs="0"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                            <xs:attribute name="SiteID" type="xs:string" use="optional"/>
                            <xs:attribute name="SiteName" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="DeliveryInfo" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="ContactNumbers" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="ContactNumber" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="PhoneNumber" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Address" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="AddressLine" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                                    <xs:element name="StreetNmbr" type="xs:string" minOccurs="0"/>
                                    <xs:element name="CityName" type="xs:string" minOccurs="0"/>
                                    <xs:element name="PostalCode" type="xs:string" minOccurs="0"/>
                                    <xs:element name="StateCountyProv" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="StateCode" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="CountryCode" type="xs:string" minOccurs="0"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="Comment" type="xs:string" minOccurs="0"/>
                            </xs:sequence>
                            <xs:attribute name="SiteID" type="xs:string" use="optional"/>
                            <xs:attribute name="SiteName" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Hotel" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Reservation" minOccurs="0">
              <xs:annotation>
                <xs:documentation xml:lang="en">Hotel reservation information.</xs:documentation>
              </xs:annotation>
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="TPA_Extensions" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Line" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="Number" type="xs:integer" use="optional"/>
                            <xs:attribute name="Type" type="xs:string" use="optional"/>
                            <xs:attribute name="Status" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="SpecialPrefs" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="POS" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Source" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="RequestorID" minOccurs="0" maxOccurs="unbounded">
                                      <xs:complexType>
                                        <xs:attribute name="ID" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="RoomTypes" minOccurs="0">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">Room type for reservation.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="RoomType" minOccurs="0">
                          <xs:complexType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Summary version of the RoomTypeType, initially created for the Travel Itinerary Message set.</xs:documentation>
                            </xs:annotation>
                            <xs:attribute name="RoomTypeCode" type="xs:string" use="optional">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">Specfic system room type code, ex: A1K, A1Q etc.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                            <xs:attribute name="NumberOfUnits" type="xs:integer" use="optional"/>
                            <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="RoomRates" minOccurs="0">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">Reservation rate(s).</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="RoomRate" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Rates" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="Rate" minOccurs="0">
                                      <xs:complexType>
                                        <xs:sequence>
                                          <xs:element name="Base" minOccurs="0">
                                            <xs:complexType>
                                              <xs:attribute name="AmountBeforeTax" type="xs:string" use="optional"/>
                                              <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                            </xs:complexType>
                                          </xs:element>
                                        </xs:sequence>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="GuestCounts" minOccurs="0">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">Number of guests associated with this reservation.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="GuestCount" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="TPA_Extensions" minOccurs="0">
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="ExtraGuest" minOccurs="0" maxOccurs="unbounded">
                                      <xs:complexType>
                                        <xs:attribute name="Count" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="RollAway" minOccurs="0" maxOccurs="unbounded">
                                      <xs:complexType>
                                        <xs:attribute name="Count" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="Crib" minOccurs="0" maxOccurs="unbounded">
                                      <xs:complexType>
                                        <xs:attribute name="Count" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                    <xs:element name="ReserveUnderName" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                                    <xs:element name="Name" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                            <xs:attribute name="Count" type="xs:integer" use="optional">
                              <xs:annotation>
                                <xs:documentation xml:lang="en">The number of guests in one AgeQualifyingCode.</xs:documentation>
                              </xs:annotation>
                            </xs:attribute>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="TimeSpan" minOccurs="0">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">Date and time of check-in and check-out.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:attribute name="Start" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">The starting value of the time span.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="Duration" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">The lexical representation for timeDuration is the [ISO 8601] extended format PnYn MnDTnH nMnS, where nY represents the number of years, nM the number of months, nD the number of days, 'T' is the date/time separator, nH the number of hours, nM the number of minutes and nS the number of seconds. The number of seconds can include decimal digits to arbitrary precision. As an example, 7 months, 2 days, 2hours and 30 minutes would be expressed as P0Y7M2DT2H30M0S. Truncated representations are allowed provided they conform to ISO 8601 format.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="End" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">The ending value of the time span.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="Guarantee" minOccurs="0">
                    <xs:complexType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">The guarantee information to hold a reservation</xs:documentation>
                      </xs:annotation>
                      <xs:sequence>
                        <xs:element name="GuaranteesAccepted" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="GuaranteeAccepted" minOccurs="0">
                                <xs:annotation>
                                  <xs:documentation xml:lang="en">Guarantee Detail</xs:documentation>
                                </xs:annotation>
                                <xs:complexType>
                                  <xs:sequence>
                                    <xs:element name="PaymentCard" minOccurs="0">
                                      <xs:complexType>
                                        <xs:attribute name="CardNumber" type="xs:string" use="optional"/>
                                      </xs:complexType>
                                    </xs:element>
                                  </xs:sequence>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="BasicPropertyInfo" minOccurs="0">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">Basic hotel property information.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:attribute name="ChainCode" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">The code that identifies a hotel chain or management group. The hotel chain code is decided between vendors.  This attribute is optional if the hotel is an independent property that can be identified by the HotelCode attribute.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="HotelCode" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="HotelCityCode" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">The IATA city code; for example DCA, ORD.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="HotelName" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">A text field used to communicate the proper name of the hotel.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="TPA_Extensions" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="ConfirmationNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Address" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="AddressLine" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                        <xs:element name="CountryCode" type="xs:string" minOccurs="0"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="ContactNumbers" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="ContactNumber" minOccurs="0" maxOccurs="unbounded">
                          <xs:complexType>
                            <xs:attribute name="PhoneNumber" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="Fax" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="Number" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="CancelPenalty" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="PolicyCode" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="MembershipID" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="IDNumber" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="Number" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="CorporateID" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="Number" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Rail" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="TPA_Extensions" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Line" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Number" type="xs:integer" use="optional"/>
                      <xs:attribute name="Type" type="xs:string" use="optional"/>
                      <xs:attribute name="Status" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="Vendor" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="Train" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="Number" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="NumberInParty" minOccurs="0">
                    <xs:complexType>
                      <xs:simpleContent>
                        <xs:extension base="xs:string">
                          <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                        </xs:extension>
                      </xs:simpleContent>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="SpaceReserved" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="DepartureLocation" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                      <xs:attribute name="Point" type="xs:string" use="optional"/>
                      <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                      <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="DepartureTime" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="ArrivalLocation" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                      <xs:attribute name="Point" type="xs:string" use="optional"/>
                      <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                      <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="ArrivalTime" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="ServiceInformation" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="TicketControlNumber" type="xs:string" minOccurs="0"/>
                  <xs:element name="ConfirmationNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="FreeText" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="MergedSegmentInd" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Comment" type="xs:string" minOccurs="0"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Cruise" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="TPA_Extensions" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Line" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Number" type="xs:integer" use="optional"/>
                      <xs:attribute name="Type" type="xs:string" use="optional"/>
                      <xs:attribute name="Status" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="Vendor" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="ShipName" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="SpaceReserved" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="NumberInParty" type="xs:string" minOccurs="0"/>
                  <xs:element name="Location" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="DepartureLocationName" type="xs:string" minOccurs="0"/>
                        <xs:element name="ServiceCityName" type="xs:string" minOccurs="0"/>
                      </xs:sequence>
                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                      <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="DepartureTime" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="ArrivalLocation" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="ArrivalLocationName" type="xs:string" minOccurs="0"/>
                      </xs:sequence>
                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                      <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="ArrivalTime" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="ServiceInformation" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="DateTime" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="POS" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Source" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="CarRate" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="TrailerPrice" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Cabin" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Berth" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Seat" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Passenger" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="TotalFare" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="MergedSegment" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="ConfirmationNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="FreeText" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Link" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Tour" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Line" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="Number" type="xs:integer" use="optional"/>
                <xs:attribute name="Type" type="xs:string" use="optional"/>
                <xs:attribute name="Status" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="TPA_Extensions" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Line" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Number" type="xs:integer" use="optional"/>
                      <xs:attribute name="Type" type="xs:string" use="optional"/>
                      <xs:attribute name="Status" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="Vendor" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="ShipName" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="SpaceReserved" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="NumberInParty" type="xs:string" minOccurs="0"/>
                  <xs:element name="Location" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="DepartureLocationName" type="xs:string" minOccurs="0"/>
                        <xs:element name="ServiceCityName" type="xs:string" minOccurs="0"/>
                      </xs:sequence>
                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                      <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="DepartureTime" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="ArrivalLocation" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="ArrivalLocationName" type="xs:string" minOccurs="0"/>
                      </xs:sequence>
                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                      <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="ArrivalTime" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="ServiceInformation" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="DateTime" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="POS" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Source" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="CarRate" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="TrailerPrice" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Cabin" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Berth" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Seat" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Passenger" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="TotalFare" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="MergedSegment" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="ConfirmationNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="FreeText" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Link" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="Features" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Options" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Extensions" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Meals" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Location" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Price" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="Amount" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="Duration" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="NumDays" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="HotelInformation" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Room" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Type" type="xs:string" use="optional"/>
                      <xs:attribute name="OccupancyCode" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="ServiceInformation" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="VehicleInformation" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="ConfirmationNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="FreeText" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Link" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="Code" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="DateTime" type="xs:string" use="optional"/>
          <xs:attribute name="Vendor" type="xs:string" use="optional"/>
          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
          <xs:attribute name="ServiceCityName" type="xs:string" use="optional"/>
          <xs:attribute name="NumberInParty" type="xs:integer" use="optional"/>
          <xs:attribute name="Name" type="xs:string" use="optional"/>
          <xs:attribute name="Number" type="xs:string" use="optional"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="Misc" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Line" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="Number" type="xs:integer" use="optional"/>
                <xs:attribute name="Type" type="xs:string" use="optional"/>
                <xs:attribute name="Status" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="Vendor" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="Code" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="NumberInParty" type="xs:string" minOccurs="0"/>
            <xs:element name="Location" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="DateTime" type="xs:string" minOccurs="0"/>
            <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Arunk" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Line" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="Number" type="xs:integer" use="optional"/>
                <xs:attribute name="Type" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="AirTaxi" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Line" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="Number" type="xs:integer" use="optional"/>
                <xs:attribute name="Type" type="xs:string" use="optional"/>
                <xs:attribute name="Status" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="Vendor" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="Code" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="NumberInParty" type="xs:string" minOccurs="0"/>
            <xs:element name="OriginLocation" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="DestinationLocation" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="DateTime" type="xs:string" minOccurs="0"/>
            <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Insurance" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Line" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="Number" type="xs:integer" use="optional"/>
                <xs:attribute name="Segment" type="xs:integer" use="optional"/>
                <xs:attribute name="Type" type="xs:string" use="optional"/>
                <xs:attribute name="Status" type="xs:string" use="optional"/>
                <xs:attribute name="StatusCode" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="Coverage" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Amount" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                  <xs:element name="Type" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="GivenName" type="xs:string" minOccurs="0"/>
                  <xs:element name="Surname" type="xs:string" minOccurs="0"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="Vendor" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="Code" type="xs:string" use="optional"/>
                <xs:attribute name="CompanyShortName" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="Departure" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="Arrival" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="PaymentForm" type="xs:string" minOccurs="0"/>
            <xs:element name="ConfirmationNumber" type="xs:string" minOccurs="0"/>
            <xs:element name="SpecialInstructions" type="xs:string" minOccurs="0"/>
          </xs:sequence>
          <xs:attribute name="PurchaseDate" type="xs:string" use="optional"/>
          <xs:attribute name="Start" type="xs:string" use="optional"/>
          <xs:attribute name="End" type="xs:string" use="optional"/>
          <xs:attribute name="NumPolicies" type="xs:string" use="optional"/>
          <xs:attribute name="PremiumAmount" type="xs:string" use="optional"/>
          <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
          <xs:attribute name="PlanType" type="xs:string" use="optional"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="Surface" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Line" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="Number" type="xs:integer" use="optional"/>
                <xs:attribute name="Type" type="xs:string" use="optional"/>
                <xs:attribute name="Status" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="Vendor" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="Code" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="NumberInParty" type="xs:string" minOccurs="0"/>
            <xs:element name="Location" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="OriginLocation" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="DestinationLocation" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="ServiceCity" minOccurs="0">
              <xs:complexType>
                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="ArrivalDepartureIdentifier" type="xs:string" minOccurs="0"/>
            <xs:element name="POS" type="xs:string" minOccurs="0"/>
            <xs:element name="Air" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="DepartureAirport" minOccurs="0">
                    <xs:annotation>
                      <xs:documentation>Departure point of flight segment.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                      <xs:attribute name="CodeContext" type="xs:string" use="optional" default="IATA">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="ArrivalAirport" minOccurs="0">
                    <xs:annotation>
                      <xs:documentation>Departure point of flight segment.</xs:documentation>
                    </xs:annotation>
                    <xs:complexType>
                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                      <xs:attribute name="CodeContext" type="xs:string" use="optional" default="IATA">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="MarketingAirline" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Code" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="DepartureDateTime" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation xml:lang="en"/>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="FlightNumber" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation>The flight number of the flight.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
            <xs:element name="DateTime" type="xs:string" minOccurs="0"/>
            <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="RPH" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation xml:lang="en">Used to provide a reference to an object that is stored elsewhere in a collection of the same objects.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="CustomerInfoType">
    <xs:sequence>
      <xs:element name="Customer" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="PaymentForm" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="TPA_Extensions" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="RPH" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="CCInfo" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="PreferredCustomer" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Ind" type="xs:boolean" use="optional" default="false"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="CardHolderInfo" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="Name" type="xs:string" minOccurs="0"/>
                        <xs:element name="Telephone" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="PhoneNumber" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="Address" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="AddressLine" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                            </xs:sequence>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                      <xs:attribute name="Ind" type="xs:boolean" use="optional" default="false"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="ShortText" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="GivenName" type="xs:string" minOccurs="0"/>
                  <xs:element name="Surname" type="xs:string" minOccurs="0"/>
                  <xs:element name="TPA_Extensions" minOccurs="0">
                    <xs:complexType>
                      <xs:sequence>
                        <xs:element name="NameReference" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="Text" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="NameNumber" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="Number" type="xs:string" use="optional"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="CorporateName" minOccurs="0">
                          <xs:complexType>
                            <xs:sequence>
                              <xs:element name="Name" type="xs:string" minOccurs="0"/>
                              <xs:element name="NameNumber" minOccurs="0">
                                <xs:complexType>
                                  <xs:attribute name="Number" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                              <xs:element name="SeatsRemaining" minOccurs="0">
                                <xs:complexType>
                                  <xs:attribute name="Number" type="xs:string" use="optional"/>
                                </xs:complexType>
                              </xs:element>
                            </xs:sequence>
                            <xs:attribute name="Ind" type="xs:boolean" use="optional" default="false"/>
                          </xs:complexType>
                        </xs:element>
                        <xs:element name="Infant" minOccurs="0">
                          <xs:complexType>
                            <xs:attribute name="Ind" type="xs:boolean" use="optional" default="false"/>
                          </xs:complexType>
                        </xs:element>
                      </xs:sequence>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="PassengerType" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="Telephone" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="RPH" type="xs:string" use="optional"/>
                <xs:attribute name="AreaCityCode" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Code assigned for telephones in a specific region, city, or area.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="PhoneNumber" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="Email" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
            <xs:element name="Address" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="AddressLine" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="ProgramID" type="xs:string" use="optional"/>
                <xs:attribute name="Codeshare" type="xs:string" use="optional"/>
                <xs:attribute name="MembershipID" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Unique identifier of the member in the program. ie: membership number, account number, etc.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="NameNumber" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Unique identifier of the member in the program. ie: membership number, account number, etc.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="RPH" type="xs:string" use="optional">
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Used to provide a reference to an object that is stored elsewhere in a collection of the same objects.</xs:documentation>
                  </xs:annotation>
                </xs:attribute>
                <xs:attribute name="Status" type="xs:string" use="optional"/>
                <xs:attribute name="ShortText" type="xs:string" use="optional"/>
              </xs:complexType>
            </xs:element>
            <xs:element name="TPA_Extensions" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="CustomerIdentifier" minOccurs="0">
                    <xs:complexType>
                      <xs:attribute name="Identifier" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="Passport" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="RPH" type="xs:string" use="optional"/>
                      <xs:attribute name="Number" type="xs:string" use="optional"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="OTA_TravelItineraryRS">
    <xs:annotation>
      <xs:documentation>PNR display response</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Success" type="xs:string" minOccurs="0"/>
        <xs:element name="Warnings" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Warning" minOccurs="0">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TravelItinerary" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ItineraryRef" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Controlling system's reference to this itinerary.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="ID" type="xs:string" use="optional"/>
                  <xs:attribute name="PrimeHostID" type="xs:string" use="optional"/>
                  <xs:attribute name="PartitionID" type="xs:string" use="optional"/>
                  <xs:attribute name="OtherSystemID" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="Inhibit" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="Code" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="CustomerInfos" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Information for all customers associated with this itinerary.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="CustomerInfo" type="CustomerInfoType" minOccurs="0"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="ItineraryInfo" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Itinerary reservation information.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:annotation>
                    <xs:documentation/>
                  </xs:annotation>
                  <xs:sequence>
                    <xs:element name="ReservationItems" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Item" type="ItemType" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">A single reservation item (e.g. Hotel, Car, Air, Package).</xs:documentation>
                            </xs:annotation>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Ticketing" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="TicketTimeLimit" type="xs:string" use="optional">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">TicketTimeLimit - Indicates the ticketing arrangement, and allows for the requirement that an itinerary must be ticketed by a certain date and time.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="eTicketNumber" type="xs:string" use="optional">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">The electronic or paper ticket number.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="RPH" type="xs:string" use="optional">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">Used to provide a reference to an object that is stored elsewhere in a collection of the same objects.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ItineraryPricing" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="PriceQuote" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="ResponseHeader" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="TicketingFees" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="FeeInformation" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                              <xs:attribute name="ServiceType" type="xs:string" use="optional"/>
                                              <xs:attribute name="OnlineInterlineService" type="xs:string" use="optional"/>
                                              <xs:attribute name="NonRefundableInd" type="xs:string" use="optional"/>
                                              <xs:attribute name="NonCommissionInd" type="xs:string" use="optional"/>
                                              <xs:attribute name="GuaranteeType" type="xs:string" use="optional"/>
                                              <xs:attribute name="FunctionCode" type="xs:string" use="optional"/>
                                              <xs:attribute name="DisplayOnOutputInd" type="xs:string" use="optional"/>
                                              <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                              <xs:attribute name="AccountData" type="xs:string" use="optional"/>
                                            </xs:extension>
                                          </xs:simpleContent>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Disclaimer" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PricedItinerary" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="AirItineraryPricingInfo" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="ItinTotalFare" minOccurs="0" maxOccurs="unbounded">
                                              <xs:annotation>
                                                <xs:documentation>Total price of the itinerary</xs:documentation>
                                              </xs:annotation>
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="BaseFare" minOccurs="0">
                                                    <xs:annotation>
                                                      <xs:documentation>Price of the inventory excluding taxes and fees.</xs:documentation>
                                                    </xs:annotation>
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="EquivFare" minOccurs="0">
                                                    <xs:annotation>
                                                      <xs:documentation>Price of the inventory excluding taxes and fees in the payable currency.</xs:documentation>
                                                    </xs:annotation>
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Taxes" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Tax" minOccurs="0" maxOccurs="unbounded">
                                                          <xs:complexType>
                                                            <xs:attribute name="TaxCode" type="xs:string" use="optional">
                                                              <xs:annotation>
                                                                <xs:documentation>Identifies the code for the tax.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:attribute>
                                                            <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                            <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="TaxBreakdownCode" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="TotalFare" minOccurs="0">
                                                    <xs:annotation>
                                                      <xs:documentation>The total price that the passenger would pay (includes fare, taxes, fees)</xs:documentation>
                                                    </xs:annotation>
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Totals" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="BaseFare" minOccurs="0">
                                                          <xs:annotation>
                                                            <xs:documentation>Price of the inventory excluding taxes and fees.</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                            <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="EquivFare" minOccurs="0">
                                                          <xs:annotation>
                                                            <xs:documentation>Price of the inventory excluding taxes and fees in the payable currency.</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                            <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Taxes" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Tax" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                                  <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="TotalFare" minOccurs="0">
                                                          <xs:annotation>
                                                            <xs:documentation>The total price that the passenger would pay (includes fare, taxes, fees)</xs:documentation>
                                                          </xs:annotation>
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                            <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="PTC_FareBreakdown" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="PassengerTypeQuantity" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Quantity" type="xs:integer" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="FareBasisCode" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                                                  <xs:element name="FareCalc" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                                                  <xs:element name="Endorsements" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Text" type="xs:string" minOccurs="0"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="ResTicketingRestrictions" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                                                  <xs:element name="FlightSegment" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="FlightType" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Airport" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                            <xs:attribute name="CodeContext" type="xs:string" use="optional" default="IATA">
                                                              <xs:annotation>
                                                                <xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
                                                              </xs:annotation>
                                                            </xs:attribute>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="OperatingAirline" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                            <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="FareBasisCode" type="xs:string" minOccurs="0"/>
                                                        <xs:element name="ValidityDates" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="NotValidBefore" type="xs:string" minOccurs="0"/>
                                                              <xs:element name="NotValidAfter" type="xs:string" minOccurs="0"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="RPH" type="xs:string" use="optional">
                                                        <xs:annotation>
                                                          <xs:documentation xml:lang="en">Used to provide a reference to an object that is stored elsewhere in a collection of the same objects.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:attribute>
                                                      <xs:attribute name="DepartureDateTime" type="xs:string">
                                                        <xs:annotation>
                                                          <xs:documentation xml:lang="en"/>
                                                        </xs:annotation>
                                                      </xs:attribute>
                                                      <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional">
                                                        <xs:annotation>
                                                          <xs:documentation xml:lang="en">Specific Booking Class for this segment.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:attribute>
                                                      <xs:attribute name="FlightNumber" type="xs:string" use="optional">
                                                        <xs:annotation>
                                                          <xs:documentation>The flight number of the flight.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:attribute>
                                                      <xs:attribute name="ActionCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TicketingFees" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="FeeInformation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:simpleContent>
                                                        <xs:extension base="xs:string">
                                                          <xs:attribute name="ServiceType" type="xs:string" use="optional"/>
                                                          <xs:attribute name="OnlineInterlineService" type="xs:string" use="optional"/>
                                                          <xs:attribute name="NonRefundableInd" type="xs:string" use="optional"/>
                                                          <xs:attribute name="NonCommissionInd" type="xs:string" use="optional"/>
                                                          <xs:attribute name="GuaranteeType" type="xs:string" use="optional"/>
                                                          <xs:attribute name="FunctionCode" type="xs:string" use="optional"/>
                                                          <xs:attribute name="DisplayOnOutputInd" type="xs:string" use="optional"/>
                                                          <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                          <xs:attribute name="AccountData" type="xs:string" use="optional"/>
                                                        </xs:extension>
                                                      </xs:simpleContent>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="Disclaimer" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="SignatureLine" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" type="xs:string" minOccurs="0"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="SequenceNumber" type="xs:integer" use="optional"/>
                                    <xs:attribute name="StatusCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="TaxExempt" type="xs:string" use="optional"/>
                                    <xs:attribute name="InputMessage" type="xs:string" use="optional"/>
                                    <xs:attribute name="DeletedBy" type="xs:string" use="optional"/>
                                    <xs:attribute name="ValidatingCarrier" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FuturePriceInfo" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Text" type="xs:string" minOccurs="0"/>
                              </xs:sequence>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PhaseIVInfo" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Record" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="ItinTotalFare" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="PassengerTypeQuantity" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="BaseFare" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="EquivFare" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Taxes" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Tax" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="EquivTax" minOccurs="0" maxOccurs="unbounded">
                                                          <xs:complexType>
                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                            <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                                      <xs:attribute name="Paid" type="xs:boolean" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="Exempt" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Hemisphere" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Journey" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Endorsements" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" type="xs:string" minOccurs="0"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TourCode" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" type="xs:string" minOccurs="0"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Commission" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                <xs:attribute name="Percentage" type="xs:decimal" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TotalFare" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="UpdatedBy" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="TPA_Extensions" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Source" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="AgentSine" type="xs:string" use="optional"/>
                                                      <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="HomePseudoCityCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="CreateDateTime" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="PTC_FareBreakdown" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:annotation>
                                            <xs:documentation>Per passenger type code pricing for this itinerary. Set if fareBreakdown was requested.</xs:documentation>
                                          </xs:annotation>
                                          <xs:sequence>
                                            <xs:element name="FareBasisCode" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                                            <xs:element name="TicketDesignator" type="xs:string" minOccurs="0"/>
                                            <xs:element name="FareCalc" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                                            <xs:element name="FlightSegment" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="FlightType" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Airport" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CodeContext" type="xs:string" use="optional" default="IATA">
                                                        <xs:annotation>
                                                          <xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
                                                        </xs:annotation>
                                                      </xs:attribute>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="OperatingAirline" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="FareBasisCode" type="xs:string" minOccurs="0"/>
                                                  <xs:element name="ValidityDates" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="NotValidBefore" type="xs:string" minOccurs="0"/>
                                                        <xs:element name="NotValidAfter" type="xs:string" minOccurs="0"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="BaggageAllowance" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Type" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Weight" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="RPH" type="xs:string" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation xml:lang="en">Used to provide a reference to an object that is stored elsewhere in a collection of the same objects.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="DepartureDateTime" type="xs:string" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation xml:lang="en"/>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation xml:lang="en">Specific Booking Class for this segment.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="FlightNumber" type="xs:string" use="optional">
                                                  <xs:annotation>
                                                    <xs:documentation>The flight number of the flight.</xs:documentation>
                                                  </xs:annotation>
                                                </xs:attribute>
                                                <xs:attribute name="ActionCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Number" type="xs:string" use="optional"/>
                                    <xs:attribute name="Status" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="SpecialServices" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Service" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Special service requested.</xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="TPA_Extensions" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="SSRType" type="xs:string" minOccurs="0"/>
                                <xs:element name="Name" minOccurs="0">
                                  <xs:complexType>
                                    <xs:simpleContent>
                                      <xs:extension base="xs:string">
                                        <xs:attribute name="Number" type="xs:decimal" use="optional"/>
                                      </xs:extension>
                                    </xs:simpleContent>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Airline" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional">
                                <xs:annotation>
                                  <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Text" type="xs:string" minOccurs="0"/>
                        </xs:sequence>
                        <xs:attribute name="SSRCode" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ItemRPH" type="xs:string" use="optional"/>
                  <xs:attribute name="Type" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="Remarks" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Free text remarks associated with the itinerary (non-customer, non-item).</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Remark" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Line" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Text" type="xs:string" minOccurs="0"/>
                              </xs:sequence>
                              <xs:attribute name="Type" type="xs:string" use="optional"/>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                              <xs:attribute name="Number" type="xs:integer" use="optional"/>
                              <xs:attribute name="SegmentNumber" type="xs:integer" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="TPA_Extensions" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="AccountingInfo" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="DocumentInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Document" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Link" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="NameNumber" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Number" type="xs:decimal" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PersonName" type="xs:string" minOccurs="0"/>
                          <xs:element name="PaymentInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="FareApplication" type="xs:string" minOccurs="0"/>
                                <xs:element name="AccountVendor" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Airline" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="BaseFare" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                    <xs:attribute name="Percent" type="xs:decimal" use="optional"/>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional">
                                      <xs:annotation>
                                        <xs:documentation>Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard "minor unit".</xs:documentation>
                                      </xs:annotation>
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Taxes" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Tax" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="Percent" type="xs:decimal" use="optional"/>
                                          <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="GST" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                          <xs:attribute name="Percent" type="xs:decimal" use="optional"/>
                                          <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="QST" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                          <xs:attribute name="Percent" type="xs:decimal" use="optional"/>
                                          <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="DecimalPlaces" type="xs:integer" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PaymentForm" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="PaymentCard" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="CardNumber" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Commission" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                    <xs:attribute name="Percentage" type="xs:decimal" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="TicketingInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Ticketing" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="eTicketNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="CouponCount" type="xs:string" use="optional"/>
                                    <xs:attribute name="ConjunctedCount" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="IssueDate" type="xs:string" minOccurs="0"/>
                                <xs:element name="IssueLocation" type="xs:string" minOccurs="0"/>
                                <xs:element name="Exchange" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="TarriffBasis" type="xs:string" minOccurs="0"/>
                                <xs:element name="OriginalInvoice" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Text" type="xs:string" minOccurs="0"/>
                        </xs:sequence>
                        <xs:attribute name="Type" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="QInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Placement" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                              <xs:attribute name="Instruction" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="UpdatedBy" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Information on the last entity to modify this Itinerary and when this occurred.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:annotation>
                    <xs:documentation>Element to capture creation and last update data.</xs:documentation>
                  </xs:annotation>
                  <xs:sequence>
                    <xs:element name="TPA_Extensions" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Source" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="AgentSine" type="xs:string" use="optional"/>
                              <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                              <xs:attribute name="HomePseudoCityCode" type="xs:string" use="optional"/>
                              <xs:attribute name="AAACity" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="TravelPolicy" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="ID" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Access" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>Describes the action taken on the record.</xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AccessPerson" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation>Name of individual who originated or updated record.</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:annotation>
                                <xs:documentation>This is an XML Schema representing the OTA Person Name object.</xs:documentation>
                              </xs:annotation>
                              <xs:sequence>
                                <xs:element name="GivenName" type="xs:string" minOccurs="0">
                                  <xs:annotation>
                                    <xs:documentation>Given name, first name or names</xs:documentation>
                                  </xs:annotation>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="CreateDateTime" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TPA_Extensions" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="HostCommand" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Errors" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Error" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ErrorInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Message" type="xs:string" minOccurs="0"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ErrorCode" type="xs:string" use="optional"/>
                  <xs:attribute name="Severity" type="xs:string" use="optional"/>
                  <xs:attribute name="ErrorMessage" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 						message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-					DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" type="xs:string" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Version" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application 	to 					process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and needs to 				retrieve messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!DOCTYPE schema PUBLIC "-//W3C//DTD XMLSchema 200102//EN" "http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/XMLSchema.dtd">
<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/envelope.xsd</con:url><con:content>&lt;schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/">
  &lt;include schemaLocation="env.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/env.xsd</con:url><con:content><![CDATA[<!--Schema for the SOAP/1.1 envelope

     This schema has been produced using W3C's SOAP Version 1.2 schema
     found at:

     http://www.w3.org/2001/06/soap-envelope

     Copyright 2001 Martin Gudgin, Developmentor.

     Changes made are the following:
     - reverted namespace to http://schemas.xmlsoap.org/soap/envelope/
     - reverted mustUnderstand to only allow 0 and 1 as lexical values
	 - made encodingStyle a global attribute 20020825

	 Further changes:

	 - removed default value from mustUnderstand attribute declaration - 20030314

     Original copyright:
     
     Copyright 2001 W3C (Massachusetts Institute of Technology,
     Institut National de Recherche en Informatique et en Automatique,
     Keio University). All Rights Reserved.
     http://www.w3.org/Consortium/Legal/

     This document is governed by the W3C Software License [1] as
     described in the FAQ [2].

     [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
     [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xml.xsd</con:url><con:content><![CDATA[<!DOCTYPE xs:schema PUBLIC "-//W3C//DTD XMLSCHEMA 200102//EN" "http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/XMLSchema.dtd">
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="OTA" name="OTA_TravelItineraryReadLLSRQ" bindingOperationName="OTA_TravelItineraryReadRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="b8a6ce5e-de0a-491c-94b5-264733b876cc"><con:settings/><con:call name="OTA_TravelItineraryReadLLSRQ" id="0874c2be-afae-4819-8639-6c162bd46adc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">99999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversation_id</eb:ConversationId>
         <eb:Service eb:type="OTA">OTA_TravelItineraryReadLLSRQ</eb:Service>
         <eb:Action>OTA_TravelItineraryReadLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>2007-11-15T16:41:41</eb:Timestamp>
            <eb:TimeToLive>2008-11-15T16:41:41</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESE!ICESMSLB\/RES.LB!-4392222619456842748!470988!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <OTA_TravelItineraryReadRQ Version="2003A.TsabreXML1.15.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="ipcc"/>
         </POS>
         <UniqueID ID="">
            <TPA_Extensions>
               <Transaction Code="PNR"/>
            </TPA_Extensions>
         </UniqueID>
      </OTA_TravelItineraryReadRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="https://webservices.sabre.com/websvc/OTA_TravelItineraryPortType/OTA_TravelItineraryReadRQRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="OTA_AirAvailSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}OTA_AirAvailSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_AirAvailLLS1.10.1RQ.wsdl" id="7856c8b1-c580-46f4-8ddd-96af80d47725" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_AirAvailLLS1.10.1RQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_AirAvailLLS1.10.1RQ.wsdl</con:url><con:content><![CDATA[<definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd1="http://webservices.sabre.com/sabreXML/2003/07" xmlns:tns="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <types>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2003/07" schemaLocation="OTA_AirAvailLLS1.10.1RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
      <xsd:import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
    </xsd:schema>
  </types>
  <message name="OTA_AirAvailInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:OTA_AirAvailRQ"/>
  </message>
  <message name="OTA_AirAvailOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:OTA_AirAvailRS"/>
  </message>
  <portType name="OTA_AirAvailPortType">
    <operation name="OTA_AirAvailRQ">
      <input message="tns:OTA_AirAvailInput"/>
      <output message="tns:OTA_AirAvailOutput"/>
    </operation>
  </portType>
  <binding name="OTA_AirAvailSoapBinding" type="tns:OTA_AirAvailPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="OTA_AirAvailRQ">
      <soap:operation soapAction="OTA"/>
      <input>
        <soap:header message="tns:OTA_AirAvailInput" part="header" use="literal"/>
        <soap:header message="tns:OTA_AirAvailInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </input>
      <output>
        <soap:header message="tns:OTA_AirAvailOutput" part="header" use="literal"/>
        <soap:header message="tns:OTA_AirAvailOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="OTA_AirAvailService">
    <port name="OTA_AirAvailPortType" binding="tns:OTA_AirAvailSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_AirAvailLLS1.10.1RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:tns="http://webservices.sabre.com/sabreXML/2003/07" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="OTA_AirAvailLLS1.10.1RQ.xsd"/>
  &lt;include schemaLocation="OTA_AirAvailLLS1.10.1RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_AirAvailLLS1.10.1RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="OTA_AirAvailRQ">
    <xs:annotation>
      <xs:documentation>Comment describing your root element</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="POS" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Source" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="PseudoCityCode" type="xs:string" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">An identification code assigned to an office/agency by a reservation system.</xs:documentation>
                    </xs:annotation>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TPA_Extensions" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MessagingDetails" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="MDRSubset" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="OriginDestinationInformation" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Information on the locations between which availability is to be checked.</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:annotation>
              <xs:documentation>Origin and Destination location, and time information for the request. Also includes the ability to specify a connection location for the search.</xs:documentation>
            </xs:annotation>
            <xs:sequence>
              <xs:element name="DepartureDateTime" minOccurs="0">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="WindowBefore" type="xs:string" use="optional"/>
                      <xs:attribute name="WindowAfter" type="xs:string" use="optional"/>
                      <xs:attribute name="DateTime" type="xs:string" use="optional"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
              <xs:element name="OriginLocation" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Travel Origin Location - for example, air uses the IATA 3 letter code.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="LocationCode" use="required">
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="8"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="CodeContext" default="IATA">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="32"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="TPA_Extensions" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Scan" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ArrivalDateTime" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="WindowBefore" type="xs:string" use="optional"/>
                        <xs:attribute name="WindowAfter" type="xs:string" use="optional"/>
                        <xs:attribute name="DateTime" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="DestinationLocation" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Travel Destination Location - for example, air uses the IATA 3 letter code.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="LocationCode" use="required">
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="8"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="CodeContext" default="IATA">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="32"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="ConnectionLocations" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Travel Connection Location - for example, air uses the IATA 3 letter code.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:annotation>
                    <xs:documentation>To specify connection locations, preference level for each, min connection time, and whether location is specified for stopping or 												changing.</xs:documentation>
                  </xs:annotation>
                  <xs:sequence>
                    <xs:element name="ConnectionLocation" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="TPA_Extensions" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="ExcludeCodeshare" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional" default="false"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Airline" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                    <xs:attribute name="Any" type="xs:boolean" use="optional" default="false"/>
                                    <xs:attribute name="Exclude" type="xs:boolean" use="optional" default="false"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                        <xs:attribute name="CodeContext" type="xs:string" use="optional" default="IATA"/>
                        <xs:attribute name="MinChangeTime" type="xs:nonNegativeInteger" use="optional">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">Number of minutes between connections.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="MaxChangeTime" type="xs:nonNegativeInteger" use="optional">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">Number of minutes between connections.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="ExcludeCodeShare" type="xs:boolean" use="optional" default="false"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="SpecificFlightInfo" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Information used to specify a flight for which availablity is to be checked.</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:annotation>
              <xs:documentation>Specify actual airline, flight number, or booking class</xs:documentation>
            </xs:annotation>
            <xs:sequence>
              <xs:element name="FlightNumber" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Specific flight number to request availability for. Requires that Airline is also supplied.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="Number" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="Airline" minOccurs="0">
                <xs:annotation>
                  <xs:documentation>Specify airline to request availability for.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Identifies a company by name.</xs:documentation>
                  </xs:annotation>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="Code" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                        </xs:annotation>
                        <xs:simpleType>
                          <xs:annotation>
                            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                          </xs:annotation>
                          <xs:restriction base="xs:string">
                            <xs:minLength value="1"/>
                            <xs:maxLength value="8"/>
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
              <xs:element name="BookingClassPref" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="ResBookDesigCode" use="required">
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for an Alpha String, length 2 (for letter codes)</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:pattern value="[A-Z]{1,2}"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="TPA_Extensions" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="DepartureDateTime" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="WindowBefore" type="xs:string" use="optional"/>
                        <xs:attribute name="WindowAfter" type="xs:string" use="optional"/>
                        <xs:attribute name="DateTime" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="OriginLocation" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="LocationCode" use="required">
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="8"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="CodeContext" use="optional" default="IATA">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
                          </xs:annotation>
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="32"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="DestinationLocation" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="LocationCode" use="required">
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="8"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="CodeContext" use="optional" default="IATA">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">Identifies the context of the identifying code, such as IATA, ARC, or internal code, etc.</xs:documentation>
                          </xs:annotation>
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="32"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="AdditionalAvail" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Ind" type="xs:boolean" use="optional" default="false">
                          <xs:annotation>
                            <xs:documentation>This element requests additional availability. If Ind="true" send 1*, and nothing else.  Cannot combine with any other qualifiers.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="ClassInd" type="xs:boolean" use="optional" default="false">
                          <xs:annotation>
                            <xs:documentation>This element requests additional availability. If Ind="true" send 1*C, and nothing else.  Cannot combine with any other qualifiers.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="MoveDown" type="xs:boolean" use="optional" default="false">
                          <xs:annotation>
                            <xs:documentation>This element requests a Move Down over DirectConnect: ¤MD</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TravelPreferences" minOccurs="0">
          <xs:annotation>
            <xs:documentation>Air Availability Request preference information.</xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="VendorPref" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:documentation>Specify vendors to include and exclude from the response.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                  <xs:attribute name="Code" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="8"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="CabinPref" minOccurs="0">
                <xs:complexType>
                  <xs:annotation>
                    <xs:documentation xml:lang="en">Indicates preferences for choice of airline cabin for a given travel situation.</xs:documentation>
                  </xs:annotation>
                  <xs:attribute name="Number" type="xs:string" use="optional"/>
                  <xs:attribute name="Cabin" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="TPA_Extensions" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ExcludeVendorPref" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="Code" use="optional">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                          </xs:annotation>
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="8"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PromotionalSpot" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="CodeType">
                          <xs:simpleType>
                            <xs:restriction base="xs:string">
                              <xs:enumeration value="L"/>
                              <xs:enumeration value="C"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CharteredAirline" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Desired" type="xs:boolean" default="false"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="DirectAccess" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Ind" type="xs:boolean" default="false"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="MaxStopsQuantity" type="xs:integer" use="optional">
              <xs:annotation>
                <xs:documentation>Request flights that have no more than the requested number of stops.</xs:documentation>
              </xs:annotation>
            </xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 						message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-					DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Test"/>
            <xs:enumeration value="Production"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="Version" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application 	to 								process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and 	needs to 									retrieve messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/OTA_AirAvailLLS1.10.1RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="OTA_AirAvailRS">
    <xs:annotation>
      <xs:documentation>Comment describing your root element</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Success" type="xs:string" minOccurs="0"/>
        <xs:element name="Warnings" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Warning" minOccurs="0">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="OriginDestinationOptions" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OriginDestinationOption" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="TPA_Extensions" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="OriginCityTimeZoneCode" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="DestinationCityTimeZoneCode" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="TimeZoneDifference" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                          <xs:element name="DayOfWeek" type="xs:string" minOccurs="0"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="FlightSegment" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:documentation>Details of the flight option for an origin destination pair.</xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="DepartureAirport" minOccurs="0">
                            <xs:complexType>
                              <xs:annotation>
                                <xs:documentation xml:lang="en">Code and optional string to describe a location point.</xs:documentation>
                              </xs:annotation>
                              <xs:attribute name="LocationCode" use="required">
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="1"/>
                                    <xs:maxLength value="8"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="CodeContext" default="IATA">
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="1"/>
                                    <xs:maxLength value="32"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ArrivalAirport" minOccurs="0">
                            <xs:complexType>
                              <xs:annotation>
                                <xs:documentation xml:lang="en">Code and optional string to describe a location point.</xs:documentation>
                              </xs:annotation>
                              <xs:attribute name="LocationCode" use="required">
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="1"/>
                                    <xs:maxLength value="8"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="CodeContext" default="IATA">
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="1"/>
                                    <xs:maxLength value="32"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="OperatingAirline" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional">
                                <xs:annotation>
                                  <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Equipment" minOccurs="0">
                            <xs:complexType>
                              <xs:annotation>
                                <xs:documentation xml:lang="en">Specifies the aircraft equipment type.</xs:documentation>
                              </xs:annotation>
                              <xs:attribute name="AirEquipType" use="required">
                                <xs:annotation>
                                  <xs:documentation>This is the 3 character IATA code.</xs:documentation>
                                </xs:annotation>
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for Strings, length exactly 3</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="3"/>
                                    <xs:maxLength value="3"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="ChangeofGauge" type="xs:boolean" use="optional" default="false">
                                <xs:annotation>
                                  <xs:documentation>Indicates there is an equipment change.</xs:documentation>
                                </xs:annotation>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MarketingAirline" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" use="optional">
                                <xs:annotation>
                                  <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                                </xs:annotation>
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="1"/>
                                    <xs:maxLength value="8"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Comment" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="Language" type="xs:language" use="optional">
                                    <xs:annotation>
                                      <xs:documentation>Language identification.</xs:documentation>
                                    </xs:annotation>
                                  </xs:attribute>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MarketingCabin" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Meal" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="MealCode" type="xs:string" use="required">
                                      <xs:annotation>
                                        <xs:documentation xml:lang="en">Enumerated List (Meal Code in brackets):
																								Breakfast				(B)
																								Snack  					(S)
																								Dinner					(D)
																								Hot Meal				(H)
																								Lunch					(L)
																								Refreshments			(R)
																								Complimentary Liquor	(C)
																								Meal					(M)
																								Liquor for Purchase		(P)
																								Food for Purchase		(F)
																								Cold Meal				(O)
																								No Meal Service			(-)
																								
																						Alternately, a String of Length 32 can be used if the above list does not suffice.</xs:documentation>
                                      </xs:annotation>
                                      <!--for the time being we are keeping MealCode as string type but it should be changed to enumeration type-->
                                      <!--<xs:simpleType>
																						<xs:restriction base="xs:string">
																							<xs:enumeration value="Breakfast"/>
																							<xs:enumeration value="Snack"/>
																							<xs:enumeration value="Dinner"/>
																							<xs:enumeration value="Hot Meal"/>
																							<xs:enumeration value="Lunch"/>
																							<xs:enumeration value="Refreshments"/>
																							<xs:enumeration value="Complimentary Liquor"/>
																							<xs:enumeration value="Meal"/>
																							<xs:enumeration value="Liquor for Purchase"/>
																							<xs:enumeration value="Food for Purchase"/>
																							<xs:enumeration value="Cold Meal"/>
																							<xs:enumeration value="No Meal Service"/>
																							<xs:enumeration value="B"/>
																						</xs:restriction>
																			</xs:simpleType>-->
                                    </xs:attribute>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BookingClassAvail" minOccurs="0" maxOccurs="unbounded">
                            <xs:annotation>
                              <xs:documentation>Booking codes available to be sold for a particular flight segment.</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:attribute name="ResBookDesigCode" use="optional">
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for an Alpha String, length 2 (for letter codes)</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:pattern value="[A-Z]{1,2}"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="RPH" type="xs:string" use="optional">
                                <!--<xs:simpleType>
																	<xs:restriction base="xs:string">
																		<xs:pattern value="[0-9]{1,8}"/>
																	</xs:restriction>
																</xs:simpleType>
															</xs:attribute>-->
                              </xs:attribute>
                              <xs:attribute name="Availability" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="TPA_Extensions" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CancelledStatus" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="EffectiveDate" type="xs:string" minOccurs="0"/>
                                <xs:element name="DiscontinueDate" type="xs:string" minOccurs="0"/>
                                <xs:element name="Text" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                                <xs:element name="CodeShareBlock" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="CharterService" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="ConnectionIndicator" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="ParticipationLevel" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="DaysOfOperation" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="OperationSchedule" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="OperationTimes" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="OperationTime" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Sun" type="xs:boolean" use="optional"/>
                                                      <xs:attribute name="Mon" type="xs:boolean" use="optional"/>
                                                      <xs:attribute name="Tue" type="xs:boolean" use="optional"/>
                                                      <xs:attribute name="Weds" type="xs:boolean" use="optional"/>
                                                      <xs:attribute name="Thur" type="xs:boolean" use="optional"/>
                                                      <xs:attribute name="Fri" type="xs:boolean" use="optional"/>
                                                      <xs:attribute name="Sat" type="xs:boolean" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FlightFacts" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                                <xs:element name="TrafficRestriction" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                        <xs:attribute name="ArrivalDateTime" type="xs:string" use="optional"/>
                        <xs:attribute name="StopQuantity" type="xs:nonNegativeInteger" use="optional">
                          <xs:annotation>
                            <xs:documentation>The number of stops the flight makes</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="RPH" type="xs:string" use="optional">
                          <!--<xs:simpleType>
																	<xs:restriction base="xs:string">
																		<xs:pattern value="[0-9]{1,8}"/>
																	</xs:restriction>
																</xs:simpleType>
															</xs:attribute>-->
                        </xs:attribute>
                        <xs:attribute name="FlightNumber" type="xs:string" use="optional">
                          <xs:annotation>
                            <xs:documentation>The flight number of the flight.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="OnTimeRate" type="xs:string" use="optional">
                          <xs:annotation>
                            <xs:documentation>Specifies the Dept. of Transport on time rate of the  flight.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="SmokingAllowed" type="xs:string" use="optional">
                          <xs:annotation>
                            <xs:documentation>Specifies if the flight is smoking or not.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="Ticket" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TPA_Extensions" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="HostCommand" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Errors" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Error" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ErrorInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Message" type="xs:string" minOccurs="0"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ErrorCode" type="xs:string" use="optional"/>
                  <xs:attribute name="Severity" type="xs:string" use="optional"/>
                  <xs:attribute name="ErrorMessage" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 											message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-						DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:NMTOKEN">
            <xs:enumeration value="Test"/>
            <xs:enumeration value="Production"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="Version" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application 	to 						process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and 	needs to 				retrieve 		messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
						 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
						 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!DOCTYPE schema PUBLIC "-//W3C//DTD XMLSchema 200102//EN" "http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/XMLSchema.dtd">
<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/envelope.xsd</con:url><con:content>&lt;schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/">
  &lt;include schemaLocation="env.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/env.xsd</con:url><con:content><![CDATA[<!--Schema for the SOAP/1.1 envelope

     This schema has been produced using W3C's SOAP Version 1.2 schema
     found at:

     http://www.w3.org/2001/06/soap-envelope

     Copyright 2001 Martin Gudgin, Developmentor.

     Changes made are the following:
     - reverted namespace to http://schemas.xmlsoap.org/soap/envelope/
     - reverted mustUnderstand to only allow 0 and 1 as lexical values
	 - made encodingStyle a global attribute 20020825

	 Further changes:

	 - removed default value from mustUnderstand attribute declaration - 20030314

     Original copyright:
     
     Copyright 2001 W3C (Massachusetts Institute of Technology,
     Institut National de Recherche en Informatique et en Automatique,
     Keio University). All Rights Reserved.
     http://www.w3.org/Consortium/Legal/

     This document is governed by the W3C Software License [1] as
     described in the FAQ [2].

     [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
     [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xml.xsd</con:url><con:content><![CDATA[<!DOCTYPE xs:schema PUBLIC "-//W3C//DTD XMLSCHEMA 200102//EN" "http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/XMLSchema.dtd">
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="OTA" name="OTA_AirAvailLLSRQ" bindingOperationName="OTA_AirAvailRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="fb12f866-16a1-4bd7-b391-e4c54c4111cd"><con:settings/><con:call name="OTA_AirAvailLLSRQ" id="62f0df26-5415-4ced-96c3-a383b66f1366"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">99999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversation_ID</eb:ConversationId>
         <eb:Service eb:type="OTA">OTA_AirAvailLLSRQ</eb:Service>
         <eb:Action>OTA_AirAvailLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01Z</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59Z</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">binary security token</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <OTA_AirAvailRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <OriginDestinationInformation>
            <FlightSegment DepartureDateTime="06-06T14:00">
               <ConnectionLocations>
                  <ConnectionLocation LocationCode="SLC"/>
               </ConnectionLocations>
               <DestinationLocation LocationCode="LAS"/>
               <OriginLocation LocationCode="DFW"/>
            </FlightSegment>
         </OriginDestinationInformation>
      </OTA_AirAvailRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="https://webservices.sabre.com/websvc/OTA_AirAvailPortType/OTA_AirAvailRQRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="IgnoreTransactionSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}IgnoreTransactionSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/IgnoreTransactionLLSRQ.wsdl" id="c483fbc9-98ec-4d5b-a6de-c4400d12b1f0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/IgnoreTransactionLLSRQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/IgnoreTransactionLLSRQ.wsdl</con:url><con:content><![CDATA[<definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd1="http://webservices.sabre.com/sabreXML/2003/07" xmlns:tns="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <types>
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2003/07" schemaLocation="IgnoreTransactionLLSRQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
      <xsd:import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
      <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
    </xsd:schema>
  </types>
  <message name="IgnoreTransactionInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:IgnoreTransactionRQ"/>
  </message>
  <message name="IgnoreTransactionOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <part name="body" element="xsd1:IgnoreTransactionRS"/>
  </message>
  <portType name="IgnoreTransactionPortType">
    <operation name="IgnoreTransactionRQ">
      <input message="tns:IgnoreTransactionInput"/>
      <output message="tns:IgnoreTransactionOutput"/>
    </operation>
  </portType>
  <binding name="IgnoreTransactionSoapBinding" type="tns:IgnoreTransactionPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="IgnoreTransactionRQ">
      <soap:operation soapAction="OTA"/>
      <input>
        <soap:header message="tns:IgnoreTransactionInput" part="header" use="literal"/>
        <soap:header message="tns:IgnoreTransactionInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </input>
      <output>
        <soap:header message="tns:IgnoreTransactionOutput" part="header" use="literal"/>
        <soap:header message="tns:IgnoreTransactionOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </output>
    </operation>
  </binding>
  <service name="IgnoreTransactionService">
    <port name="IgnoreTransactionPortType" binding="tns:IgnoreTransactionSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </port>
  </service>
</definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/IgnoreTransactionLLSRQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:tns="http://webservices.sabre.com/sabreXML/2003/07" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="IgnoreTransactionLLSRQ.xsd"/>
  &lt;include schemaLocation="IgnoreTransactionLLSRS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/IgnoreTransactionLLSRQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="IgnoreTransactionRQ">
    <xs:annotation>
      <xs:documentation>Ignore changes to a PNR</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="POS">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Source">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="RequestorID" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="CompanyName" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="CompanyShortName" use="optional">
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="1"/>
                                    <xs:maxLength value="32"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="TravelSector" use="optional">
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for codes in the OTA code tables.</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:pattern value="[0-9A-Z]{1,3}"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="Code" use="optional">
                                <xs:annotation>
                                  <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                                </xs:annotation>
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="1"/>
                                    <xs:maxLength value="8"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="CodeContext" use="optional">
                                <xs:annotation>
                                  <xs:documentation xml:lang="en">Identifies the context of the identifying code, 																						such as DUNS, IATA or internal code, etc.</xs:documentation>
                                </xs:annotation>
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="1"/>
                                    <xs:maxLength value="32"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="URL" type="xs:anyURI">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">URL that identifies the location associated with the record 																			identified by the 	UniqueID.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="Type" use="required">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">A reference to the type of object defined by the UniqueID 																			element.</xs:documentation>
                          </xs:annotation>
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Used for codes in the OTA code tables.</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:pattern value="[0-9A-Z]{1,3}"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="Instance">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">The identification of a record as it exists at a point in time. An 																			instance 	is 	used 	in 	update 			messages 																					where the sender must assure the server that the update sent refers to the most recent 																				modification 	level of 	the 	object 	being 	updated.</xs:documentation>
                          </xs:annotation>
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="32"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="ID" use="required">
                          <xs:annotation>
                            <xs:documentation xml:lang="en">A unique identifying value assigned by the creating system.  																			The ID 			attribute 	may be 		used to 			reference a 																			primary-key value within a database or in a particular implementation.</xs:documentation>
                          </xs:annotation>
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="32"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="ID_Context" use="optional">
                          <xs:annotation>
                            <xs:documentation>Used to identify the source of the identifier (e.g. IATA, ABTA, etc.).</xs:documentation>
                          </xs:annotation>
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="32"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Position" minOccurs="0">
                      <xs:complexType>
                        <xs:annotation>
                          <xs:documentation>Used to identify geospatial postion of the requesting entity.</xs:documentation>
                        </xs:annotation>
                        <xs:attribute name="Latitude" use="optional">
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 16</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="16"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="Longitude" use="optional">
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 16</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="16"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="Altitude" use="optional">
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 16</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:minLength value="1"/>
                              <xs:maxLength value="16"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="BookingChannel" minOccurs="0">
                      <xs:annotation>
                        <xs:documentation>Specifies the booking channel type and whether it is the primary means of connectivity of 												the 	source.</xs:documentation>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="CompanyName" minOccurs="0">
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Identifies the company that is associated with the booking 																	channel.</xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                              <xs:annotation>
                                <xs:documentation xml:lang="en">Identifies a company by name.</xs:documentation>
                              </xs:annotation>
                              <xs:attribute name="CompanyShortName" use="optional">
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="1"/>
                                    <xs:maxLength value="32"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="TravelSector" use="optional">
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for codes in the OTA code tables.</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:pattern value="[0-9A-Z]{1,3}"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="Code" use="optional">
                                <xs:annotation>
                                  <xs:documentation xml:lang="en">Identifies a company by the company code.</xs:documentation>
                                </xs:annotation>
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 8</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="1"/>
                                    <xs:maxLength value="8"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                              <xs:attribute name="CodeContext" use="optional">
                                <xs:annotation>
                                  <xs:documentation xml:lang="en">Identifies the context of the identifying code, 																		such as DUNS, IATA or internal code, etc.</xs:documentation>
                                </xs:annotation>
                                <xs:simpleType>
                                  <xs:annotation>
                                    <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 32</xs:documentation>
                                  </xs:annotation>
                                  <xs:restriction base="xs:string">
                                    <xs:minLength value="1"/>
                                    <xs:maxLength value="32"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="Type" use="required">
                          <xs:annotation>
                            <xs:documentation>The type of booking channel (e.g. Global Distribution System (GDS), Alternative 															Distribution 		System 	(ADS), 		Sales 	and 	Catering System (SCS), 															Property Management System (PMS), Central Reservation System (CRS), 																	Tour Operator 		System 	(TOS), 	Internet 	and ALL).</xs:documentation>
                          </xs:annotation>
                          <xs:simpleType>
                            <xs:annotation>
                              <xs:documentation xml:lang="en">Used for codes in the OTA code tables.</xs:documentation>
                            </xs:annotation>
                            <xs:restriction base="xs:string">
                              <xs:pattern value="[0-9A-Z]{1,3}"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                        <xs:attribute name="Primary" type="xs:boolean" use="optional">
                          <xs:annotation>
                            <xs:documentation>Indicates whether the enumerated booking channel is the primary means of 															connectivity used by the source.</xs:documentation>
                          </xs:annotation>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="AgentSine" use="optional">
                    <xs:annotation>
                      <xs:documentation>Identifies the party within the requesting entity.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="16"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="PseudoCityCode" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">An identification code assigned to an office/agency by a reservation system.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="16"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="ISOCountry" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">The country code of the requesting party.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">2 character country code as defined in ISO3166.</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:pattern value="[a-zA-Z]{2}"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="ISOCurrency" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">The currency code in which the reservation will be ticketed.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for Alphabetic Strings, length exactly 3</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:pattern value="[a-zA-Z]{3}"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="AgentDutyCode" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">An authority code assigned to a requestor.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 16</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="16"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="AirlineVendorID" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">The IATA assigned airline code.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for an Upper Alpha String and Numeric, length 2 to 3.</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:pattern value="[A-Z0-9]{2,3}"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="AirportCode" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">The IATA assigned airport code.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for an Upper Alpha String and Numeric, length 3 to 5.</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:pattern value="[A-Z0-9]{3,5}"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="FirstDepartPoint" use="optional">
                    <xs:annotation>
                      <xs:documentation xml:lang="en">The point of first departure in a trip.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for Strings, length exactly 3</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="3"/>
                        <xs:maxLength value="3"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="ERSP_UserID" use="optional">
                    <xs:annotation>
                      <xs:documentation>Electronic Reservation Service Provider (ERSP) assigned identifier used to identify the 												individual 	using 	the 		ERSP 		system.</xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                      <xs:annotation>
                        <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 16</xs:documentation>
                      </xs:annotation>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                        <xs:maxLength value="16"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TPA_Extensions" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MessagingDetails" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="MDRSubset" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="IgnoreTransaction">
          <xs:complexType>
            <xs:attribute name="Ind" type="xs:boolean" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 						message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-					DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" type="xs:string" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Version" type="xs:string" use="required">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application 	to 					process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and needs to 				retrieve messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/IgnoreTransactionLLSRS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2003/07" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://webservices.sabre.com/sabreXML/2003/07">
  <xs:element name="IgnoreTransactionRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Success" type="xs:string" minOccurs="0"/>
        <xs:element name="Warnings" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Warning">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="Language" type="xs:string" use="optional"/>
                      <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                      <xs:attribute name="Type" type="xs:string" use="optional"/>
                      <xs:attribute name="Code" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="DocURL" type="xs:anyURI" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">If present, this URL refers to an online description of the error that occurred.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="Status" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">If present, recommended values are those enumerated in the OTA_ErrorRS, (NotProcessed | Incomplete | Complete | Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="Tag" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                      <xs:attribute name="RecordId" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:documentation xml:lang="en">If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records.</xs:documentation>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TPA_Extensions" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="HostCommand" type="xs:string" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Errors" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Error">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ErrorInfo">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Message" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="ErrorCode" type="xs:string" use="required"/>
                  <xs:attribute name="Severity" type="xs:string" use="optional"/>
                  <xs:attribute name="ErrorMessage" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="EchoToken" use="optional">
        <xs:annotation>
          <xs:documentation>A sequence number for additional message identification, assigned by the requesting host system. When a request 						message includes an echo token the corresponding response message MUST include an echo token with an identical value.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:annotation>
            <xs:documentation xml:lang="en">Used for Character Strings, length 1 to 64</xs:documentation>
          </xs:annotation>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="TimeStamp" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-	MM-					DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-	20T13:59:38Z).</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Target" type="xs:string" use="optional" default="Production">
        <xs:annotation>
          <xs:documentation>Used to indicate whether the request is for the Test or Production system.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="Version" type="xs:string" use="optional">
        <xs:annotation>
          <xs:documentation>For all OTA versioned messages, the version of the message is indicated by a decimal value.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="SequenceNmbr" type="xs:nonNegativeInteger" use="optional">
        <xs:annotation>
          <xs:documentation>Used to identify the sequence number of the transaction as assigned by the sending system; allows for an application 	to 					process messages in a certain order or to request a resynchronization of messages in the event that a system has been off-line and needs to 				retrieve messages that were missed.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="PrimaryLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name="AltLangID" type="xs:language" use="optional">
        <xs:annotation>
          <xs:documentation>Identifes the primary language preference for the form of travel represented in a collection.
					 The human language is identified by ISO 639 codes.</xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!DOCTYPE schema PUBLIC "-//W3C//DTD XMLSchema 200102//EN" "http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/XMLSchema.dtd">
<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/envelope.xsd</con:url><con:content>&lt;schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/">
  &lt;include schemaLocation="env.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/env.xsd</con:url><con:content><![CDATA[<!--Schema for the SOAP/1.1 envelope

     This schema has been produced using W3C's SOAP Version 1.2 schema
     found at:

     http://www.w3.org/2001/06/soap-envelope

     Copyright 2001 Martin Gudgin, Developmentor.

     Changes made are the following:
     - reverted namespace to http://schemas.xmlsoap.org/soap/envelope/
     - reverted mustUnderstand to only allow 0 and 1 as lexical values
	 - made encodingStyle a global attribute 20020825

	 Further changes:

	 - removed default value from mustUnderstand attribute declaration - 20030314

     Original copyright:
     
     Copyright 2001 W3C (Massachusetts Institute of Technology,
     Institut National de Recherche en Informatique et en Automatique,
     Keio University). All Rights Reserved.
     http://www.w3.org/Consortium/Legal/

     This document is governed by the W3C Software License [1] as
     described in the FAQ [2].

     [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
     [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/xml.xsd</con:url><con:content><![CDATA[<!DOCTYPE xs:schema PUBLIC "-//W3C//DTD XMLSCHEMA 200102//EN" "http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/XMLSchema.dtd">
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/sabreXML1.0.00/tpf/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="OTA" name="IgnoreTransactionLLSRQ" bindingOperationName="IgnoreTransactionRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="95124123-8611-4efa-95b6-756304b5890a"><con:settings/><con:call name="IgnoreTransactionLLSRQ" id="44c0ca2d-3b51-4183-8e9d-9b0c26c85a63"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="URI">clientURI.com</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="URI">webservices.sabre.com</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversation_ID</eb:ConversationId>
         <eb:Service eb:type="OTA">IgnoreTransactionLLSRQ</eb:Service>
         <eb:Action>IgnoreTransactionLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>2001-02-15T11:15:12Z</eb:Timestamp>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESG!ICESMSLB\/RES.LB!-4140006361394069755!742318!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <IgnoreTransactionRQ Version="2003A.TsabreXML1.0.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="ipcc"/>
         </POS>
         <IgnoreTransaction Ind="true"/>
      </IgnoreTransactionRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="https://webservices.sabre.com/websvc/IgnoreTransactionPortType/IgnoreTransactionRQRequest"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="TravelItineraryReadSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}TravelItineraryReadSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/tpfc/TravelItineraryReadLLS2.0.0RQ.wsdl" id="9bc2f4d7-bfec-410f-93b5-1f402148e9dc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/tpfc/TravelItineraryReadLLS2.0.0RQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/TravelItineraryReadLLS2.0.0RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sws_xsd="http://webservices.sabre.com/sabreXML/2011/10" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2011/10" schemaLocation="TravelItineraryReadLLS2.0.0RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
      <xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="TravelItineraryReadInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:TravelItineraryReadRQ"/>
  </wsdl:message>
  <wsdl:message name="TravelItineraryReadOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:TravelItineraryReadRS"/>
  </wsdl:message>
  <wsdl:portType name="TravelItineraryReadPortType">
    <wsdl:operation name="TravelItineraryReadRQ">
      <wsdl:input message="sws:TravelItineraryReadInput"/>
      <wsdl:output message="sws:TravelItineraryReadOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="TravelItineraryReadSoapBinding" type="sws:TravelItineraryReadPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="TravelItineraryReadRQ">
      <soap:operation soapAction="TravelItineraryReadLLSRQ"/>
      <wsdl:input>
        <soap:header message="sws:TravelItineraryReadInput" part="header" use="literal"/>
        <soap:header message="sws:TravelItineraryReadInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:TravelItineraryReadOutput" part="header" use="literal"/>
        <soap:header message="sws:TravelItineraryReadOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="TravelItineraryReadService">
    <wsdl:port name="TravelItineraryReadPortType" binding="sws:TravelItineraryReadSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/TravelItineraryReadLLS2.0.0RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="TravelItineraryReadLLS2.0.0RQ.xsd"/>
  &lt;include schemaLocation="TravelItineraryReadLLS2.0.0RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/TravelItineraryReadLLS2.0.0RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="TravelItineraryReadRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="MessagingDetails">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ApplicationID" minOccurs="0" type="xs:string"/>
              <xs:element name="Transaction" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:attribute name="Code" use="required">
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:enumeration value="PNR"/>
                        <xs:enumeration value="GEN"/>
                        <xs:enumeration value="PAX"/>
                        <xs:enumeration value="FNR"/>
                        <xs:enumeration value="FFT"/>
                        <xs:enumeration value="PHN"/>
                        <xs:enumeration value="AFD"/>
                        <xs:enumeration value="GFD"/>
                        <xs:enumeration value="ADR"/>
                        <xs:enumeration value="CDR"/>
                        <xs:enumeration value="ACR"/>
                        <xs:enumeration value="PPT"/>
                        <xs:enumeration value="HRM"/>
                        <xs:enumeration value="FQP"/>
                        <xs:enumeration value="GRM"/>
                        <xs:enumeration value="BSD"/>
                        <xs:enumeration value="AIT"/>
                        <xs:enumeration value="HOT"/>
                        <xs:enumeration value="CAR"/>
                        <xs:enumeration value="TIN"/>
                        <xs:enumeration value="AX1"/>
                        <xs:enumeration value="AX2"/>
                        <xs:enumeration value="TRM"/>
                        <xs:enumeration value="TFS"/>
                        <xs:enumeration value="FOP"/>
                        <xs:enumeration value="WSR"/>
                        <xs:enumeration value="PH4"/>
                        <xs:enumeration value="FPL"/>
                        <xs:enumeration value="FBL"/>
                        <xs:enumeration value="ACC"/>
                        <xs:enumeration value="ITN"/>
                        <xs:enumeration value="ITR"/>
                        <xs:enumeration value="INV"/>
                        <xs:enumeration value="DDR"/>
                        <xs:enumeration value="PTD"/>
                        <xs:enumeration value="SIP"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UniqueID" minOccurs="0">
          <xs:complexType>
            <xs:attribute name="ID" type="xs:string" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ReturnHostCommand" type="xs:boolean" use="optional"/>
      <xs:attribute name="TimeStamp" type="xs:dateTime" use="optional"/>
      <xs:attribute name="Version" type="xs:string" fixed="2.0.0" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/sws_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be ommited. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/TravelItineraryReadLLS2.0.0RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://services.sabre.com/STL/v01">
  <xs:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="TravelItineraryReadRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="stl:ApplicationResults"/>
        <xs:element name="TravelItinerary" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountingInfo" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="AccountVendor" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Airline" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="BaseFare" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Amount" type="xs:string" use="optional"/>
                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                        <xs:attribute name="Percent" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ChargeCategory" minOccurs="0" type="xs:string"/>
                    <xs:element name="DocumentInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Document" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Number" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="FareApplication" minOccurs="0" type="xs:string"/>
                    <xs:element name="PaymentInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Commission" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Amount" type="xs:string" use="optional"/>
                              <xs:attribute name="Percent" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Payment" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CC_Info" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="PaymentCard" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                          <xs:attribute name="Number" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Form" minOccurs="0" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PersonName" minOccurs="0">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Taxes" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="GST" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Amount" type="xs:string" use="optional"/>
                              <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                              <xs:attribute name="Percent" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="QST" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Amount" type="xs:string" use="optional"/>
                              <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                              <xs:attribute name="Percent" type="xs:string" use="optional"/>
                              <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Tax" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Amount" type="xs:string" use="optional"/>
                              <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                              <xs:attribute name="Percent" type="xs:string" use="optional"/>
                              <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                    <xs:element name="TicketingInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Exchange" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="IssueDate" minOccurs="0" type="sws:date"/>
                          <xs:element name="IssueLocation" minOccurs="0" type="xs:string"/>
                          <xs:element name="OriginalInvoice" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Number" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="TarriffBasis" minOccurs="0" type="xs:string"/>
                          <xs:element name="Ticketing" minOccurs="0" maxOccurs="9">
                            <xs:complexType>
                              <xs:attribute name="ConjunctedCount" type="xs:string" use="optional"/>
                              <xs:attribute name="CouponCount" type="xs:string" use="optional"/>
                              <xs:attribute name="eTicketNumber" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                  <xs:attribute name="Type" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="CustomerInfo" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Address" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AddressLine" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ContactNumbers" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ContactNumber" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                              <xs:attribute name="Phone" type="xs:string" use="optional"/>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="Codeshare" type="xs:string" use="optional"/>
                        <xs:attribute name="MembershipID" type="xs:string" use="optional"/>
                        <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                        <xs:attribute name="ProgramID" type="xs:string" use="optional"/>
                        <xs:attribute name="RPH" type="xs:string" use="optional"/>
                        <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                        <xs:attribute name="Status" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Passport" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="Number" type="xs:string" use="optional"/>
                        <xs:attribute name="RPH" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PaymentInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Payment" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CC_Info" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CardHolderInfo" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Address" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="AddressLine" minOccurs="0" maxOccurs="4" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="ContactNumbers" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ContactNumber" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="Name" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="PreferredCustomer" type="xs:string" use="optional"/>
                                    <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Form" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:simpleContent>
                                      <xs:extension base="xs:string">
                                        <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                      </xs:extension>
                                    </xs:simpleContent>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Email" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                          <xs:element name="GivenName" minOccurs="0" type="xs:string"/>
                          <xs:element name="GroupInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="GroupNameNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="Name" type="xs:string" use="optional"/>
                              <xs:attribute name="NumSeatsRemaining" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ProfileIndex" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                          <xs:element name="Surname" minOccurs="0" type="xs:string"/>
                        </xs:sequence>
                        <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                        <xs:attribute name="NameReference" type="xs:string" use="optional"/>
                        <xs:attribute name="PassengerType" type="xs:string" use="optional"/>
                        <xs:attribute name="RPH" type="xs:string" use="optional"/>
                        <xs:attribute name="Infant" type="xs:boolean" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="FileInfo" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="File" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute name="ProductCode" type="xs:string" use="optional"/>
                            <xs:attribute name="RPH" type="xs:string" use="optional"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="ItineraryInfo" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ItineraryPricing" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="FuturePriceInfo" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Text" minOccurs="0" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PhaseIVInfo" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Record" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Endorsements" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="HemisphereCode" minOccurs="0" type="xs:string"/>
                                      <xs:element name="ItinTotalFare" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="BaseFare" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Commission" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="EquivFare" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="PassengerTypeQuantity" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Taxes" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Tax" minOccurs="0" maxOccurs="3">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="EquivTax" minOccurs="0" maxOccurs="3">
                                                          <xs:complexType>
                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Paid" type="xs:string" use="optional"/>
                                                      <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="Exempt" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TotalFare" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="JourneyCode" minOccurs="0" type="xs:string"/>
                                      <xs:element name="PTC_FareBreakdown" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="FareBasis" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="TicketDesignator" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="FareCalculation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="2" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="FlightSegment" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="BaggageAllowance" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Number" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Weight" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="FareBasis" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="MarketingAirline" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="OriginLocation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="ValidityDates" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="NotValidAfter" minOccurs="0" type="xs:string"/>
                                                        <xs:element name="NotValidBefore" minOccurs="0" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="ConnectionInd" type="xs:string" use="optional"/>
                                                <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                                <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                                <xs:attribute name="Status" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="TourCode" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="UpdatedBy" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Source" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="CreationAgent" type="xs:string" use="optional"/>
                                                <xs:attribute name="HomePseudoCityCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="CreateDateTime" type="sws:dateTime" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Number" type="xs:string" use="optional"/>
                                    <xs:attribute name="Status" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PriceQuote" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="MiscInformation" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="BaggageFees" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="SignatureLine" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                          </xs:sequence>
                                          <xs:attribute name="Banner" type="xs:string" use="optional"/>
                                          <xs:attribute name="CommissionAmount" type="xs:string" use="optional"/>
                                          <xs:attribute name="CommissionID" type="xs:string" use="optional"/>
                                          <xs:attribute name="ExpirationDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="PQR_Ind" type="xs:string" use="optional"/>
                                          <xs:attribute name="Source" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="TicketingFees" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="FeeInformation" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:simpleContent>
                                                  <xs:extension base="xs:string">
                                                    <xs:attribute name="AccountData" type="xs:string" use="optional"/>
                                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    <xs:attribute name="DisplayOnOutputInd" type="xs:string" use="optional"/>
                                                    <xs:attribute name="FunctionCode" type="xs:string" use="optional"/>
                                                    <xs:attribute name="GuaranteeType" type="xs:string" use="optional"/>
                                                    <xs:attribute name="NonCommissionInd" type="xs:string" use="optional"/>
                                                    <xs:attribute name="NonRefundableInd" type="xs:string" use="optional"/>
                                                    <xs:attribute name="OnlineInterlineService" type="xs:string" use="optional"/>
                                                    <xs:attribute name="ServiceType" type="xs:string" use="optional"/>
                                                  </xs:extension>
                                                </xs:simpleContent>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="Disclaimer" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PricedItinerary" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="AirItineraryPricingInfo" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="ItinTotalFare" minOccurs="0" maxOccurs="7">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="BaseFare" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="EquivFare" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Taxes" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Tax" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                            <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="TaxBreakdownCode" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="TotalFare" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Totals" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="BaseFare" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="EquivFare" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Taxes" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Tax" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="TotalFare" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="PassengerTypeQuantity" minOccurs="0" maxOccurs="7">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="Quantity" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="PrivateFareInformation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="7" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="PTC_FareBreakdown" minOccurs="0" maxOccurs="7">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Endorsements" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="FareBasis" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="FareCalculation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="FlightSegment" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="BaggageAllowance" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Number" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="FareBasis" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="MarketingAirline" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                            <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="OriginLocation" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="ValidityDates" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="NotValidAfter" minOccurs="0" type="xs:string"/>
                                                              <xs:element name="NotValidBefore" minOccurs="0" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="ConnectionInd" type="xs:string" use="optional"/>
                                                      <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                                      <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                      <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Status" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="ResTicketingRestrictions" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="DeletedBy" type="xs:string" use="optional"/>
                                    <xs:attribute name="InputMessage" type="xs:string" use="optional"/>
                                    <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                    <xs:attribute name="StatusCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="TaxExempt" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="ValidatingCarrier" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="ResponseHeader" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ReservationItems" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="AirTaxi" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="DestinationLocation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="OriginLocation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="Vendor" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                    <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Status" type="xs:string" use="optional"/>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Arunk" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Cruise" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Berth" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="Cabin" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="CarRate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="ConfirmationNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="DestinationLocation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="ArrivalDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="ArrivalTime" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Point" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                          </xs:sequence>
                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="OriginLocation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="DepartureDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="DepartureTime" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Point" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                          </xs:sequence>
                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Passenger" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="Seat" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="ServiceInformation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="ShipName" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="SpaceReserved" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="TotalFare" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="TrailerPrice" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="Vendor" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                    <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Status" type="xs:string" use="optional"/>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FlightSegment" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="BSG_Record" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="ID" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="CheckInAirline" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                          <xs:attribute name="CompanyShortName" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="CodeshareRecord" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="ID" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="DestinationLocation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="Terminal" type="xs:string" use="optional"/>
                                          <xs:attribute name="TerminalCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Equipment" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="AirEquipType" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="MarketingAirline" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                          <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="MarketingCodeshareRecord" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="ID" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="MarriageGrp" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Group" type="xs:string" use="optional"/>
                                          <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                          <xs:attribute name="Sequence" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Meal" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="OperatingAirline" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                          <xs:attribute name="CompanyShortName" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="OperatingAirlineRecord" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="ID" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="OriginLocation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="Terminal" type="xs:string" use="optional"/>
                                          <xs:attribute name="TerminalCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="PartnerCarrier" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Banner" minOccurs="0" type="xs:string"/>
                                          </xs:sequence>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                          <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="SupplierRef" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="ID" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="UpdatedArrivalTime" minOccurs="0" type="xs:string"/>
                                      <xs:element name="UpdatedDepartureTime" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="AirMilesFlown" type="xs:string" use="optional"/>
                                    <xs:attribute name="ArrivalDateTime" type="xs:string" use="optional"/>
                                    <xs:attribute name="ConnectionInd" type="xs:string" use="optional"/>
                                    <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                    <xs:attribute name="ElapsedTime" type="xs:string" use="optional"/>
                                    <xs:attribute name="eTicket" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                    <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="SmokingAllowed" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="SpecialMeal" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="Status" type="xs:string" use="optional"/>
                                    <xs:attribute name="StopQuantity" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Hotel" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="BasicPropertyInfo" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Address" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="AddressLine" minOccurs="0" maxOccurs="2" type="xs:string"/>
                                                  <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="CancelPenalty" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="PolicyCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="ConfirmationNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="ContactNumbers" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ContactNumber" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="Fax" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="ChainCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="HotelCityCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="HotelCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="HotelName" type="xs:string" use="optional"/>
                                          <xs:attribute name="ServiceCityName" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Customer" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Corporate" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ID" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="MembershipID" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="ID" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Number" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="ReserveUnderName" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Guarantee" minOccurs="0" type="xs:string"/>
                                      <xs:element name="POS" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Source" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="RequestorID" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="RoomRates" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Commission" minOccurs="0">
                                              <xs:complexType>
                                                <xs:simpleContent>
                                                  <xs:extension base="xs:string">
                                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    <xs:attribute name="NonCommission" type="xs:boolean" use="optional"/>
                                                    <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                                  </xs:extension>
                                                </xs:simpleContent>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Rate" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="AdditionalGuestAmounts" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="AdditionalGuestAmount" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="NumCribs" type="xs:string" use="optional"/>
                                                            <xs:attribute name="NumExtraPersons" type="xs:string" use="optional"/>
                                                            <xs:attribute name="NumRollaways" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="DCS_AuxRateCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="RoomTypeCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="SpecialPrefs" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="TimeSpan" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Duration" type="xs:string" use="optional"/>
                                          <xs:attribute name="End" type="sws:date" use="optional"/>
                                          <xs:attribute name="Start" type="sws:date" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                    <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                    <xs:attribute name="NumberOfUnits" type="xs:string" use="optional"/>
                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Status" type="xs:string" use="optional"/>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Insurance" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="InsuranceDetails" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="ConfirmationNumber" minOccurs="0" type="xs:string"/>
                                            <xs:element name="Coverage" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Amount" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Type" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="DestinationLocation" minOccurs="0" maxOccurs="2">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Payment" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Form" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="GivenName" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="Surname" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                            <xs:element name="Vendor" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="CompanyShortName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="End" type="sws:date" use="optional"/>
                                          <xs:attribute name="NumPolicies" type="xs:string" use="optional"/>
                                          <xs:attribute name="PlanType" type="xs:string" use="optional"/>
                                          <xs:attribute name="PremiumAmount" type="xs:string" use="optional"/>
                                          <xs:attribute name="PurchaseDate" type="xs:string" use="optional"/>
                                          <xs:attribute name="Start" type="sws:date" use="optional"/>
                                          <xs:attribute name="StatusCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Status" type="xs:string" use="optional"/>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Misc" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="OriginLocation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="Vendor" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                    <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Status" type="xs:string" use="optional"/>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Rail" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="ConfirmationNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="DestinationLocation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="ArrivalDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="ArrivalTime" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="LocationName" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Point" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                          </xs:sequence>
                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="IssueDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="OriginLocation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="DepartureDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="DepartureTime" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="LocationName" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Point" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                          </xs:sequence>
                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="ServiceInformation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="SNCF_Information" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="SpaceReserved" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="TicketControlNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                      <xs:element name="Train" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="Number" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Vendor" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                    <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                    <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Status" type="xs:string" use="optional"/>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Seats" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Seat" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="FlightSegment" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="DestinationLocation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="OriginLocation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="Changed" type="xs:string" use="optional"/>
                                          <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Number" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentStatus" type="xs:string" use="optional"/>
                                          <xs:attribute name="SmokingPreference" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                          <xs:attribute name="TypeTwo" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Surface" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="ArrivalDepartureIdentifier" minOccurs="0" type="xs:string"/>
                                      <xs:element name="FlightSegment" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="DestinationLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="MarketingAirline" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="OriginLocation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="POS" minOccurs="0" type="xs:string"/>
                                      <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                      <xs:element name="Vendor" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                    <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Status" type="xs:string" use="optional"/>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Tour" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="TourDetails" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="ConfirmationNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Duration" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="NumDays" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Extensions" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Features" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="HotelInformation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Room" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="OccupancyCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Type" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Location" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Meals" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Options" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Price" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="ServiceInformation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="VehicleInformation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="Name" type="xs:string" use="optional"/>
                                          <xs:attribute name="Number" type="xs:string" use="optional"/>
                                          <xs:attribute name="ServiceCityName" type="xs:string" use="optional"/>
                                          <xs:attribute name="Vendor" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                    <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                    <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Status" type="xs:string" use="optional"/>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Vehicle" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="ConfirmationNumber" minOccurs="0" type="xs:string"/>
                                      <xs:element name="DirectConnect" minOccurs="0" type="xs:string"/>
                                      <xs:element name="POS" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Source" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="RequestorID" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="VehRentalCore" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="DropOffLocationDetails" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="FlightSegment" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="MarketingAirline" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="LocationDetails" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ContactNumbers" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="ContactNumber" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Fax" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="ExtendedLocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="PickUpDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="PickUpDay" type="xs:string" use="optional"/>
                                          <xs:attribute name="ReturnDateTime" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="VehVendorAvail" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="VehResCore" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="CollectionDeliveryInfo" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="CollectionInfo" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Address" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="AddressLine" minOccurs="0" type="xs:string"/>
                                                                    <xs:element name="CityName" minOccurs="0" type="xs:string"/>
                                                                    <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                                                                    <xs:element name="PostalCode" minOccurs="0" type="xs:string"/>
                                                                    <xs:element name="StateCountyProv" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:attribute name="StateCode" type="xs:string" use="optional"/>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                    <xs:element name="StreetNmbr" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="ContactNumbers" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="ContactNumber" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                            <xs:attribute name="SiteID" type="xs:string" use="optional"/>
                                                            <xs:attribute name="SiteName" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="DeliveryInfo" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Address" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="AddressLine" minOccurs="0" type="xs:string"/>
                                                                    <xs:element name="CityName" minOccurs="0" type="xs:string"/>
                                                                    <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                                                                    <xs:element name="PostalCode" minOccurs="0" type="xs:string"/>
                                                                    <xs:element name="StateCountyProv" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:attribute name="StateCode" type="xs:string" use="optional"/>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                    <xs:element name="StreetNmbr" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="CollectionFee" minOccurs="0" type="xs:string"/>
                                                              <xs:element name="ContactNumbers" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="ContactNumber" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                            </xs:sequence>
                                                            <xs:attribute name="SiteID" type="xs:string" use="optional"/>
                                                            <xs:attribute name="SiteName" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="GuaranteePrepaid" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="CancellationRefundAmount" minOccurs="0" maxOccurs="4">
                                                          <xs:complexType>
                                                            <xs:simpleContent>
                                                              <xs:extension base="xs:string">
                                                                <xs:attribute name="NumDays" type="xs:string" use="optional"/>
                                                              </xs:extension>
                                                            </xs:simpleContent>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="AmountPercentage" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="PricedEquip" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Equipment" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="EquipType" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Quantity" type="xs:string" use="optional"/>
                                                            <xs:attribute name="SpecialEquip" type="xs:string" use="optional"/>
                                                            <xs:attribute name="SpecialEquipConfirmed" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="RentalRate" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Billing" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Number" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Reference" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Client" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="ID" minOccurs="0" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Corporate" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="ID" minOccurs="0" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="CustLoyalty" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="MembershipID" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="InvoiceRemarks" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Text" minOccurs="0" maxOccurs="5" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Remarks" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="ReserveUnderName" minOccurs="0" type="xs:string"/>
                                                        <xs:element name="ServiceInformation" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="TourCode" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Vehicle" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="VehType" minOccurs="0" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Voucher" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="BillingNumber" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Format" type="xs:string" use="optional"/>
                                                            <xs:attribute name="ID" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Type" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="Changed" type="xs:string" use="optional"/>
                                                      <xs:attribute name="GuaranteedQuoted" type="xs:string" use="optional"/>
                                                      <xs:attribute name="RateCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="STM_RatePlan" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="VehicleCharges" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="VehicleCharge" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="ChargeDetails" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="ApproximateTotalCharge" minOccurs="0" maxOccurs="20">
                                                                      <xs:complexType>
                                                                        <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                        <xs:attribute name="MileageAllowance" type="xs:string" use="optional"/>
                                                                        <xs:attribute name="NumDays" type="xs:string" use="optional"/>
                                                                        <xs:attribute name="NumHours" type="xs:string" use="optional"/>
                                                                        <xs:attribute name="RateType" type="xs:string" use="optional"/>
                                                                        <xs:attribute name="TotalMandatoryCharges" type="xs:string" use="optional"/>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Commission" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Mileage" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="ExtraMileageCharge" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="UnitOfMeasure" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                            <xs:attribute name="DropOffCharge" type="xs:string" use="optional"/>
                                                            <xs:attribute name="GuaranteeInd" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Vendor" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="CompanyShortName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                    <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Status" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Ticketing" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="eTicketNumber" type="xs:string" use="optional"/>
                        <xs:attribute name="RPH" type="xs:string" use="optional"/>
                        <xs:attribute name="TicketTimeLimit" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="ItineraryRef" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Header" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                    <xs:element name="Source" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="AAAPseudoCityCode" type="xs:string" use="optional"/>
                        <xs:attribute name="CreateDateTime" type="xs:string" use="optional"/>
                        <xs:attribute name="CreationAgent" type="xs:string" use="optional"/>
                        <xs:attribute name="HomePseudoCityCode" type="xs:string" use="optional"/>
                        <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                        <xs:attribute name="ReceivedFrom" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="TravelPolicy" minOccurs="0" maxOccurs="2" type="xs:string"/>
                  </xs:sequence>
                  <xs:attribute name="AccountingCity" type="xs:string" use="optional"/>
                  <xs:attribute name="AccountingCode" type="xs:string" use="optional"/>
                  <xs:attribute name="AirExtras" type="xs:boolean" use="optional"/>
                  <xs:attribute name="CustomerIdentifier" type="xs:string" use="optional"/>
                  <xs:attribute name="ID" type="xs:string" use="optional"/>
                  <xs:attribute name="InhibitCode" type="xs:string" use="optional"/>
                  <xs:attribute name="OfficeStationCode" type="xs:string" use="optional"/>
                  <xs:attribute name="OtherSystemID" type="xs:string" use="optional"/>
                  <xs:attribute name="PartitionID" type="xs:string" use="optional"/>
                  <xs:attribute name="PrimeHostID" type="xs:string" use="optional"/>
                  <xs:attribute name="TicketingCarrier" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="PayInfo" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="FieldTagID" type="xs:string" use="optional"/>
                      <xs:attribute name="LinkSubkey" type="xs:string" use="optional"/>
                      <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                      <xs:attribute name="PassengerName" type="xs:string" use="optional"/>
                      <xs:attribute name="SectionID" type="xs:string" use="optional"/>
                      <xs:attribute name="SecurityIndicator" type="xs:string" use="optional"/>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
              <xs:element name="QueueInfo" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Placement" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute name="RPH" type="xs:string" use="optional"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="RemarkInfo" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Remark" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Text" minOccurs="0" type="xs:string"/>
                        </xs:sequence>
                        <xs:attribute name="Code" type="xs:string" use="optional"/>
                        <xs:attribute name="RPH" type="xs:string" use="optional"/>
                        <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                        <xs:attribute name="Type" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="SpecialServiceInfo" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Service" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Airline" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Text" minOccurs="0" type="xs:string"/>
                        </xs:sequence>
                        <xs:attribute name="SSR_Code" type="xs:string" use="optional"/>
                        <xs:attribute name="SSR_Type" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="RPH" type="xs:string" use="optional"/>
                  <xs:attribute name="Type" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="Version" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_For_SabreProtocol_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.sabre.com/STL/v01" xmlns="http://services.sabre.com/STL/v01" xmlns:STL="http://services.sabre.com/STL/v01" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added ShortText to SystemSpecificResults.
  		
  		May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace

		Created: April 21, 2011
		Description: This schema is the minimal Sabre Type Library (STL) schema needed for the Sabre SOAP Envelope schema to
		identify the STL_Payload  substitution group head element and type to be extended by message schemas..

		Copyright Sabre 2011
		The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only with the written permission of Sabre or in accordance with the terms and conditions stipulated in theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://services.sabre.com/STL_Header/v120" schemaLocation="STL_Header_v.1.2.0.xsd"/>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="ApplicationResults" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <!--- Results and Problem Information components.-->
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"></xsd:complexType>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="stlh:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="stlh:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="stlh:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="stlh:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="stlh:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="stlh:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="stlh:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_Header_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Header/v120" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns="http://services.sabre.com/STL_Header/v120">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added key to trace attributes.
			
			August 8 - added HostCommand to system specific results.
			
		  	May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace
		
			Created: April 21, 2011
			Description: This schema is a standalone schema that defines Header metadata 
			structures that are independent of the payload schema.
			
			Copyright Sabre 2011
			The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only
			with the written permission of Sabre or in accordance with the terms and conditions stipulated in
			theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Diagnostics" type="Diagnostics"/>
  <xsd:element name="Identification" type="Identification"/>
  <xsd:element name="ResultSummary" type="ResultSummary"/>
  <xsd:element name="Security" type="Security"/>
  <xsd:element name="Service" type="Service"/>
  <xsd:element name="Traces" type="Traces"/>
  <xsd:element name="SabreHeader" type="SabreHeader"/>
  <xsd:complexType name="SabreHeader">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="SabreHeaderGroup">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DiagnosticResults">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Diagnostics">
    <xsd:sequence>
      <xsd:element name="Level" type="DiagnosticLevels" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the level of diagnostic data requested or provided.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Data" type="Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Block of diagnostic data included in request or returned in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Diagnostic" type="DiagnosticResults" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Diagnostic data. Must be defined in a differrent namespace as the header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identification">
    <xsd:annotation>
      <xsd:documentation>The Identification metadata uniquely identify each message instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CustomerID" type="PseudoCityCodeOrOAC" minOccurs="1"/>
      <xsd:element name="CustomerAppID" type="stlh:Text.Short" minOccurs="0"/>
      <xsd:element name="ConversationID" type="TrackingID" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The ConversationId element is a string identifying the set of related messages that make up a
						conversation between two or more Parties. The Party initiating a conversation determines the value of
						the ConversationId element that shall be reflected in all messages pertaining to that
						conversation. It remains constant for all messages within a conversation.
						Service providers are expected to increment the optional TrackingID integer attribute when present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MessageID" type="Identifier" minOccurs="1"/>
      <xsd:element name="TimeStamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identifier.System">
    <xsd:annotation>
      <xsd:documentation>System identifier used to uniquily identify the specific system.
 	"Source" is used to return the application name responsible for fulfilling the particular request transaction.
	"ApplicationInstance" is used to return the application instance responsible for fulfilling the particular request transaction.
	"Cluster" is used to return the application cluster responsible for fulfilling the particular request transaction.
	"HostName" is used to return the particular server name responsible for fulfilling the particular request transaction.
	Â Example: Source ApplicationInstance="PROD1" Cluster="PROD TPF SCC" HostName="PSS" TPF Source</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="instance" type="Identifier"/>
        <xsd:attribute name="cluster" type="Identifier"/>
        <xsd:attribute name="host" type="Identifier"/>
        <xsd:attribute name="uri" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The uri representing the endpoint reference by which this system can be accessed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProblemBase">
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ProblemSummary">
    <xsd:sequence>
      <xsd:element name="Source" type="Identifier.System" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The system that the reporting system deemed to be the cause of the problem. If omitted, the
						reporting system is also the source of the problem. For application errors, the element may
						identify a system the application is dependent upon that failed to respond. For validation
						errors this may identify the service consumer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReportingSystem" type="Identifier.System">
        <xsd:annotation>
          <xsd:documentation>The system that created the results record. If the Source system identifier is omitted, the
						system identified here both was the cause of the problem and created the result record.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="Message.Condition" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>An informative code and message that describes the results. Note: the message code and text must
						NOT be required to process to understand retry/compensate status.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ResultSummary">
    <xsd:choice>
      <xsd:element name="Success" type="EmptyElement">
        <xsd:annotation>
          <xsd:documentation>Success indicates that the request was
						processed successfully.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Error" type="ProblemSummary"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Security">
    <xsd:annotation>
      <xsd:documentation>Header records no longer contain user credentials (username/password) as these are needed only for 
     		 SessionCreateRQ in which the credentials should be in the payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="SecurityToken" type="Text.Long"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="Text.Short">
        <xsd:attribute name="operation" type="Text.Short"/>
        <xsd:attribute name="version" type="Text.Short"/>
        <xsd:attribute name="ttl" type="xsd:nonNegativeInteger"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Traces">
    <xsd:sequence>
      <xsd:element name="Trace" type="TraceRecord" minOccurs="0" maxOccurs="999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TraceRecord">
    <xsd:annotation>
      <xsd:documentation>Record for all systems (consumer, proxies and gateways, providers) to use to trace the message. 
			The value is the common system name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="key" type="Text.Long">
          <xsd:annotation>
            <xsd:documentation>The key attribute is similar to ConversationID but is provided by the service requestor or entrypoint gateway and 
							must be unique across all Sabre gateways. Each gateway instance must prepend the ID value with its unique system identifier. 
							Internal service consumers must provide this value which may be their unique system identifier concantanated 
							with the ConversationID.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="start" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="end" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. 
						Example: 2002-10-10T12:00:00+05:00.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appInstance" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application instance involved in the particular transaction. 
						For example: PROD1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cluster" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application server cluster involved in the particular transaction. 
						Example: PROD TPFC SCC</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The server name involved in the particular transaction. 
						Example: PSS</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The targetURI is the endpoint address this system sent the message to. 
						For ServiceProviders it should be the abstract service address which is the address used by 
						registries to look up the actual service endpoint URI. The endpoint address may be a queue
						name (MOM service name).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="role" type="TraceRole"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrackingID">
    <xsd:annotation>
      <xsd:documentation>Tracking Identifier is an identifier intended for use to a set of related items and provide an 
			optional sequence number for the items.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="seq" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DiagnosticLevels">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Mock">
        <xsd:annotation>
          <xsd:documentation>Return a sample message without invoking service logic.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Simulate">
        <xsd:annotation>
          <xsd:documentation>Compute response without making changes to service data, state or status.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EmptyElement">
    <xsd:annotation>
      <xsd:documentation>Elements of this type are used for indicators whose presense denotes the 
				condition described by their name. They  have no content nor any attributes. 
				For example, an empty Success element denote that the process was successfully completed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCodeOrOAC">
    <xsd:annotation>
      <xsd:documentation>Customer Identifier assigned to office or agency or location. Commonly use values are 
			Psuedo City Code - 3 to 16 characters or the Sabre Office accounting code (OAC) which can be upto 25 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TraceRole">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="consumer">
        <xsd:annotation>
          <xsd:documentation>the system that initiated the service request and will be the ultimate consumer 
					of the service results.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="provider">
        <xsd:annotation>
          <xsd:documentation>System that performs the service operation defined in the service interface. 
					For RQ/RS exchange patterns, the provider reads the request message, applies business logic and 
					returns a response.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="gateway"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="TravelItineraryReadLLSRQ" name="TravelItineraryReadRQ" bindingOperationName="TravelItineraryReadRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="34f874c7-eb4c-4c11-8ec3-be8081c3691c"><con:settings/><con:call name="TravelItineraryReadRQ" id="38cb4375-af47-484c-891a-25a4d0f2db41"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">99999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversation_ID</eb:ConversationId>
         <eb:Service eb:type="Sabre">TravelItineraryReadLLSRQ</eb:Service>
         <eb:Action>TravelItineraryReadLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01Z</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59Z</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">binary security token</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <TravelItineraryReadRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <MessagingDetails>
            <Transaction Code="PNR"/>
         </MessagingDetails>
         <UniqueID ID="PNR locator"/>
      </TravelItineraryReadRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="TravelItineraryReadLLSRQ"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="PassengerDetailsSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}PassengerDetailsSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/swso/PassengerDetails2.0.0RQ.wsdl" id="974fc1fc-bfdd-42e2-a39e-db821cb302b6" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/swso/PassengerDetails2.0.0RQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/swso/PassengerDetails2.0.0RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sws_xsd="http://webservices.sabre.com/sabreXML/2011/10" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2011/10" schemaLocation="PassengerDetails2.0.0RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
      <xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="PassengerDetailsInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:PassengerDetailsRQ"/>
  </wsdl:message>
  <wsdl:message name="PassengerDetailsOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:PassengerDetailsRS"/>
  </wsdl:message>
  <wsdl:portType name="PassengerDetailsPortType">
    <wsdl:operation name="PassengerDetailsRQ">
      <wsdl:input message="sws:PassengerDetailsInput"/>
      <wsdl:output message="sws:PassengerDetailsOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PassengerDetailsSoapBinding" type="sws:PassengerDetailsPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="PassengerDetailsRQ">
      <soap:operation soapAction="PassengerDetailsRQ"/>
      <wsdl:input>
        <soap:header message="sws:PassengerDetailsInput" part="header" use="literal"/>
        <soap:header message="sws:PassengerDetailsInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:PassengerDetailsOutput" part="header" use="literal"/>
        <soap:header message="sws:PassengerDetailsOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PassengerDetailsService">
    <wsdl:port name="PassengerDetailsPortType" binding="sws:PassengerDetailsSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/PassengerDetails2.0.0RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="PassengerDetails2.0.0RQ.xsd"/>
  &lt;include schemaLocation="PassengerDetails2.0.0RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/PassengerDetails2.0.0RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="PassengerDetailsRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="IgnoreOnError" minOccurs="0">
          <xs:complexType>
            <xs:attribute name="Ind" type="xs:boolean" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="MiscSegmentSellRQ" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MiscSegment">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="OriginLocation">
                      <xs:complexType>
                        <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Text" type="xs:string"/>
                    <xs:element name="VendorPrefs">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Airline">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="DepartureDateTime" type="sws:date" use="required"/>
                  <xs:attribute name="InsertAfter" type="xs:integer" use="optional"/>
                  <xs:attribute name="NumberInParty" type="xs:integer" use="required"/>
                  <xs:attribute name="Status" type="xs:string" use="required"/>
                  <xs:attribute name="Type" use="required">
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:enumeration value="INS"/>
                        <xs:enumeration value="MCO"/>
                        <xs:enumeration value="OTH"/>
                        <xs:enumeration value="PTA"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="PostProcessing" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EndTransactionRQ" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="EndTransaction" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Email" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="eTicket" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="PDF" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Invoice" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Itinerary" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="PDF" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Segment" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="EndNumber" type="xs:integer" use="optional"/>
                                          <xs:attribute name="Number" type="xs:integer" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PersonName" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="NameNumber" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="Ind" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Source" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="ReceivedFrom" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="QueuePlaceRQ" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="MultiQueuePlace" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="QueueIdentifier" maxOccurs="20">
                            <xs:complexType>
                              <xs:attribute name="Number" type="xs:string" use="required"/>
                              <xs:attribute name="PrefatoryInstructionCode" type="xs:string" use="required"/>
                              <xs:attribute name="PseudoCityCode" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="QueueInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="QueueIdentifier" maxOccurs="3">
                            <xs:complexType>
                              <xs:attribute name="Name" type="xs:string" use="optional"/>
                              <xs:attribute name="Number" type="xs:string" use="optional"/>
                              <xs:attribute name="PrefatoryInstructionCode" type="xs:string" use="required"/>
                              <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="UniqueID" minOccurs="0" maxOccurs="6">
                            <xs:complexType>
                              <xs:attribute name="ID" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
            <xs:attribute name="IgnoreAfter" type="xs:boolean" use="optional"/>
            <xs:attribute name="RedisplayReservation" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="PreProcessing" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UniqueID" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="ID" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
            <xs:attribute name="IgnoreBefore" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="PriceQuoteInfo" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Link" maxOccurs="98">
                <xs:complexType>
                  <xs:attribute name="HostedCarrier" type="xs:boolean" use="optional"/>
                  <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                  <xs:attribute name="Record" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="ProfileRQ" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UniqueID">
                <xs:complexType>
                  <xs:attribute name="ID" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="SpecialReqDetails" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AddRemarkRQ" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="RemarkInfo">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="FOP_Remark" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CC_Info" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="PaymentCard">
                                        <xs:complexType>
                                          <xs:attribute name="AirlineCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="CardSecurityCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="Code" type="xs:string" use="required"/>
                                          <xs:attribute name="ExpireDate" type="sws:expireDate" use="required"/>
                                          <xs:attribute name="ExtendedPayment" type="xs:string" use="optional"/>
                                          <xs:attribute name="ManualApprovalCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="Number" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Suppress" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="Type" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FutureQueuePlaceRemark" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="DateTime" type="sws:dateTime" use="required"/>
                              <xs:attribute name="PrefatoryInstructionCode" type="xs:string" use="required"/>
                              <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                              <xs:attribute name="QueueIdentifier" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Remark" minOccurs="0" maxOccurs="98">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Text" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="Type" use="required">
                                <xs:simpleType>
                                  <xs:restriction base="xs:string">
                                    <xs:enumeration value="Alpha-Coded"/>
                                    <xs:enumeration value="Client Address"/>
                                    <xs:enumeration value="Corporate"/>
                                    <xs:enumeration value="Delivery Address"/>
                                    <xs:enumeration value="General"/>
                                    <xs:enumeration value="Group Name"/>
                                    <xs:enumeration value="Hidden"/>
                                    <xs:enumeration value="Historical"/>
                                    <xs:enumeration value="Invoice"/>
                                    <xs:enumeration value="Itinerary"/>
                                  </xs:restriction>
                                </xs:simpleType>
                              </xs:attribute>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="AirSeatRQ" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Seats">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Seat" maxOccurs="98">
                            <xs:complexType>
                              <xs:attribute name="BoardingPass" type="xs:boolean" use="optional"/>
                              <xs:attribute name="ChangeOfGauge" type="xs:boolean" use="optional"/>
                              <xs:attribute name="NameNumber" type="xs:string" use="required"/>
                              <xs:attribute name="Number" type="xs:string" use="optional"/>
                              <xs:attribute name="Preference" type="xs:string" use="optional"/>
                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="SpecialServiceRQ" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="SpecialServiceInfo">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="SecureFlight" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="PersonName" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="GivenName" minOccurs="0" type="xs:string"/>
                                      <xs:element name="Surname" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="DateOfBirth" type="sws:date" use="optional"/>
                                    <xs:attribute name="Gender" use="optional">
                                      <xs:simpleType>
                                        <xs:restriction base="xs:string">
                                          <xs:enumeration value="F"/>
                                          <xs:enumeration value="M"/>
                                        </xs:restriction>
                                      </xs:simpleType>
                                    </xs:attribute>
                                    <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="RedressNumber" minOccurs="0" type="xs:string"/>
                                <xs:element name="VendorPrefs" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Airline">
                                        <xs:complexType>
                                          <xs:attribute name="Hosted" type="xs:boolean" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="SSR_Code" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Service" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="PersonName" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                <xs:element name="VendorPrefs" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Airline">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                          <xs:attribute name="Hosted" type="xs:boolean" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="SSR_Code" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TravelItineraryAddInfoRQ" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AgencyInfo" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Address" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AddressLine" minOccurs="0" type="xs:string"/>
                          <xs:element name="CityName" type="xs:string"/>
                          <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                          <xs:element name="PostalCode" type="xs:string"/>
                          <xs:element name="StateCountyProv" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="StateCode" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="StreetNmbr" type="xs:string"/>
                          <xs:element name="VendorPrefs" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Airline">
                                  <xs:complexType>
                                    <xs:attribute name="Hosted" type="xs:boolean" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Ticketing" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                        <xs:attribute name="QueueNumber" type="xs:string" use="optional"/>
                        <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                        <xs:attribute name="TicketTimeLimit" type="sws:dateTime" use="optional"/>
                        <xs:attribute name="TicketType" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="CustomerInfo" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ContactNumbers" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ContactNumber" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="InsertAfter" type="xs:integer" use="optional"/>
                              <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                              <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="Phone" type="xs:string" use="required"/>
                              <xs:attribute name="PhoneUseType" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Corporate" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ID" type="xs:string"/>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="MembershipID" type="xs:string" use="required"/>
                        <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                        <xs:attribute name="ProgramID" type="xs:string" use="required"/>
                        <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                        <xs:attribute name="TravelingCarrierCode" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CustomerIdentifier" minOccurs="0" type="xs:string"/>
                    <xs:element name="Email" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="Address" type="xs:string" use="required"/>
                        <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                        <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                        <xs:attribute name="Type" use="optional">
                          <xs:simpleType>
                            <xs:restriction base="xs:string">
                              <xs:enumeration value="BC"/>
                              <xs:enumeration value="CC"/>
                              <xs:enumeration value="FR"/>
                              <xs:enumeration value="TO"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="GivenName" minOccurs="0" type="xs:string"/>
                          <xs:element name="GroupInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="VendorPrefs" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Airline">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="Name" type="xs:string" use="required"/>
                              <xs:attribute name="NumSeatsRemaining" type="xs:integer" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Surname" minOccurs="0" type="xs:string"/>
                        </xs:sequence>
                        <xs:attribute name="Infant" type="xs:boolean" use="optional"/>
                        <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                        <xs:attribute name="NameReference" type="xs:string" use="optional"/>
                        <xs:attribute name="PassengerType" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ReturnHostCommand" type="xs:boolean" use="optional"/>
      <xs:attribute name="TimeStamp" type="xs:dateTime" use="optional"/>
      <xs:attribute name="Version" type="xs:string" fixed="2.0.0" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/sws_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be omitted. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/PassengerDetails2.0.0RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://services.sabre.com/STL/v01">
  <xs:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="PassengerDetailsRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="stl:ApplicationResults"/>
        <xs:element name="TravelItineraryReadRS" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TravelItinerary" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="AccountingInfo" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AccountVendor" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Airline" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BaseFare" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Amount" type="xs:string" use="optional"/>
                              <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                              <xs:attribute name="Percent" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ChargeCategory" minOccurs="0" type="xs:string"/>
                          <xs:element name="DocumentInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Document" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FareApplication" minOccurs="0" type="xs:string"/>
                          <xs:element name="PaymentInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Commission" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Payment" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CC_Info" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="PaymentCard" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Form" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PersonName" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Taxes" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="GST" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="QST" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                    <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Tax" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                    <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Text" minOccurs="0" type="xs:string"/>
                          <xs:element name="TicketingInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Exchange" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="IssueDate" minOccurs="0" type="sws:date"/>
                                <xs:element name="IssueLocation" minOccurs="0" type="xs:string"/>
                                <xs:element name="OriginalInvoice" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="TarriffBasis" minOccurs="0" type="xs:string"/>
                                <xs:element name="Ticketing" minOccurs="0" maxOccurs="9">
                                  <xs:complexType>
                                    <xs:attribute name="ConjunctedCount" type="xs:string" use="optional"/>
                                    <xs:attribute name="CouponCount" type="xs:string" use="optional"/>
                                    <xs:attribute name="eTicketNumber" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                        <xs:attribute name="Type" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CustomerInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Address" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="AddressLine" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ContactNumbers" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="ContactNumber" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                    <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="Codeshare" type="xs:string" use="optional"/>
                              <xs:attribute name="MembershipID" type="xs:string" use="optional"/>
                              <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="ProgramID" type="xs:string" use="optional"/>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                              <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                              <xs:attribute name="Status" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Passport" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="Number" type="xs:string" use="optional"/>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PaymentInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Payment" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CC_Info" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="CardHolderInfo" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Address" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="AddressLine" minOccurs="0" maxOccurs="4" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="ContactNumbers" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="ContactNumber" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="Name" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="PreferredCustomer" type="xs:string" use="optional"/>
                                          <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Form" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                            </xs:extension>
                                          </xs:simpleContent>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Email" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                <xs:element name="GivenName" minOccurs="0" type="xs:string"/>
                                <xs:element name="GroupInfo" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="GroupNameNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Name" type="xs:string" use="optional"/>
                                    <xs:attribute name="NumSeatsRemaining" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="ProfileIndex" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                <xs:element name="Surname" minOccurs="0" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="Infant" type="xs:boolean" use="optional"/>
                              <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="NameReference" type="xs:string" use="optional"/>
                              <xs:attribute name="PassengerType" type="xs:string" use="optional"/>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="FileInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="File" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="ProductCode" type="xs:string" use="optional"/>
                                  <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ItineraryInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ItineraryPricing" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="FuturePriceInfo" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PhaseIVInfo" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Record" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Endorsements" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="HemisphereCode" minOccurs="0" type="xs:string"/>
                                            <xs:element name="ItinTotalFare" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="BaseFare" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Commission" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="EquivFare" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="PassengerTypeQuantity" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Taxes" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Tax" minOccurs="0" maxOccurs="3">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="EquivTax" minOccurs="0" maxOccurs="3">
                                                                <xs:complexType>
                                                                  <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Paid" type="xs:string" use="optional"/>
                                                            <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="Exempt" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="TotalFare" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="JourneyCode" minOccurs="0" type="xs:string"/>
                                            <xs:element name="PTC_FareBreakdown" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="FareBasis" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="TicketDesignator" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="FareCalculation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Text" minOccurs="0" maxOccurs="2" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="FlightSegment" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="BaggageAllowance" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Number" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Weight" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="FareBasis" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="MarketingAirline" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                            <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="OriginLocation" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="ValidityDates" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="NotValidAfter" minOccurs="0" type="xs:string"/>
                                                              <xs:element name="NotValidBefore" minOccurs="0" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="ConnectionInd" type="xs:string" use="optional"/>
                                                      <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                                      <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                      <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Status" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TourCode" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="UpdatedBy" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Source" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="CreationAgent" type="xs:string" use="optional"/>
                                                      <xs:attribute name="HomePseudoCityCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="CreateDateTime" type="sws:dateTime" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="Number" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PriceQuote" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="MiscInformation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="BaggageFees" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="SignatureLine" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="Banner" type="xs:string" use="optional"/>
                                                <xs:attribute name="CommissionAmount" type="xs:string" use="optional"/>
                                                <xs:attribute name="CommissionID" type="xs:string" use="optional"/>
                                                <xs:attribute name="ExpirationDateTime" type="xs:string" use="optional"/>
                                                <xs:attribute name="PQR_Ind" type="xs:string" use="optional"/>
                                                <xs:attribute name="Source" type="xs:string" use="optional"/>
                                                <xs:attribute name="Status" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TicketingFees" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="FeeInformation" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:simpleContent>
                                                        <xs:extension base="xs:string">
                                                          <xs:attribute name="AccountData" type="xs:string" use="optional"/>
                                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                          <xs:attribute name="DisplayOnOutputInd" type="xs:string" use="optional"/>
                                                          <xs:attribute name="FunctionCode" type="xs:string" use="optional"/>
                                                          <xs:attribute name="GuaranteeType" type="xs:string" use="optional"/>
                                                          <xs:attribute name="NonCommissionInd" type="xs:string" use="optional"/>
                                                          <xs:attribute name="NonRefundableInd" type="xs:string" use="optional"/>
                                                          <xs:attribute name="OnlineInterlineService" type="xs:string" use="optional"/>
                                                          <xs:attribute name="ServiceType" type="xs:string" use="optional"/>
                                                        </xs:extension>
                                                      </xs:simpleContent>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="Disclaimer" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="PricedItinerary" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="AirItineraryPricingInfo" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ItinTotalFare" minOccurs="0" maxOccurs="7">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="BaseFare" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="EquivFare" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Taxes" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Tax" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="TaxBreakdownCode" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="TotalFare" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Totals" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="BaseFare" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="EquivFare" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Taxes" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Tax" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="TotalFare" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="PassengerTypeQuantity" minOccurs="0" maxOccurs="7">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Quantity" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="PrivateFareInformation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Text" minOccurs="0" maxOccurs="7" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="PTC_FareBreakdown" minOccurs="0" maxOccurs="7">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Endorsements" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="FareBasis" minOccurs="0" maxOccurs="unbounded">
                                                          <xs:complexType>
                                                            <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="FareCalculation" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="FlightSegment" minOccurs="0" maxOccurs="unbounded">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="BaggageAllowance" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Number" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="FareBasis" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="MarketingAirline" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="OriginLocation" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="ValidityDates" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="NotValidAfter" minOccurs="0" type="xs:string"/>
                                                                    <xs:element name="NotValidBefore" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                            <xs:attribute name="ConnectionInd" type="xs:string" use="optional"/>
                                                            <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                                            <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                            <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                                            <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Status" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="ResTicketingRestrictions" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="DeletedBy" type="xs:string" use="optional"/>
                                          <xs:attribute name="InputMessage" type="xs:string" use="optional"/>
                                          <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                          <xs:attribute name="StatusCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="TaxExempt" type="xs:boolean" use="optional"/>
                                          <xs:attribute name="ValidatingCarrier" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="ResponseHeader" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ReservationItems" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="AirTaxi" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="DestinationLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Vendor" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Arunk" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Cruise" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Berth" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Cabin" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="CarRate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="ConfirmationNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="DestinationLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ArrivalDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="ArrivalTime" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Point" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="DepartureDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="DepartureTime" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Point" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Passenger" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Seat" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="ServiceInformation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="ShipName" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="SpaceReserved" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="TotalFare" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="TrailerPrice" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Vendor" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="FlightSegment" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="BSG_Record" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="ID" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="CheckInAirline" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="CompanyShortName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="CodeshareRecord" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="ID" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="DestinationLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Terminal" type="xs:string" use="optional"/>
                                                <xs:attribute name="TerminalCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Equipment" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="AirEquipType" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="MarketingAirline" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="MarketingCodeshareRecord" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="ID" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="MarriageGrp" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Group" type="xs:string" use="optional"/>
                                                <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                                <xs:attribute name="Sequence" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Meal" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OperatingAirline" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="CompanyShortName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OperatingAirlineRecord" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="ID" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Terminal" type="xs:string" use="optional"/>
                                                <xs:attribute name="TerminalCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="PartnerCarrier" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Banner" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="SupplierRef" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="ID" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="UpdatedArrivalTime" minOccurs="0" type="xs:string"/>
                                            <xs:element name="UpdatedDepartureTime" minOccurs="0" type="xs:string"/>
                                          </xs:sequence>
                                          <xs:attribute name="AirMilesFlown" type="xs:string" use="optional"/>
                                          <xs:attribute name="ArrivalDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="ConnectionInd" type="xs:string" use="optional"/>
                                          <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="ElapsedTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="eTicket" type="xs:boolean" use="optional"/>
                                          <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="SmokingAllowed" type="xs:boolean" use="optional"/>
                                          <xs:attribute name="SpecialMeal" type="xs:boolean" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="StopQuantity" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Hotel" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="BasicPropertyInfo" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Address" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="AddressLine" minOccurs="0" maxOccurs="2" type="xs:string"/>
                                                        <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="CancelPenalty" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="PolicyCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="ConfirmationNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="ContactNumbers" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="ContactNumber" minOccurs="0" maxOccurs="unbounded">
                                                          <xs:complexType>
                                                            <xs:attribute name="Fax" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="ChainCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="HotelCityCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="HotelCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="HotelName" type="xs:string" use="optional"/>
                                                <xs:attribute name="ServiceCityName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Customer" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Corporate" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="ID" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="MembershipID" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="ID" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Number" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="ReserveUnderName" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Guarantee" minOccurs="0" type="xs:string"/>
                                            <xs:element name="POS" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Source" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="RequestorID" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="RoomRates" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Commission" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:simpleContent>
                                                        <xs:extension base="xs:string">
                                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                          <xs:attribute name="NonCommission" type="xs:boolean" use="optional"/>
                                                          <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                                        </xs:extension>
                                                      </xs:simpleContent>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Rate" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="AdditionalGuestAmounts" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="AdditionalGuestAmount" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="NumCribs" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="NumExtraPersons" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="NumRollaways" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="DCS_AuxRateCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="RoomTypeCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="SpecialPrefs" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="TimeSpan" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Duration" type="xs:string" use="optional"/>
                                                <xs:attribute name="End" type="sws:date" use="optional"/>
                                                <xs:attribute name="Start" type="sws:date" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberOfUnits" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Insurance" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="InsuranceDetails" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ConfirmationNumber" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="Coverage" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Amount" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                        <xs:element name="Type" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="DestinationLocation" minOccurs="0" maxOccurs="2">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="OriginLocation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Payment" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Form" minOccurs="0" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="GivenName" minOccurs="0" type="xs:string"/>
                                                        <xs:element name="Surname" minOccurs="0" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="Vendor" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CompanyShortName" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="End" type="sws:date" use="optional"/>
                                                <xs:attribute name="NumPolicies" type="xs:string" use="optional"/>
                                                <xs:attribute name="PlanType" type="xs:string" use="optional"/>
                                                <xs:attribute name="PremiumAmount" type="xs:string" use="optional"/>
                                                <xs:attribute name="PurchaseDate" type="xs:string" use="optional"/>
                                                <xs:attribute name="Start" type="sws:date" use="optional"/>
                                                <xs:attribute name="StatusCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Misc" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Vendor" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Rail" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="ConfirmationNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="DestinationLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ArrivalDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="ArrivalTime" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="LocationName" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Point" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="IssueDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="DepartureDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="DepartureTime" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="LocationName" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Point" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="ServiceInformation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="SNCF_Information" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="SpaceReserved" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="TicketControlNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Train" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="Number" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Vendor" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Seats" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Seat" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="FlightSegment" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="DestinationLocation" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="OriginLocation" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="Changed" type="xs:string" use="optional"/>
                                                <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:string" use="optional"/>
                                                <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                                <xs:attribute name="SegmentStatus" type="xs:string" use="optional"/>
                                                <xs:attribute name="SmokingPreference" type="xs:string" use="optional"/>
                                                <xs:attribute name="Status" type="xs:string" use="optional"/>
                                                <xs:attribute name="Type" type="xs:string" use="optional"/>
                                                <xs:attribute name="TypeTwo" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Surface" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="ArrivalDepartureIdentifier" minOccurs="0" type="xs:string"/>
                                            <xs:element name="FlightSegment" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="DestinationLocation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="MarketingAirline" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="OriginLocation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                                <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="POS" minOccurs="0" type="xs:string"/>
                                            <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                            <xs:element name="Vendor" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Tour" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="TourDetails" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ConfirmationNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Duration" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="NumDays" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Extensions" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Features" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="HotelInformation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Room" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="OccupancyCode" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Type" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Location" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Meals" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Options" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Price" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="ServiceInformation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="VehicleInformation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Name" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:string" use="optional"/>
                                                <xs:attribute name="ServiceCityName" type="xs:string" use="optional"/>
                                                <xs:attribute name="Vendor" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Vehicle" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="ConfirmationNumber" minOccurs="0" type="xs:string"/>
                                            <xs:element name="DirectConnect" minOccurs="0" type="xs:string"/>
                                            <xs:element name="POS" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Source" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="RequestorID" minOccurs="0" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="VehRentalCore" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="DropOffLocationDetails" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="FlightSegment" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="MarketingAirline" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                            <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="LocationDetails" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="ContactNumbers" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="ContactNumber" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Fax" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="ExtendedLocationCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="PickUpDateTime" type="xs:string" use="optional"/>
                                                <xs:attribute name="PickUpDay" type="xs:string" use="optional"/>
                                                <xs:attribute name="ReturnDateTime" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="VehVendorAvail" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="VehResCore" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="CollectionDeliveryInfo" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="CollectionInfo" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Address" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:sequence>
                                                                          <xs:element name="AddressLine" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="CityName" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="PostalCode" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="StateCountyProv" minOccurs="0">
                                                                            <xs:complexType>
                                                                              <xs:attribute name="StateCode" type="xs:string" use="optional"/>
                                                                            </xs:complexType>
                                                                          </xs:element>
                                                                          <xs:element name="StreetNmbr" minOccurs="0" type="xs:string"/>
                                                                        </xs:sequence>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                    <xs:element name="ContactNumbers" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:sequence>
                                                                          <xs:element name="ContactNumber" minOccurs="0">
                                                                            <xs:complexType>
                                                                              <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                                            </xs:complexType>
                                                                          </xs:element>
                                                                        </xs:sequence>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                  </xs:sequence>
                                                                  <xs:attribute name="SiteID" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="SiteName" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="DeliveryInfo" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Address" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:sequence>
                                                                          <xs:element name="AddressLine" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="CityName" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="PostalCode" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="StateCountyProv" minOccurs="0">
                                                                            <xs:complexType>
                                                                              <xs:attribute name="StateCode" type="xs:string" use="optional"/>
                                                                            </xs:complexType>
                                                                          </xs:element>
                                                                          <xs:element name="StreetNmbr" minOccurs="0" type="xs:string"/>
                                                                        </xs:sequence>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                    <xs:element name="CollectionFee" minOccurs="0" type="xs:string"/>
                                                                    <xs:element name="ContactNumbers" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:sequence>
                                                                          <xs:element name="ContactNumber" minOccurs="0">
                                                                            <xs:complexType>
                                                                              <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                                            </xs:complexType>
                                                                          </xs:element>
                                                                        </xs:sequence>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                  <xs:attribute name="SiteID" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="SiteName" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="GuaranteePrepaid" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="CancellationRefundAmount" minOccurs="0" maxOccurs="4">
                                                                <xs:complexType>
                                                                  <xs:simpleContent>
                                                                    <xs:extension base="xs:string">
                                                                      <xs:attribute name="NumDays" type="xs:string" use="optional"/>
                                                                    </xs:extension>
                                                                  </xs:simpleContent>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                            <xs:attribute name="AmountPercentage" type="xs:string" use="optional"/>
                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="PricedEquip" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Equipment" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="EquipType" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="Quantity" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="SpecialEquip" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="SpecialEquipConfirmed" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="RentalRate" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Billing" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Number" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="Reference" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Client" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="ID" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Corporate" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="ID" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="CustLoyalty" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="MembershipID" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="InvoiceRemarks" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Text" minOccurs="0" maxOccurs="5" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Remarks" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="ReserveUnderName" minOccurs="0" type="xs:string"/>
                                                              <xs:element name="ServiceInformation" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="TourCode" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Vehicle" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="VehType" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Voucher" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="BillingNumber" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="Format" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="ID" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="Type" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                            <xs:attribute name="Changed" type="xs:string" use="optional"/>
                                                            <xs:attribute name="GuaranteedQuoted" type="xs:string" use="optional"/>
                                                            <xs:attribute name="RateCode" type="xs:string" use="optional"/>
                                                            <xs:attribute name="STM_RatePlan" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="VehicleCharges" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="VehicleCharge" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="ChargeDetails" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:sequence>
                                                                          <xs:element name="ApproximateTotalCharge" minOccurs="0" maxOccurs="20">
                                                                            <xs:complexType>
                                                                              <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                              <xs:attribute name="MileageAllowance" type="xs:string" use="optional"/>
                                                                              <xs:attribute name="NumDays" type="xs:string" use="optional"/>
                                                                              <xs:attribute name="NumHours" type="xs:string" use="optional"/>
                                                                              <xs:attribute name="RateType" type="xs:string" use="optional"/>
                                                                              <xs:attribute name="TotalMandatoryCharges" type="xs:string" use="optional"/>
                                                                            </xs:complexType>
                                                                          </xs:element>
                                                                        </xs:sequence>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                    <xs:element name="Commission" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                        <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                    <xs:element name="Mileage" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                                        <xs:attribute name="ExtraMileageCharge" type="xs:string" use="optional"/>
                                                                        <xs:attribute name="UnitOfMeasure" type="xs:string" use="optional"/>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                  </xs:sequence>
                                                                  <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="DropOffCharge" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="GuaranteeInd" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Vendor" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CompanyShortName" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Ticketing" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="eTicketNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                              <xs:attribute name="TicketTimeLimit" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ItineraryRef" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Header" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                          <xs:element name="Source" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="AAAPseudoCityCode" type="xs:string" use="optional"/>
                              <xs:attribute name="CreateDateTime" type="xs:string" use="optional"/>
                              <xs:attribute name="CreationAgent" type="xs:string" use="optional"/>
                              <xs:attribute name="HomePseudoCityCode" type="xs:string" use="optional"/>
                              <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                              <xs:attribute name="ReceivedFrom" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="TravelPolicy" minOccurs="0" maxOccurs="2" type="xs:string"/>
                        </xs:sequence>
                        <xs:attribute name="AccountingCity" type="xs:string" use="optional"/>
                        <xs:attribute name="AccountingCode" type="xs:string" use="optional"/>
                        <xs:attribute name="AirExtras" type="xs:boolean" use="optional"/>
                        <xs:attribute name="CustomerIdentifier" type="xs:string" use="optional"/>
                        <xs:attribute name="ID" type="xs:string" use="optional"/>
                        <xs:attribute name="InhibitCode" type="xs:string" use="optional"/>
                        <xs:attribute name="OfficeStationCode" type="xs:string" use="optional"/>
                        <xs:attribute name="OtherSystemID" type="xs:string" use="optional"/>
                        <xs:attribute name="PartitionID" type="xs:string" use="optional"/>
                        <xs:attribute name="PrimeHostID" type="xs:string" use="optional"/>
                        <xs:attribute name="TicketingCarrier" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PayInfo" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute name="FieldTagID" type="xs:string" use="optional"/>
                            <xs:attribute name="LinkSubkey" type="xs:string" use="optional"/>
                            <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                            <xs:attribute name="PassengerName" type="xs:string" use="optional"/>
                            <xs:attribute name="SectionID" type="xs:string" use="optional"/>
                            <xs:attribute name="SecurityIndicator" type="xs:string" use="optional"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="QueueInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Placement" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="RemarkInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Remark" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Text" minOccurs="0" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="Type" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="SpecialServiceInfo" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Service" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Airline" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:simpleContent>
                                      <xs:extension base="xs:string">
                                        <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                      </xs:extension>
                                    </xs:simpleContent>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Text" minOccurs="0" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="SSR_Code" type="xs:string" use="optional"/>
                              <xs:attribute name="SSR_Type" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="RPH" type="xs:string" use="optional"/>
                        <xs:attribute name="Type" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="Version" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/STL_For_SabreProtocol_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.sabre.com/STL/v01" xmlns="http://services.sabre.com/STL/v01" xmlns:STL="http://services.sabre.com/STL/v01" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added ShortText to SystemSpecificResults.
  		
  		May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace

		Created: April 21, 2011
		Description: This schema is the minimal Sabre Type Library (STL) schema needed for the Sabre SOAP Envelope schema to
		identify the STL_Payload  substitution group head element and type to be extended by message schemas..

		Copyright Sabre 2011
		The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only with the written permission of Sabre or in accordance with the terms and conditions stipulated in theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://services.sabre.com/STL_Header/v120" schemaLocation="STL_Header_v.1.2.0.xsd"/>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="ApplicationResults" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <!--- Results and Problem Information components.-->
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"></xsd:complexType>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="stlh:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="stlh:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="stlh:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="stlh:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="stlh:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="stlh:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="stlh:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/STL_Header_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Header/v120" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns="http://services.sabre.com/STL_Header/v120">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added key to trace attributes.
			
			August 8 - added HostCommand to system specific results.
			
		  	May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace
		
			Created: April 21, 2011
			Description: This schema is a standalone schema that defines Header metadata 
			structures that are independent of the payload schema.
			
			Copyright Sabre 2011
			The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only
			with the written permission of Sabre or in accordance with the terms and conditions stipulated in
			theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Diagnostics" type="Diagnostics"/>
  <xsd:element name="Identification" type="Identification"/>
  <xsd:element name="ResultSummary" type="ResultSummary"/>
  <xsd:element name="Security" type="Security"/>
  <xsd:element name="Service" type="Service"/>
  <xsd:element name="Traces" type="Traces"/>
  <xsd:element name="SabreHeader" type="SabreHeader"/>
  <xsd:complexType name="SabreHeader">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="SabreHeaderGroup">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DiagnosticResults">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Diagnostics">
    <xsd:sequence>
      <xsd:element name="Level" type="DiagnosticLevels" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the level of diagnostic data requested or provided.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Data" type="Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Block of diagnostic data included in request or returned in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Diagnostic" type="DiagnosticResults" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Diagnostic data. Must be defined in a differrent namespace as the header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identification">
    <xsd:annotation>
      <xsd:documentation>The Identification metadata uniquely identify each message instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CustomerID" type="PseudoCityCodeOrOAC" minOccurs="1"/>
      <xsd:element name="CustomerAppID" type="stlh:Text.Short" minOccurs="0"/>
      <xsd:element name="ConversationID" type="TrackingID" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The ConversationId element is a string identifying the set of related messages that make up a
						conversation between two or more Parties. The Party initiating a conversation determines the value of
						the ConversationId element that shall be reflected in all messages pertaining to that
						conversation. It remains constant for all messages within a conversation.
						Service providers are expected to increment the optional TrackingID integer attribute when present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MessageID" type="Identifier" minOccurs="1"/>
      <xsd:element name="TimeStamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identifier.System">
    <xsd:annotation>
      <xsd:documentation>System identifier used to uniquily identify the specific system.
 	"Source" is used to return the application name responsible for fulfilling the particular request transaction.
	"ApplicationInstance" is used to return the application instance responsible for fulfilling the particular request transaction.
	"Cluster" is used to return the application cluster responsible for fulfilling the particular request transaction.
	"HostName" is used to return the particular server name responsible for fulfilling the particular request transaction.
	Â Example: Source ApplicationInstance="PROD1" Cluster="PROD TPF SCC" HostName="PSS" TPF Source</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="instance" type="Identifier"/>
        <xsd:attribute name="cluster" type="Identifier"/>
        <xsd:attribute name="host" type="Identifier"/>
        <xsd:attribute name="uri" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The uri representing the endpoint reference by which this system can be accessed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProblemBase">
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ProblemSummary">
    <xsd:sequence>
      <xsd:element name="Source" type="Identifier.System" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The system that the reporting system deemed to be the cause of the problem. If omitted, the
						reporting system is also the source of the problem. For application errors, the element may
						identify a system the application is dependent upon that failed to respond. For validation
						errors this may identify the service consumer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReportingSystem" type="Identifier.System">
        <xsd:annotation>
          <xsd:documentation>The system that created the results record. If the Source system identifier is omitted, the
						system identified here both was the cause of the problem and created the result record.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="Message.Condition" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>An informative code and message that describes the results. Note: the message code and text must
						NOT be required to process to understand retry/compensate status.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ResultSummary">
    <xsd:choice>
      <xsd:element name="Success" type="EmptyElement">
        <xsd:annotation>
          <xsd:documentation>Success indicates that the request was
						processed successfully.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Error" type="ProblemSummary"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Security">
    <xsd:annotation>
      <xsd:documentation>Header records no longer contain user credentials (username/password) as these are needed only for 
     		 SessionCreateRQ in which the credentials should be in the payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="SecurityToken" type="Text.Long"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="Text.Short">
        <xsd:attribute name="operation" type="Text.Short"/>
        <xsd:attribute name="version" type="Text.Short"/>
        <xsd:attribute name="ttl" type="xsd:nonNegativeInteger"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Traces">
    <xsd:sequence>
      <xsd:element name="Trace" type="TraceRecord" minOccurs="0" maxOccurs="999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TraceRecord">
    <xsd:annotation>
      <xsd:documentation>Record for all systems (consumer, proxies and gateways, providers) to use to trace the message. 
			The value is the common system name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="key" type="Text.Long">
          <xsd:annotation>
            <xsd:documentation>The key attribute is similar to ConversationID but is provided by the service requestor or entrypoint gateway and 
							must be unique across all Sabre gateways. Each gateway instance must prepend the ID value with its unique system identifier. 
							Internal service consumers must provide this value which may be their unique system identifier concantanated 
							with the ConversationID.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="start" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="end" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. 
						Example: 2002-10-10T12:00:00+05:00.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appInstance" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application instance involved in the particular transaction. 
						For example: PROD1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cluster" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application server cluster involved in the particular transaction. 
						Example: PROD TPFC SCC</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The server name involved in the particular transaction. 
						Example: PSS</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The targetURI is the endpoint address this system sent the message to. 
						For ServiceProviders it should be the abstract service address which is the address used by 
						registries to look up the actual service endpoint URI. The endpoint address may be a queue
						name (MOM service name).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="role" type="TraceRole"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrackingID">
    <xsd:annotation>
      <xsd:documentation>Tracking Identifier is an identifier intended for use to a set of related items and provide an 
			optional sequence number for the items.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="seq" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DiagnosticLevels">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Mock">
        <xsd:annotation>
          <xsd:documentation>Return a sample message without invoking service logic.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Simulate">
        <xsd:annotation>
          <xsd:documentation>Compute response without making changes to service data, state or status.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EmptyElement">
    <xsd:annotation>
      <xsd:documentation>Elements of this type are used for indicators whose presense denotes the 
				condition described by their name. They  have no content nor any attributes. 
				For example, an empty Success element denote that the process was successfully completed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCodeOrOAC">
    <xsd:annotation>
      <xsd:documentation>Customer Identifier assigned to office or agency or location. Commonly use values are 
			Psuedo City Code - 3 to 16 characters or the Sabre Office accounting code (OAC) which can be upto 25 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TraceRole">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="consumer">
        <xsd:annotation>
          <xsd:documentation>the system that initiated the service request and will be the ultimate consumer 
					of the service results.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="provider">
        <xsd:annotation>
          <xsd:documentation>System that performs the service operation defined in the service interface. 
					For RQ/RS exchange patterns, the provider reads the request message, applies business logic and 
					returns a response.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="gateway"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="PassengerDetailsRQ" name="PassengerDetailsRQ" bindingOperationName="PassengerDetailsRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="1c645c33-867e-4b06-a488-da8ce2777983"><con:settings/><con:call name="PassengerDetailsRQ" id="b42033f0-4a6f-43e3-8bab-d575f49ec63d"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversationID</eb:ConversationId>
         <eb:Service eb:type="Sabre">PassengerDetailsRQ</eb:Service>
         <eb:Action>PassengerDetailsRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESG!ICESMSLB\/RES.LB!-4210745990415812605!1154630!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <PassengerDetailsRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <MiscSegmentSellRQ HaltOnError="true">
            <MiscSegment DepartureDateTime="12-21" NumberInParty="2" Type="OTH" Status="HK">
               <OriginLocation LocationCode="SCL"/>
               <Text>SWS TEST MISC SEGMENT</Text>
               <VendorPrefs>
                  <Airline Code="LA"/>
               </VendorPrefs>
            </MiscSegment>
         </MiscSegmentSellRQ>
         <PostProcessing HaltOnError="true" RedisplayReservation="true">
            <EndTransactionRQ HaltOnError="true">
               <EndTransaction Ind="true"/>
               <Source ReceivedFrom="SWS TESTING"/>
            </EndTransactionRQ>
         </PostProcessing>
         <PriceQuoteInfo HaltOnError="true">
            <Link NameNumber="1.1" Record="1"/>
            <Link NameNumber="2.1" Record="1"/>
         </PriceQuoteInfo>
         <SpecialReqDetails>
            <AddRemarkRQ HaltOnError="true">
               <RemarkInfo>
                  <FOP_Remark Type="CHECK"/>
                  <Remark Type="General">
                     <Text>TEST GENERAL REMARK</Text>
                  </Remark>
                  <Remark Type="Hidden">
                     <Text>TEST HIDDEN REMARK</Text>
                  </Remark>
                  <Remark Type="Historical">
                     <Text>TEST HISTORICAL REMARK</Text>
                  </Remark>
               </RemarkInfo>
            </AddRemarkRQ>
         </SpecialReqDetails>
         <TravelItineraryAddInfoRQ HaltOnError="true">
            <AgencyInfo>
               <Address>
                  <AddressLine>SABRE TRAVEL</AddressLine>
                  <CityName>SOUTHLAKE</CityName>
                  <CountryCode>US</CountryCode>
                  <PostalCode>76092</PostalCode>
                  <StateCountyProv StateCode="TX"/>
                  <StreetNmbr>3150 SABRE DRIVE</StreetNmbr>
               </Address>
               <Ticketing TicketType="7T-A"/>
            </AgencyInfo>
            <CustomerInfo>
               <ContactNumbers>
                  <ContactNumber NameNumber="1.1" Phone="817-555-1212" PhoneUseType="A"/>
                  <ContactNumber NameNumber="2.1" Phone="817-555-1212" PhoneUseType="H"/>
               </ContactNumbers>
               <Email Address="WEBSERVICES.SUPPORT@SABRE.COM" NameNumber="1.1" ShortText="ABC123" Type="CC"/>
               <Email Address="WEBSERVICES.SUPPORT@SABRE.COM" NameNumber="2.1" ShortText="ABC123" Type="CC"/>
               <PersonName>
                  <GivenName>SWS</GivenName>
                  <Surname>TEST ONE</Surname>
               </PersonName>
               <PersonName>
                  <GivenName>SWS</GivenName>
                  <Surname>TEST TWO</Surname>
               </PersonName>
            </CustomerInfo>
         </TravelItineraryAddInfoRQ>
      </PassengerDetailsRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="PassengerDetailsRQ"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="EnhancedAirBookSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}EnhancedAirBookSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/swso/EnhancedAirBook2.0.0RQ.wsdl" id="5c8c310e-b53f-4134-98e5-65ec45b69700" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/swso/EnhancedAirBook2.0.0RQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/swso/EnhancedAirBook2.0.0RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sws_xsd="http://webservices.sabre.com/sabreXML/2011/10" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2011/10" schemaLocation="EnhancedAirBook2.0.0RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
      <xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="EnhancedAirBookInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:EnhancedAirBookRQ"/>
  </wsdl:message>
  <wsdl:message name="EnhancedAirBookOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:EnhancedAirBookRS"/>
  </wsdl:message>
  <wsdl:portType name="EnhancedAirBookPortType">
    <wsdl:operation name="EnhancedAirBookRQ">
      <wsdl:input message="sws:EnhancedAirBookInput"/>
      <wsdl:output message="sws:EnhancedAirBookOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EnhancedAirBookSoapBinding" type="sws:EnhancedAirBookPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="EnhancedAirBookRQ">
      <soap:operation soapAction="EnhancedAirBookRQ"/>
      <wsdl:input>
        <soap:header message="sws:EnhancedAirBookInput" part="header" use="literal"/>
        <soap:header message="sws:EnhancedAirBookInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:EnhancedAirBookOutput" part="header" use="literal"/>
        <soap:header message="sws:EnhancedAirBookOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EnhancedAirBookService">
    <wsdl:port name="EnhancedAirBookPortType" binding="sws:EnhancedAirBookSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/EnhancedAirBook2.0.0RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="EnhancedAirBook2.0.0RQ.xsd"/>
  &lt;include schemaLocation="EnhancedAirBook2.0.0RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/EnhancedAirBook2.0.0RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="EnhancedAirBookRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="AirTaxRQ" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ItineraryInfos">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ItineraryInfo" maxOccurs="50">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ReservationItems">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Item">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="AirFareInfo">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="PTC_FareBreakdown">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="FareBasisCode" minOccurs="0">
                                                    <xs:simpleType>
                                                      <xs:restriction base="xs:string">
                                                        <xs:pattern value="[A-Z0-9]+(/[A-Z0-9]+)?"/>
                                                        <xs:minLength value="1"/>
                                                        <xs:maxLength value="15"/>
                                                      </xs:restriction>
                                                    </xs:simpleType>
                                                  </xs:element>
                                                  <xs:element name="PassengerFare">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="BaseFare">
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:decimal" use="required"/>
                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="EquivFare" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="AncillaryServiceCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="PassengerType">
                                                    <xs:complexType>
                                                      <xs:attribute name="Quantity" type="xs:integer" use="optional"/>
                                                      <xs:attribute name="Code" type="xs:string" use="required"/>
                                                      <xs:attribute name="Age" type="xs:integer" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="FlightSegment" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="ArrivalAirport">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                                                <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="DepartureAirport">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                                                <xs:attribute name="CodeContext" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Equipment">
                                              <xs:complexType>
                                                <xs:attribute name="AirEquipType" type="xs:string" use="required"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="FareBreakInfo" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="BaseFare" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:decimal" use="required"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="EquivFare" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="FareBasisCode" minOccurs="0">
                                                    <xs:simpleType>
                                                      <xs:restriction base="xs:string">
                                                        <xs:pattern value="[A-Z0-9]+(/[A-Z0-9]+)?"/>
                                                        <xs:minLength value="1"/>
                                                        <xs:maxLength value="15"/>
                                                      </xs:restriction>
                                                    </xs:simpleType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="SideTripStartInd" type="xs:boolean" use="optional"/>
                                                <xs:attribute name="SideTripEndInd" type="xs:boolean" use="optional"/>
                                                <xs:attribute name="SideTripNumber" type="xs:integer" use="optional"/>
                                                <xs:attribute name="FareComponentNumber" type="xs:integer" use="required"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="HiddenStops" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="HiddenStop" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="MarketingAirline">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="required"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OperatingAirline" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="required"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="DepartureDateTime" use="required">
                                            <xs:simpleType>
                                              <xs:restriction base="xs:string">
                                                <xs:pattern value="[2][0-9]{3}-[0-1][0-9]-[0-3][0-9][T][0-9]{2}:[0-9]{2}:[0-9]{2}"/>
                                              </xs:restriction>
                                            </xs:simpleType>
                                          </xs:attribute>
                                          <xs:attribute name="ArrivalDateTime" use="required">
                                            <xs:simpleType>
                                              <xs:restriction base="xs:string">
                                                <xs:pattern value="[2][0-9]{3}-[0-1][0-9]-[0-3][0-9][T][0-9]{2}:[0-9]{2}:[0-9]{2}"/>
                                              </xs:restriction>
                                            </xs:simpleType>
                                          </xs:attribute>
                                          <xs:attribute name="FlightNumber" type="xs:integer" use="required"/>
                                          <xs:attribute name="ResBookDesigCode" type="xs:string" use="required"/>
                                          <xs:attribute name="ForceConnectionInd" type="xs:boolean" use="optional"/>
                                          <xs:attribute name="ForceStopOverInd" type="xs:boolean" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="RPH" type="xs:integer" use="required"/>
                                    <xs:attribute name="TicketingCarrier" type="xs:string" use="required"/>
                                    <xs:attribute name="ValidatingCarrier" type="xs:string" use="required"/>
                                    <xs:attribute name="SalePseudoCityCode" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="POS" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Source" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="TPA_Extensions" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="UserInfo">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="AAACity">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Action" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" use="required">
                                            <xs:simpleType>
                                              <xs:restriction base="xs:string">
                                                <xs:minLength value="1"/>
                                                <xs:maxLength value="5"/>
                                              </xs:restriction>
                                            </xs:simpleType>
                                          </xs:attribute>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="AgentSine">
                                        <xs:complexType>
                                          <xs:attribute name="Code" use="required">
                                            <xs:simpleType>
                                              <xs:restriction base="xs:string">
                                                <xs:maxLength value="3"/>
                                              </xs:restriction>
                                            </xs:simpleType>
                                          </xs:attribute>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Branch" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:integer" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Partition">
                                        <xs:complexType>
                                          <xs:attribute name="ID" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Service">
                                        <xs:complexType>
                                          <xs:attribute name="Name" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="SetAddress" minOccurs="0" type="xs:string"/>
                                      <xs:element name="Station" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:integer" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Transaction" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="ID" type="xs:integer" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="IgnoreOnError" minOccurs="0">
          <xs:complexType>
            <xs:attribute name="Ind" type="xs:boolean" use="required"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="OTA_AirBookRQ" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="HaltOnStatus" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:attribute name="Code" use="required">
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:minLength value="1"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
              <xs:element name="OriginDestinationInformation">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="FlightSegment" maxOccurs="10">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="DestinationLocation">
                            <xs:complexType>
                              <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Equipment" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="AirEquipType" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MarketingAirline">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="required"/>
                              <xs:attribute name="FlightNumber" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MarriageGrp" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="OperatingAirline" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="OriginLocation">
                            <xs:complexType>
                              <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="ArrivalDateTime" type="xs:string" use="optional"/>
                        <xs:attribute name="BrandID" type="xs:string" use="optional"/>
                        <xs:attribute name="DepartureDateTime" type="sws:dateTime" use="required"/>
                        <xs:attribute name="FlightNumber" type="xs:string" use="required"/>
                        <xs:attribute name="NumberInParty" type="xs:string" use="required"/>
                        <xs:attribute name="ResBookDesigCode" type="xs:string" use="required"/>
                        <xs:attribute name="Status" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="RedisplayReservation" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="NumAttempts" use="required">
                    <xs:simpleType>
                      <xs:restriction base="xs:integer">
                        <xs:minInclusive value="1"/>
                        <xs:maxInclusive value="10"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                  <xs:attribute name="WaitInterval" use="required">
                    <xs:simpleType>
                      <xs:restriction base="xs:integer">
                        <xs:minInclusive value="100"/>
                        <xs:maxInclusive value="10000"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="OTA_AirPriceRQ" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PriceComparison" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="AmountSpecified" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="PriceRequestInformation">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="OptionalQualifiers">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="FlightQualifiers" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="VendorPrefs" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Airline">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MiscQualifiers" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="AirExtras" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="ProgramID" type="xs:string" use="required"/>
                                          <xs:attribute name="TierLevel" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Qualifier" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                    <xs:attribute name="Summary" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="BaggageAllowance" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="optional"/>
                                    <xs:attribute name="Weight" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Commission" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Endorsements" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="Override" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="HemisphereCode" minOccurs="0" type="xs:string"/>
                                <xs:element name="JourneyCode" minOccurs="0" type="xs:string"/>
                                <xs:element name="TourCode" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="BSPInclusiveTour" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="BulkTour" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="InclusiveTour" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="SuppressIT" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Text" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PricingQualifiers">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Account" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Code" maxOccurs="4" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="BankersSellingRate" minOccurs="0" type="xs:string"/>
                                <xs:element name="BargainFinder" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Historical" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="Rebook" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="BuyingDate" minOccurs="0" type="sws:date"/>
                                <xs:element name="CommandPricing" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Discount" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="AuthCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="FareBasis" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                          <xs:attribute name="TicketDesignator" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Corporate" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="ID" maxOccurs="4" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="Force" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Fare" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Type" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FareOptions" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Excursion" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="Net" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="Private" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="Public" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="ItineraryOptions" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="BreakFare" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="Number" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="ForceConnection" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="Number" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="ForceStopOver" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="Number" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="OverrideBreak" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="Number" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="SegmentSelect" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="EndNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Number" type="xs:string" use="required"/>
                                          <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="SideTrip" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="EndNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Number" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="NameSelect" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="NameNumber" type="xs:string" use="required"/>
                                    <xs:attribute name="EndNameNumber" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="NetRemit" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CAR" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Cash" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Credit" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Overrides" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="FuelSurchargeOverride" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="GoverningCarrierOverride" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Airline">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="required"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="NoAdvancePurchase" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="NoFareRestrictions" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="NoMinMaxStay" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="NoPenalty" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                          <xs:attribute name="PenaltyPercentage" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Purchase" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Ticketing" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="LocationCode" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PassengerStatus" minOccurs="0" type="xs:string"/>
                                <xs:element name="PassengerType" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="required"/>
                                    <xs:attribute name="Force" type="xs:boolean" use="optional"/>
                                    <xs:attribute name="Quantity" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PlusUp" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="TicketDesignator" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="Amount" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="ShipsRegistry" minOccurs="0" type="xs:string"/>
                                <xs:element name="Taxes" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="NoTax" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="TaxExempt" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="TaxOverride" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="required"/>
                                          <xs:attribute name="Code" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="ValidityDates" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="NotValidAfter" minOccurs="0" type="sws:date"/>
                                      <xs:element name="NotValidBefore" minOccurs="0" type="sws:date"/>
                                      <xs:element name="Segment">
                                        <xs:complexType>
                                          <xs:attribute name="EndNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Number" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="AlternateCurrencyCode" type="xs:string" use="optional"/>
                              <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                              <xs:attribute name="Source" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="FutureTicket" type="xs:boolean" use="optional"/>
                  <xs:attribute name="Retain" type="xs:boolean" use="optional"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="PostProcessing" minOccurs="0">
          <xs:complexType>
            <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
            <xs:attribute name="IgnoreAfter" type="xs:boolean" use="optional"/>
            <xs:attribute name="RedisplayReservation" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="PreProcessing" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UniqueID" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="ID" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="HaltOnError" type="xs:boolean" use="optional"/>
            <xs:attribute name="IgnoreBefore" type="xs:boolean" use="optional"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="ReturnHostCommand" type="xs:boolean" use="optional"/>
      <xs:attribute name="TimeStamp" type="xs:dateTime" use="optional"/>
      <xs:attribute name="Version" type="xs:string" fixed="2.0.0" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/sws_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be omitted. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/EnhancedAirBook2.0.0RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://services.sabre.com/STL/v01">
  <xs:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="EnhancedAirBookRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="stl:ApplicationResults"/>
        <xs:element name="AirTaxRS" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ItineraryInfos" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ItineraryInfo" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="PTC_FareBreakdown" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="PassengerType" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Quantity" type="xs:integer" use="optional"/>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                    <xs:attribute name="Age" type="xs:integer" use="optional"/>
                                    <xs:attribute name="Total" type="xs:decimal" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="TaxInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Taxes" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Tax" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                          </xs:sequence>
                                          <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="Amount" type="xs:decimal" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="RPH" type="xs:integer" use="optional"/>
                              <xs:attribute name="Total" type="xs:decimal" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="RPH" type="xs:integer" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="OTA_AirBookRS" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OriginDestinationOption" minOccurs="0" maxOccurs="10">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="FlightSegment" minOccurs="0" maxOccurs="10">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="DestinationLocation" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MarketingAirline" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                              <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MarriageGrp" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Ind" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="OriginLocation" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="ArrivalDateTime" type="sws:dateTime" use="optional"/>
                        <xs:attribute name="DepartureDateTime" type="sws:dateTime" use="optional"/>
                        <xs:attribute name="eTicket" type="xs:string" use="optional"/>
                        <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                        <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                        <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                        <xs:attribute name="Status" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="OTA_AirPriceRS" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PriceComparison" minOccurs="0">
                <xs:complexType>
                  <xs:attribute name="AmountReturned" type="xs:string" use="optional"/>
                  <xs:attribute name="AmountSpecified" type="xs:string" use="optional"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="PriceQuote" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="MiscInformation" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="HeaderInformation" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="BargainFinder" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="AlternateBooking" minOccurs="0" maxOccurs="24">
                                        <xs:complexType>
                                          <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="LastTicketingDate" minOccurs="0" type="xs:string"/>
                                <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                <xs:element name="ValidatingCarrier" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="OptionalCharges" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="ChargeDetails" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="ChargeBreakdown" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Base" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Equiv" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="PassengerTypeQuantity" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="Group" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Taxes" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Tax" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Total" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="NoChargeInd" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="DiscontinueDate" minOccurs="0" type="sws:date"/>
                                      <xs:element name="EffectiveDate" minOccurs="0" type="sws:date"/>
                                      <xs:element name="PurchaseBy" minOccurs="0" type="sws:date"/>
                                      <xs:element name="ReasonForIssuance" minOccurs="0">
                                        <xs:complexType>
                                          <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                                            </xs:extension>
                                          </xs:simpleContent>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="SSIM" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Code" minOccurs="0" type="xs:string"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="SSR" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Code" minOccurs="0" type="xs:string"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Ticket" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Number" type="xs:string" use="optional"/>
                                          <xs:attribute name="Simultaneous" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="TourCode" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="VendorPrefs" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Airline" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="CommericalName" type="xs:string" use="optional"/>
                                    <xs:attribute name="DisplayOnly" type="xs:string" use="optional"/>
                                    <xs:attribute name="EMD_Type" type="xs:string" use="optional"/>
                                    <xs:attribute name="FeeApplication" type="xs:string" use="optional"/>
                                    <xs:attribute name="FQTV_Tier" type="xs:string" use="optional"/>
                                    <xs:attribute name="GuaranteeInd" type="xs:string" use="optional"/>
                                    <xs:attribute name="IATA_Application" type="xs:string" use="optional"/>
                                    <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Owner" type="xs:string" use="optional"/>
                                    <xs:attribute name="RefundForm" type="xs:string" use="optional"/>
                                    <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                    <xs:attribute name="SegmentJourneyCouponInd" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="ItineraryInfo" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="FlightSegment" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="DestinationLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="MarketingAirline" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="DepartureDateTime" type="sws:date" use="optional"/>
                                          <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="BookingMethodReq" type="xs:string" use="optional"/>
                                    <xs:attribute name="SegmentCount" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PricedItinerary" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AirItineraryPricingInfo" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="AncillaryFees" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="FeeInformation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="TaxAmount" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="TaxID" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                          </xs:sequence>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumFees" type="xs:string" use="optional"/>
                                          <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FareCalculation" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="ItinTotalFare" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="BaseFare" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Commission" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="EquivFare" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="PrivateFare" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Taxes" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Tax" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="TaxName" type="xs:string" use="optional"/>
                                                <xs:attribute name="TicketingTaxCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="TotalFare" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Warnings" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Warning" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PassengerTypeQuantity" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                    <xs:attribute name="Quantity" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PTC_FareBreakdown" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="FareBasis" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="Code" type="xs:string" use="optional"/>
                                          <xs:attribute name="ContractNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="CorporateID" type="xs:string" use="optional"/>
                                          <xs:attribute name="FarePassengerType" type="xs:string" use="optional"/>
                                          <xs:attribute name="FareType" type="xs:string" use="optional"/>
                                          <xs:attribute name="FilingCarrier" type="xs:string" use="optional"/>
                                          <xs:attribute name="GlobalInd" type="xs:string" use="optional"/>
                                          <xs:attribute name="Market" type="xs:string" use="optional"/>
                                          <xs:attribute name="SurfaceSegment" type="xs:string" use="optional"/>
                                          <xs:attribute name="TicketDesignator" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Surcharges" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                              <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                              <xs:attribute name="Type" type="xs:string" use="optional"/>
                                            </xs:extension>
                                          </xs:simpleContent>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="TicketingFees" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="FeeInformation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="AccountData" type="xs:string" use="optional"/>
                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                          <xs:attribute name="FunctionCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="ServiceType" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                        <xs:attribute name="TotalAmount" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TravelItineraryReadRS" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TravelItinerary" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="AccountingInfo" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="AccountVendor" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Airline" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="BaseFare" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="Amount" type="xs:string" use="optional"/>
                              <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                              <xs:attribute name="Percent" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ChargeCategory" minOccurs="0" type="xs:string"/>
                          <xs:element name="DocumentInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Document" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="FareApplication" minOccurs="0" type="xs:string"/>
                          <xs:element name="PaymentInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Commission" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Payment" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CC_Info" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="PaymentCard" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Form" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PersonName" minOccurs="0">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Taxes" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="GST" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="QST" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                    <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Tax" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                    <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                    <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Text" minOccurs="0" type="xs:string"/>
                          <xs:element name="TicketingInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Exchange" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="IssueDate" minOccurs="0" type="sws:date"/>
                                <xs:element name="IssueLocation" minOccurs="0" type="xs:string"/>
                                <xs:element name="OriginalInvoice" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Number" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="TarriffBasis" minOccurs="0" type="xs:string"/>
                                <xs:element name="Ticketing" minOccurs="0" maxOccurs="9">
                                  <xs:complexType>
                                    <xs:attribute name="ConjunctedCount" type="xs:string" use="optional"/>
                                    <xs:attribute name="CouponCount" type="xs:string" use="optional"/>
                                    <xs:attribute name="eTicketNumber" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                        <xs:attribute name="Type" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="CustomerInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Address" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="AddressLine" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ContactNumbers" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="ContactNumber" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                    <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="Codeshare" type="xs:string" use="optional"/>
                              <xs:attribute name="MembershipID" type="xs:string" use="optional"/>
                              <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="ProgramID" type="xs:string" use="optional"/>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                              <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                              <xs:attribute name="Status" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Passport" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="Number" type="xs:string" use="optional"/>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PaymentInfo" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Payment" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CC_Info" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="CardHolderInfo" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Address" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="AddressLine" minOccurs="0" maxOccurs="4" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="ContactNumbers" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="ContactNumber" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="Name" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="PreferredCustomer" type="xs:string" use="optional"/>
                                          <xs:attribute name="ShortText" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Form" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:simpleContent>
                                            <xs:extension base="xs:string">
                                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                            </xs:extension>
                                          </xs:simpleContent>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Email" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                <xs:element name="GivenName" minOccurs="0" type="xs:string"/>
                                <xs:element name="GroupInfo" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="GroupNameNumber" type="xs:string" use="optional"/>
                                    <xs:attribute name="Name" type="xs:string" use="optional"/>
                                    <xs:attribute name="NumSeatsRemaining" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="ProfileIndex" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                <xs:element name="Surname" minOccurs="0" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="Infant" type="xs:boolean" use="optional"/>
                              <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="NameReference" type="xs:string" use="optional"/>
                              <xs:attribute name="PassengerType" type="xs:string" use="optional"/>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="FileInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="File" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="ProductCode" type="xs:string" use="optional"/>
                                  <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ItineraryInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="ItineraryPricing" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="FuturePriceInfo" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                    </xs:sequence>
                                    <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PhaseIVInfo" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Record" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Endorsements" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="HemisphereCode" minOccurs="0" type="xs:string"/>
                                            <xs:element name="ItinTotalFare" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="BaseFare" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Commission" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="EquivFare" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="PassengerTypeQuantity" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Taxes" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Tax" minOccurs="0" maxOccurs="3">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="EquivTax" minOccurs="0" maxOccurs="3">
                                                                <xs:complexType>
                                                                  <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Paid" type="xs:string" use="optional"/>
                                                            <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="Exempt" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="TotalFare" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="JourneyCode" minOccurs="0" type="xs:string"/>
                                            <xs:element name="PTC_FareBreakdown" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="FareBasis" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="TicketDesignator" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="FareCalculation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Text" minOccurs="0" maxOccurs="2" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="FlightSegment" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="BaggageAllowance" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Number" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Weight" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="FareBasis" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="MarketingAirline" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                            <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="OriginLocation" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="ValidityDates" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="NotValidAfter" minOccurs="0" type="xs:string"/>
                                                              <xs:element name="NotValidBefore" minOccurs="0" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="ConnectionInd" type="xs:string" use="optional"/>
                                                      <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                                      <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                      <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Status" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TourCode" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="UpdatedBy" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Source" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="CreationAgent" type="xs:string" use="optional"/>
                                                      <xs:attribute name="HomePseudoCityCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="CreateDateTime" type="sws:dateTime" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="Number" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PriceQuote" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="MiscInformation" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="BaggageFees" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="SignatureLine" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="Banner" type="xs:string" use="optional"/>
                                                <xs:attribute name="CommissionAmount" type="xs:string" use="optional"/>
                                                <xs:attribute name="CommissionID" type="xs:string" use="optional"/>
                                                <xs:attribute name="ExpirationDateTime" type="xs:string" use="optional"/>
                                                <xs:attribute name="PQR_Ind" type="xs:string" use="optional"/>
                                                <xs:attribute name="Source" type="xs:string" use="optional"/>
                                                <xs:attribute name="Status" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="TicketingFees" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="FeeInformation" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:simpleContent>
                                                        <xs:extension base="xs:string">
                                                          <xs:attribute name="AccountData" type="xs:string" use="optional"/>
                                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                          <xs:attribute name="DisplayOnOutputInd" type="xs:string" use="optional"/>
                                                          <xs:attribute name="FunctionCode" type="xs:string" use="optional"/>
                                                          <xs:attribute name="GuaranteeType" type="xs:string" use="optional"/>
                                                          <xs:attribute name="NonCommissionInd" type="xs:string" use="optional"/>
                                                          <xs:attribute name="NonRefundableInd" type="xs:string" use="optional"/>
                                                          <xs:attribute name="OnlineInterlineService" type="xs:string" use="optional"/>
                                                          <xs:attribute name="ServiceType" type="xs:string" use="optional"/>
                                                        </xs:extension>
                                                      </xs:simpleContent>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="Disclaimer" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="PricedItinerary" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="AirItineraryPricingInfo" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ItinTotalFare" minOccurs="0" maxOccurs="7">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="BaseFare" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="EquivFare" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Taxes" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Tax" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="TaxCode" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="TaxBreakdownCode" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="TotalFare" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="Totals" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="BaseFare" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="EquivFare" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Taxes" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Tax" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="TotalFare" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="PassengerTypeQuantity" minOccurs="0" maxOccurs="7">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="Quantity" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="PrivateFareInformation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Text" minOccurs="0" maxOccurs="7" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="PTC_FareBreakdown" minOccurs="0" maxOccurs="7">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Endorsements" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="FareBasis" minOccurs="0" maxOccurs="unbounded">
                                                          <xs:complexType>
                                                            <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="FareCalculation" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="FlightSegment" minOccurs="0" maxOccurs="unbounded">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="BaggageAllowance" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Number" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="FareBasis" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="MarketingAirline" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="OriginLocation" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="ValidityDates" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="NotValidAfter" minOccurs="0" type="xs:string"/>
                                                                    <xs:element name="NotValidBefore" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                            <xs:attribute name="ConnectionInd" type="xs:string" use="optional"/>
                                                            <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                                            <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                            <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                                            <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Status" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="ResTicketingRestrictions" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="DeletedBy" type="xs:string" use="optional"/>
                                          <xs:attribute name="InputMessage" type="xs:string" use="optional"/>
                                          <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                          <xs:attribute name="StatusCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="TaxExempt" type="xs:boolean" use="optional"/>
                                          <xs:attribute name="ValidatingCarrier" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="ResponseHeader" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="ReservationItems" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Item" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="AirTaxi" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="DestinationLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Vendor" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Arunk" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Cruise" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Berth" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Cabin" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="CarRate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="ConfirmationNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="DestinationLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ArrivalDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="ArrivalTime" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Point" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="DepartureDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="DepartureTime" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Point" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Passenger" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Seat" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="ServiceInformation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="ShipName" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="SpaceReserved" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="TotalFare" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="TrailerPrice" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Vendor" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="FlightSegment" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="BSG_Record" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="ID" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="CheckInAirline" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="CompanyShortName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="CodeshareRecord" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="ID" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="DestinationLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Terminal" type="xs:string" use="optional"/>
                                                <xs:attribute name="TerminalCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Equipment" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="AirEquipType" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="MarketingAirline" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="MarketingCodeshareRecord" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="ID" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="MarriageGrp" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Group" type="xs:string" use="optional"/>
                                                <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                                <xs:attribute name="Sequence" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Meal" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OperatingAirline" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="CompanyShortName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OperatingAirlineRecord" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="ID" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Terminal" type="xs:string" use="optional"/>
                                                <xs:attribute name="TerminalCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="PartnerCarrier" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Banner" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="SupplierRef" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="ID" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="UpdatedArrivalTime" minOccurs="0" type="xs:string"/>
                                            <xs:element name="UpdatedDepartureTime" minOccurs="0" type="xs:string"/>
                                          </xs:sequence>
                                          <xs:attribute name="AirMilesFlown" type="xs:string" use="optional"/>
                                          <xs:attribute name="ArrivalDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="ConnectionInd" type="xs:string" use="optional"/>
                                          <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="ElapsedTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="eTicket" type="xs:boolean" use="optional"/>
                                          <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="SmokingAllowed" type="xs:boolean" use="optional"/>
                                          <xs:attribute name="SpecialMeal" type="xs:boolean" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="StopQuantity" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Hotel" minOccurs="0" maxOccurs="unbounded">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="BasicPropertyInfo" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Address" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="AddressLine" minOccurs="0" maxOccurs="2" type="xs:string"/>
                                                        <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="CancelPenalty" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="PolicyCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="ConfirmationNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="ContactNumbers" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="ContactNumber" minOccurs="0" maxOccurs="unbounded">
                                                          <xs:complexType>
                                                            <xs:attribute name="Fax" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="ChainCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="HotelCityCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="HotelCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="HotelName" type="xs:string" use="optional"/>
                                                <xs:attribute name="ServiceCityName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Customer" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Corporate" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="ID" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="CustLoyalty" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="MembershipID" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="ID" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Number" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="ReserveUnderName" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Guarantee" minOccurs="0" type="xs:string"/>
                                            <xs:element name="POS" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Source" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="RequestorID" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="RoomRates" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Commission" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:simpleContent>
                                                        <xs:extension base="xs:string">
                                                          <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                          <xs:attribute name="NonCommission" type="xs:boolean" use="optional"/>
                                                          <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                                        </xs:extension>
                                                      </xs:simpleContent>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Rate" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="AdditionalGuestAmounts" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="AdditionalGuestAmount" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="NumCribs" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="NumExtraPersons" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="NumRollaways" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="DCS_AuxRateCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="RoomTypeCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="SpecialPrefs" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="TimeSpan" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Duration" type="xs:string" use="optional"/>
                                                <xs:attribute name="End" type="sws:date" use="optional"/>
                                                <xs:attribute name="Start" type="sws:date" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberOfUnits" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Insurance" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="InsuranceDetails" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ConfirmationNumber" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="Coverage" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Amount" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                        <xs:element name="Type" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="DestinationLocation" minOccurs="0" maxOccurs="2">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="OriginLocation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Payment" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Form" minOccurs="0" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="GivenName" minOccurs="0" type="xs:string"/>
                                                        <xs:element name="Surname" minOccurs="0" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                  <xs:element name="Vendor" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CompanyShortName" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="End" type="sws:date" use="optional"/>
                                                <xs:attribute name="NumPolicies" type="xs:string" use="optional"/>
                                                <xs:attribute name="PlanType" type="xs:string" use="optional"/>
                                                <xs:attribute name="PremiumAmount" type="xs:string" use="optional"/>
                                                <xs:attribute name="PurchaseDate" type="xs:string" use="optional"/>
                                                <xs:attribute name="Start" type="sws:date" use="optional"/>
                                                <xs:attribute name="StatusCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Misc" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Vendor" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Rail" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="ConfirmationNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="DestinationLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ArrivalDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="ArrivalTime" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="LocationName" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Point" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="IssueDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="DepartureDate" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="DepartureTime" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="LocationName" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Point" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="ServiceInformation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="SNCF_Information" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="SpaceReserved" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="TicketControlNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                            <xs:element name="Train" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:attribute name="Number" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="Vendor" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="ResBookDesigCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Seats" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="Seat" minOccurs="0" maxOccurs="unbounded">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="FlightSegment" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="DestinationLocation" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="OriginLocation" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="Changed" type="xs:string" use="optional"/>
                                                <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:string" use="optional"/>
                                                <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                                <xs:attribute name="SegmentStatus" type="xs:string" use="optional"/>
                                                <xs:attribute name="SmokingPreference" type="xs:string" use="optional"/>
                                                <xs:attribute name="Status" type="xs:string" use="optional"/>
                                                <xs:attribute name="Type" type="xs:string" use="optional"/>
                                                <xs:attribute name="TypeTwo" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Surface" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="ArrivalDepartureIdentifier" minOccurs="0" type="xs:string"/>
                                            <xs:element name="FlightSegment" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="DestinationLocation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="MarketingAirline" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="OriginLocation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                                <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="OriginLocation" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="POS" minOccurs="0" type="xs:string"/>
                                            <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                            <xs:element name="Vendor" minOccurs="0">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Tour" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="TourDetails" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="ConfirmationNumber" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Duration" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="NumDays" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Extensions" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Features" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="HotelInformation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Room" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="OccupancyCode" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Type" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Location" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Meals" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Options" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="Price" minOccurs="0" maxOccurs="unbounded">
                                                    <xs:complexType>
                                                      <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="ServiceInformation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                  <xs:element name="VehicleInformation" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Name" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:string" use="optional"/>
                                                <xs:attribute name="ServiceCityName" type="xs:string" use="optional"/>
                                                <xs:attribute name="Vendor" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="DepartureDateTime" type="xs:string" use="optional"/>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                          <xs:attribute name="NumberInParty" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                          <xs:attribute name="Type" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                      <xs:element name="Vehicle" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="ConfirmationNumber" minOccurs="0" type="xs:string"/>
                                            <xs:element name="DirectConnect" minOccurs="0" type="xs:string"/>
                                            <xs:element name="POS" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="Source" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="RequestorID" minOccurs="0" type="xs:string"/>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="VehRentalCore" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="DropOffLocationDetails" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="FlightSegment" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="MarketingAirline" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                            <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="FlightNumber" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="LocationDetails" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="ContactNumbers" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="ContactNumber" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Fax" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                      <xs:attribute name="ExtendedLocationCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="LocationCode" type="xs:string" use="optional"/>
                                                      <xs:attribute name="LocationName" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                                <xs:attribute name="PickUpDateTime" type="xs:string" use="optional"/>
                                                <xs:attribute name="PickUpDay" type="xs:string" use="optional"/>
                                                <xs:attribute name="ReturnDateTime" type="xs:string" use="optional"/>
                                              </xs:complexType>
                                            </xs:element>
                                            <xs:element name="VehVendorAvail" minOccurs="0">
                                              <xs:complexType>
                                                <xs:sequence>
                                                  <xs:element name="VehResCore" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:sequence>
                                                        <xs:element name="CollectionDeliveryInfo" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="CollectionInfo" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Address" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:sequence>
                                                                          <xs:element name="AddressLine" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="CityName" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="PostalCode" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="StateCountyProv" minOccurs="0">
                                                                            <xs:complexType>
                                                                              <xs:attribute name="StateCode" type="xs:string" use="optional"/>
                                                                            </xs:complexType>
                                                                          </xs:element>
                                                                          <xs:element name="StreetNmbr" minOccurs="0" type="xs:string"/>
                                                                        </xs:sequence>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                    <xs:element name="ContactNumbers" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:sequence>
                                                                          <xs:element name="ContactNumber" minOccurs="0">
                                                                            <xs:complexType>
                                                                              <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                                            </xs:complexType>
                                                                          </xs:element>
                                                                        </xs:sequence>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                  </xs:sequence>
                                                                  <xs:attribute name="SiteID" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="SiteName" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="DeliveryInfo" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Address" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:sequence>
                                                                          <xs:element name="AddressLine" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="CityName" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="CountryCode" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="PostalCode" minOccurs="0" type="xs:string"/>
                                                                          <xs:element name="StateCountyProv" minOccurs="0">
                                                                            <xs:complexType>
                                                                              <xs:attribute name="StateCode" type="xs:string" use="optional"/>
                                                                            </xs:complexType>
                                                                          </xs:element>
                                                                          <xs:element name="StreetNmbr" minOccurs="0" type="xs:string"/>
                                                                        </xs:sequence>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                    <xs:element name="CollectionFee" minOccurs="0" type="xs:string"/>
                                                                    <xs:element name="ContactNumbers" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:sequence>
                                                                          <xs:element name="ContactNumber" minOccurs="0">
                                                                            <xs:complexType>
                                                                              <xs:attribute name="Phone" type="xs:string" use="optional"/>
                                                                            </xs:complexType>
                                                                          </xs:element>
                                                                        </xs:sequence>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                  <xs:attribute name="SiteID" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="SiteName" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="GuaranteePrepaid" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="CancellationRefundAmount" minOccurs="0" maxOccurs="4">
                                                                <xs:complexType>
                                                                  <xs:simpleContent>
                                                                    <xs:extension base="xs:string">
                                                                      <xs:attribute name="NumDays" type="xs:string" use="optional"/>
                                                                    </xs:extension>
                                                                  </xs:simpleContent>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                            <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                            <xs:attribute name="AmountPercentage" type="xs:string" use="optional"/>
                                                            <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                            <xs:attribute name="Ind" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="PricedEquip" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Equipment" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="EquipType" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="Quantity" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="SpecialEquip" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="SpecialEquipConfirmed" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="RentalRate" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="Billing" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="Number" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="Reference" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Client" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="ID" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Corporate" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="ID" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="CustLoyalty" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="MembershipID" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="InvoiceRemarks" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Text" minOccurs="0" maxOccurs="5" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Remarks" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="ReserveUnderName" minOccurs="0" type="xs:string"/>
                                                              <xs:element name="ServiceInformation" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="TourCode" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="Text" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Vehicle" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="VehType" minOccurs="0" type="xs:string"/>
                                                                  </xs:sequence>
                                                                </xs:complexType>
                                                              </xs:element>
                                                              <xs:element name="Voucher" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:attribute name="BillingNumber" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="Format" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="ID" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="Type" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                            <xs:attribute name="Changed" type="xs:string" use="optional"/>
                                                            <xs:attribute name="GuaranteedQuoted" type="xs:string" use="optional"/>
                                                            <xs:attribute name="RateCode" type="xs:string" use="optional"/>
                                                            <xs:attribute name="STM_RatePlan" type="xs:string" use="optional"/>
                                                          </xs:complexType>
                                                        </xs:element>
                                                        <xs:element name="VehicleCharges" minOccurs="0">
                                                          <xs:complexType>
                                                            <xs:sequence>
                                                              <xs:element name="VehicleCharge" minOccurs="0">
                                                                <xs:complexType>
                                                                  <xs:sequence>
                                                                    <xs:element name="ChargeDetails" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:sequence>
                                                                          <xs:element name="ApproximateTotalCharge" minOccurs="0" maxOccurs="20">
                                                                            <xs:complexType>
                                                                              <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                              <xs:attribute name="MileageAllowance" type="xs:string" use="optional"/>
                                                                              <xs:attribute name="NumDays" type="xs:string" use="optional"/>
                                                                              <xs:attribute name="NumHours" type="xs:string" use="optional"/>
                                                                              <xs:attribute name="RateType" type="xs:string" use="optional"/>
                                                                              <xs:attribute name="TotalMandatoryCharges" type="xs:string" use="optional"/>
                                                                            </xs:complexType>
                                                                          </xs:element>
                                                                        </xs:sequence>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                    <xs:element name="Commission" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                        <xs:attribute name="Percent" type="xs:string" use="optional"/>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                    <xs:element name="Mileage" minOccurs="0">
                                                                      <xs:complexType>
                                                                        <xs:attribute name="CurrencyCode" type="xs:string" use="optional"/>
                                                                        <xs:attribute name="ExtraMileageCharge" type="xs:string" use="optional"/>
                                                                        <xs:attribute name="UnitOfMeasure" type="xs:string" use="optional"/>
                                                                      </xs:complexType>
                                                                    </xs:element>
                                                                  </xs:sequence>
                                                                  <xs:attribute name="Amount" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="DropOffCharge" type="xs:string" use="optional"/>
                                                                  <xs:attribute name="GuaranteeInd" type="xs:string" use="optional"/>
                                                                </xs:complexType>
                                                              </xs:element>
                                                            </xs:sequence>
                                                          </xs:complexType>
                                                        </xs:element>
                                                      </xs:sequence>
                                                    </xs:complexType>
                                                  </xs:element>
                                                  <xs:element name="Vendor" minOccurs="0">
                                                    <xs:complexType>
                                                      <xs:attribute name="Code" type="xs:string" use="optional"/>
                                                      <xs:attribute name="CompanyShortName" type="xs:string" use="optional"/>
                                                    </xs:complexType>
                                                  </xs:element>
                                                </xs:sequence>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="LinkCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="MergedSegmentInd" type="xs:string" use="optional"/>
                                          <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                                          <xs:attribute name="Status" type="xs:string" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="Ticketing" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="eTicketNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                              <xs:attribute name="TicketTimeLimit" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="ItineraryRef" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Header" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
                          <xs:element name="Source" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="AAAPseudoCityCode" type="xs:string" use="optional"/>
                              <xs:attribute name="CreateDateTime" type="xs:string" use="optional"/>
                              <xs:attribute name="CreationAgent" type="xs:string" use="optional"/>
                              <xs:attribute name="HomePseudoCityCode" type="xs:string" use="optional"/>
                              <xs:attribute name="PseudoCityCode" type="xs:string" use="optional"/>
                              <xs:attribute name="ReceivedFrom" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="TravelPolicy" minOccurs="0" maxOccurs="2" type="xs:string"/>
                        </xs:sequence>
                        <xs:attribute name="AccountingCity" type="xs:string" use="optional"/>
                        <xs:attribute name="AccountingCode" type="xs:string" use="optional"/>
                        <xs:attribute name="AirExtras" type="xs:boolean" use="optional"/>
                        <xs:attribute name="CustomerIdentifier" type="xs:string" use="optional"/>
                        <xs:attribute name="ID" type="xs:string" use="optional"/>
                        <xs:attribute name="InhibitCode" type="xs:string" use="optional"/>
                        <xs:attribute name="OfficeStationCode" type="xs:string" use="optional"/>
                        <xs:attribute name="OtherSystemID" type="xs:string" use="optional"/>
                        <xs:attribute name="PartitionID" type="xs:string" use="optional"/>
                        <xs:attribute name="PrimeHostID" type="xs:string" use="optional"/>
                        <xs:attribute name="TicketingCarrier" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PayInfo" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute name="FieldTagID" type="xs:string" use="optional"/>
                            <xs:attribute name="LinkSubkey" type="xs:string" use="optional"/>
                            <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                            <xs:attribute name="PassengerName" type="xs:string" use="optional"/>
                            <xs:attribute name="SectionID" type="xs:string" use="optional"/>
                            <xs:attribute name="SecurityIndicator" type="xs:string" use="optional"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="QueueInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Placement" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string">
                                  <xs:attribute name="RPH" type="xs:string" use="optional"/>
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="RemarkInfo" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Remark" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Text" minOccurs="0" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="Code" type="xs:string" use="optional"/>
                              <xs:attribute name="RPH" type="xs:string" use="optional"/>
                              <xs:attribute name="SegmentNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="Type" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="SpecialServiceInfo" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Service" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Airline" minOccurs="0">
                                  <xs:complexType>
                                    <xs:attribute name="Code" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="PersonName" minOccurs="0" maxOccurs="unbounded">
                                  <xs:complexType>
                                    <xs:simpleContent>
                                      <xs:extension base="xs:string">
                                        <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                                      </xs:extension>
                                    </xs:simpleContent>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Text" minOccurs="0" type="xs:string"/>
                              </xs:sequence>
                              <xs:attribute name="SSR_Code" type="xs:string" use="optional"/>
                              <xs:attribute name="SSR_Type" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="RPH" type="xs:string" use="optional"/>
                        <xs:attribute name="Type" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="Version" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/STL_For_SabreProtocol_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.sabre.com/STL/v01" xmlns="http://services.sabre.com/STL/v01" xmlns:STL="http://services.sabre.com/STL/v01" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added ShortText to SystemSpecificResults.
  		
  		May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace

		Created: April 21, 2011
		Description: This schema is the minimal Sabre Type Library (STL) schema needed for the Sabre SOAP Envelope schema to
		identify the STL_Payload  substitution group head element and type to be extended by message schemas..

		Copyright Sabre 2011
		The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only with the written permission of Sabre or in accordance with the terms and conditions stipulated in theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://services.sabre.com/STL_Header/v120" schemaLocation="STL_Header_v.1.2.0.xsd"/>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="ApplicationResults" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <!--- Results and Problem Information components.-->
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"></xsd:complexType>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="stlh:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="stlh:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="stlh:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="stlh:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="stlh:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="stlh:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="stlh:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/STL_Header_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Header/v120" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns="http://services.sabre.com/STL_Header/v120">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added key to trace attributes.
			
			August 8 - added HostCommand to system specific results.
			
		  	May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace
		
			Created: April 21, 2011
			Description: This schema is a standalone schema that defines Header metadata 
			structures that are independent of the payload schema.
			
			Copyright Sabre 2011
			The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only
			with the written permission of Sabre or in accordance with the terms and conditions stipulated in
			theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Diagnostics" type="Diagnostics"/>
  <xsd:element name="Identification" type="Identification"/>
  <xsd:element name="ResultSummary" type="ResultSummary"/>
  <xsd:element name="Security" type="Security"/>
  <xsd:element name="Service" type="Service"/>
  <xsd:element name="Traces" type="Traces"/>
  <xsd:element name="SabreHeader" type="SabreHeader"/>
  <xsd:complexType name="SabreHeader">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="SabreHeaderGroup">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DiagnosticResults">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Diagnostics">
    <xsd:sequence>
      <xsd:element name="Level" type="DiagnosticLevels" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the level of diagnostic data requested or provided.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Data" type="Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Block of diagnostic data included in request or returned in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Diagnostic" type="DiagnosticResults" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Diagnostic data. Must be defined in a differrent namespace as the header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identification">
    <xsd:annotation>
      <xsd:documentation>The Identification metadata uniquely identify each message instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CustomerID" type="PseudoCityCodeOrOAC" minOccurs="1"/>
      <xsd:element name="CustomerAppID" type="stlh:Text.Short" minOccurs="0"/>
      <xsd:element name="ConversationID" type="TrackingID" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The ConversationId element is a string identifying the set of related messages that make up a
						conversation between two or more Parties. The Party initiating a conversation determines the value of
						the ConversationId element that shall be reflected in all messages pertaining to that
						conversation. It remains constant for all messages within a conversation.
						Service providers are expected to increment the optional TrackingID integer attribute when present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MessageID" type="Identifier" minOccurs="1"/>
      <xsd:element name="TimeStamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identifier.System">
    <xsd:annotation>
      <xsd:documentation>System identifier used to uniquily identify the specific system.
 	"Source" is used to return the application name responsible for fulfilling the particular request transaction.
	"ApplicationInstance" is used to return the application instance responsible for fulfilling the particular request transaction.
	"Cluster" is used to return the application cluster responsible for fulfilling the particular request transaction.
	"HostName" is used to return the particular server name responsible for fulfilling the particular request transaction.
	Â Example: Source ApplicationInstance="PROD1" Cluster="PROD TPF SCC" HostName="PSS" TPF Source</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="instance" type="Identifier"/>
        <xsd:attribute name="cluster" type="Identifier"/>
        <xsd:attribute name="host" type="Identifier"/>
        <xsd:attribute name="uri" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The uri representing the endpoint reference by which this system can be accessed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProblemBase">
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ProblemSummary">
    <xsd:sequence>
      <xsd:element name="Source" type="Identifier.System" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The system that the reporting system deemed to be the cause of the problem. If omitted, the
						reporting system is also the source of the problem. For application errors, the element may
						identify a system the application is dependent upon that failed to respond. For validation
						errors this may identify the service consumer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReportingSystem" type="Identifier.System">
        <xsd:annotation>
          <xsd:documentation>The system that created the results record. If the Source system identifier is omitted, the
						system identified here both was the cause of the problem and created the result record.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="Message.Condition" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>An informative code and message that describes the results. Note: the message code and text must
						NOT be required to process to understand retry/compensate status.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ResultSummary">
    <xsd:choice>
      <xsd:element name="Success" type="EmptyElement">
        <xsd:annotation>
          <xsd:documentation>Success indicates that the request was
						processed successfully.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Error" type="ProblemSummary"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Security">
    <xsd:annotation>
      <xsd:documentation>Header records no longer contain user credentials (username/password) as these are needed only for 
     		 SessionCreateRQ in which the credentials should be in the payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="SecurityToken" type="Text.Long"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="Text.Short">
        <xsd:attribute name="operation" type="Text.Short"/>
        <xsd:attribute name="version" type="Text.Short"/>
        <xsd:attribute name="ttl" type="xsd:nonNegativeInteger"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Traces">
    <xsd:sequence>
      <xsd:element name="Trace" type="TraceRecord" minOccurs="0" maxOccurs="999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TraceRecord">
    <xsd:annotation>
      <xsd:documentation>Record for all systems (consumer, proxies and gateways, providers) to use to trace the message. 
			The value is the common system name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="key" type="Text.Long">
          <xsd:annotation>
            <xsd:documentation>The key attribute is similar to ConversationID but is provided by the service requestor or entrypoint gateway and 
							must be unique across all Sabre gateways. Each gateway instance must prepend the ID value with its unique system identifier. 
							Internal service consumers must provide this value which may be their unique system identifier concantanated 
							with the ConversationID.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="start" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="end" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. 
						Example: 2002-10-10T12:00:00+05:00.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appInstance" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application instance involved in the particular transaction. 
						For example: PROD1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cluster" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application server cluster involved in the particular transaction. 
						Example: PROD TPFC SCC</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The server name involved in the particular transaction. 
						Example: PSS</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The targetURI is the endpoint address this system sent the message to. 
						For ServiceProviders it should be the abstract service address which is the address used by 
						registries to look up the actual service endpoint URI. The endpoint address may be a queue
						name (MOM service name).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="role" type="TraceRole"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrackingID">
    <xsd:annotation>
      <xsd:documentation>Tracking Identifier is an identifier intended for use to a set of related items and provide an 
			optional sequence number for the items.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="seq" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DiagnosticLevels">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Mock">
        <xsd:annotation>
          <xsd:documentation>Return a sample message without invoking service logic.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Simulate">
        <xsd:annotation>
          <xsd:documentation>Compute response without making changes to service data, state or status.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EmptyElement">
    <xsd:annotation>
      <xsd:documentation>Elements of this type are used for indicators whose presense denotes the 
				condition described by their name. They  have no content nor any attributes. 
				For example, an empty Success element denote that the process was successfully completed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCodeOrOAC">
    <xsd:annotation>
      <xsd:documentation>Customer Identifier assigned to office or agency or location. Commonly use values are 
			Psuedo City Code - 3 to 16 characters or the Sabre Office accounting code (OAC) which can be upto 25 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TraceRole">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="consumer">
        <xsd:annotation>
          <xsd:documentation>the system that initiated the service request and will be the ultimate consumer 
					of the service results.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="provider">
        <xsd:annotation>
          <xsd:documentation>System that performs the service operation defined in the service interface. 
					For RQ/RS exchange patterns, the provider reads the request message, applies business logic and 
					returns a response.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="gateway"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/swso/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="EnhancedAirBookRQ" name="EnhancedAirBookRQ" bindingOperationName="EnhancedAirBookRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="4c9a4bbe-c2e6-4728-909a-40f56a32f63f"><con:settings/><con:call name="EnhancedAirBookRQ" id="4c67cea4-8cef-4e21-b595-e8843b422942"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversationID</eb:ConversationId>
         <eb:Service eb:type="Sabre">EnhancedAirBookRQ</eb:Service>
         <eb:Action>EnhancedAirBookRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESG!ICESMSLB\/RES.LB!-4210745990415812605!1154630!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <EnhancedAirBookRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:stl="http://services.sabre.com/STL/v01">
         <OTA_AirBookRQ HaltOnError="true">
            <OriginDestinationInformation>
               <FlightSegment FlightNumber="7934" DepartureDateTime="2012-12-05T13:20" NumberInParty="1" Status="NN" ResBookDesigCode="J">
                  <DestinationLocation LocationCode="SCL"/>
                  <Equipment AirEquipType="763"/>
                  <MarketingAirline Code="LA" FlightNumber="7934"/>
                  <OperatingAirline Code="LA"/>
                  <OriginLocation LocationCode="LAX"/>
               </FlightSegment>
            </OriginDestinationInformation>
         </OTA_AirBookRQ>
         <OTA_AirPriceRQ HaltOnError="true">
            <PriceRequestInformation Retain="true">
               <OptionalQualifiers>
                  <PricingQualifiers>
                     <PassengerType Code="ADT" Quantity="1"/>
                     <PassengerType Code="SRC" Quantity="1"/>
                  </PricingQualifiers>
               </OptionalQualifiers>
            </PriceRequestInformation>
         </OTA_AirPriceRQ>
         <PostProcessing HaltOnError="true" RedisplayReservation="true"/>
      </EnhancedAirBookRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="EnhancedAirBookRQ"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="AirTicketSoapBinding" type="wsdl" bindingName="{https://webservices.sabre.com/websvc}AirTicketSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://webservices.sabre.com/wsdl/tpfc/AirTicketLLS2.0.0RQ.wsdl" id="afe57e46-a743-43f7-a205-daefd2daf5fd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://webservices.sabre.com/wsdl/tpfc/AirTicketLLS2.0.0RQ.wsdl"><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/AirTicketLLS2.0.0RQ.wsdl</con:url><con:content><![CDATA[<wsdl:definitions targetNamespace="https://webservices.sabre.com/websvc" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sws_xsd="http://webservices.sabre.com/sabreXML/2011/10" xmlns:sws="https://webservices.sabre.com/websvc" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://webservices.sabre.com/sabreXML/2011/10" schemaLocation="AirTicketLLS2.0.0RQRS.xsd"/>
      <xsd:import namespace="http://www.ebxml.org/namespaces/messageHeader" schemaLocation="msg-header-2_0.xsd"/>
      <xsd:import namespace="http://schemas.xmlsoap.org/ws/2002/12/secext" schemaLocation="wsse.xsd"/>
      <xsd:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="AirTicketInput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:AirTicketRQ"/>
  </wsdl:message>
  <wsdl:message name="AirTicketOutput">
    <part name="header" element="eb:MessageHeader"/>
    <part name="header2" element="wsse:Security"/>
    <wsdl:part name="body" element="sws_xsd:AirTicketRS"/>
  </wsdl:message>
  <wsdl:portType name="AirTicketPortType">
    <wsdl:operation name="AirTicketRQ">
      <wsdl:input message="sws:AirTicketInput"/>
      <wsdl:output message="sws:AirTicketOutput"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="AirTicketSoapBinding" type="sws:AirTicketPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="AirTicketRQ">
      <soap:operation soapAction="AirTicketLLSRQ"/>
      <wsdl:input>
        <soap:header message="sws:AirTicketInput" part="header" use="literal"/>
        <soap:header message="sws:AirTicketInput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:header message="sws:AirTicketOutput" part="header" use="literal"/>
        <soap:header message="sws:AirTicketOutput" part="header2" use="literal"/>
        <soap:body parts="body" use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AirTicketService">
    <wsdl:port name="AirTicketPortType" binding="sws:AirTicketSoapBinding">
      <soap:address location="https://webservices.sabre.com/websvc"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/AirTicketLLS2.0.0RQRS.xsd</con:url><con:content>&lt;schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns="http://www.w3.org/2001/XMLSchema">
  &lt;include schemaLocation="AirTicketLLS2.0.0RQ.xsd"/>
  &lt;include schemaLocation="AirTicketLLS2.0.0RS.xsd"/>
&lt;/schema></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/AirTicketLLS2.0.0RQ.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="AirTicketRQ">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="OptionalQualifiers" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FlightQualifiers" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="VendorPrefs" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Airline">
                            <xs:complexType>
                              <xs:attribute name="Code" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="FOP_Qualifiers" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="BasicFOP" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="CC_Info" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="PaymentCard">
                                  <xs:complexType>
                                    <xs:attribute name="CardSecurityCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="Code" type="xs:string" use="required"/>
                                    <xs:attribute name="ExpireDate" type="sws:expireDate" use="required"/>
                                    <xs:attribute name="ExtendedPayment" type="xs:integer" use="optional"/>
                                    <xs:attribute name="ManualApprovalCode" type="xs:string" use="optional"/>
                                    <xs:attribute name="Number" type="xs:integer" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="Suppress" type="xs:boolean" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="Type" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="BSP_Ticketing" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="MultipleFOP" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Fare">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FOP_One">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CC_Info" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="PaymentCard">
                                              <xs:complexType>
                                                <xs:attribute name="CardSecurityCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Code" type="xs:string" use="required"/>
                                                <xs:attribute name="ExpireDate" type="sws:expireDate" use="required"/>
                                                <xs:attribute name="ExtendedPayment" type="xs:integer" use="optional"/>
                                                <xs:attribute name="ManualApprovalCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:integer" use="required"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="Suppress" type="xs:boolean" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FOP_Two">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CC_Info" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="PaymentCard">
                                              <xs:complexType>
                                                <xs:attribute name="CardSecurityCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Code" type="xs:string" use="required"/>
                                                <xs:attribute name="ExpireDate" type="sws:expireDate" use="required"/>
                                                <xs:attribute name="ExtendedPayment" type="xs:integer" use="optional"/>
                                                <xs:attribute name="ManualApprovalCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:integer" use="required"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="Suppress" type="xs:boolean" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Taxes" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Tax" maxOccurs="3">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="required"/>
                                          <xs:attribute name="TaxCode" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MultipleMiscFOP" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Fare">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FOP_One">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CC_Info" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="PaymentCard">
                                              <xs:complexType>
                                                <xs:attribute name="CardSecurityCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Code" type="xs:string" use="required"/>
                                                <xs:attribute name="ExpireDate" type="sws:expireDate" use="required"/>
                                                <xs:attribute name="ExtendedPayment" type="xs:integer" use="optional"/>
                                                <xs:attribute name="ManualApprovalCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:integer" use="required"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                          <xs:attribute name="Suppress" type="xs:boolean" use="optional"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FOP_Two">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="ExtendedPayment" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="NumMonths" type="xs:integer" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Type" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Taxes" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Tax" maxOccurs="3">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="required"/>
                                          <xs:attribute name="TaxCode" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="PayLaterPlan" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Fare">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FOP">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CC_Info" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="PaymentCard">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="required"/>
                                                <xs:attribute name="ExpireDate" type="sws:expireDate" use="required"/>
                                                <xs:attribute name="ManualApprovalCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:integer" use="required"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Installment">
                                  <xs:complexType>
                                    <xs:attribute name="Count" type="xs:string" use="required"/>
                                    <xs:attribute name="PayLaterReferenceNumber" type="xs:string" use="required"/>
                                    <xs:attribute name="Value" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="SabreSonicTicketing" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="BasicFOP" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="CC_Info" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="PaymentCard" minOccurs="0">
                                        <xs:complexType>
                                          <xs:attribute name="CardSecurityCode" type="xs:integer" use="optional"/>
                                          <xs:attribute name="Code" type="xs:string" use="required"/>
                                          <xs:attribute name="ExpireDate" type="sws:expireDate" use="required"/>
                                          <xs:attribute name="ExtendedPayment" type="xs:integer" use="optional"/>
                                          <xs:attribute name="ManualApprovalCode" type="xs:string" use="optional"/>
                                          <xs:attribute name="Number" type="xs:integer" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Suppress" type="xs:boolean" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                              <xs:attribute name="ManualApprovalCode" type="xs:string" use="optional"/>
                              <xs:attribute name="Type" type="xs:string" use="optional"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="EnhancedMultipleFOP" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Fare">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FOP_One">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CC_Info" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="PaymentCard">
                                              <xs:complexType>
                                                <xs:attribute name="CardSecurityCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Code" type="xs:string" use="required"/>
                                                <xs:attribute name="ExpireDate" type="sws:expireDate" use="required"/>
                                                <xs:attribute name="ExtendedPayment" type="xs:integer" use="optional"/>
                                                <xs:attribute name="ManualApprovalCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:integer" use="required"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FOP_Two" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CC_Info" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="PaymentCard">
                                              <xs:complexType>
                                                <xs:attribute name="CardSecurityCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Code" type="xs:string" use="required"/>
                                                <xs:attribute name="ExpireDate" type="sws:expireDate" use="required"/>
                                                <xs:attribute name="ExtendedPayment" type="xs:integer" use="optional"/>
                                                <xs:attribute name="ManualApprovalCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:integer" use="required"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Taxes">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Tax">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="required"/>
                                          <xs:attribute name="TaxCode" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="MultipleFOP" minOccurs="0">
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="Fare">
                                  <xs:complexType>
                                    <xs:attribute name="Amount" type="xs:string" use="required"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FOP_One">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CC_Info" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="PaymentCard">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="required"/>
                                                <xs:attribute name="ManualApprovalCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:integer" use="required"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="FOP_Two">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="CC_Info" minOccurs="0">
                                        <xs:complexType>
                                          <xs:sequence>
                                            <xs:element name="PaymentCard">
                                              <xs:complexType>
                                                <xs:attribute name="Code" type="xs:string" use="required"/>
                                                <xs:attribute name="ManualApprovalCode" type="xs:string" use="optional"/>
                                                <xs:attribute name="Number" type="xs:integer" use="required"/>
                                              </xs:complexType>
                                            </xs:element>
                                          </xs:sequence>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                    <xs:attribute name="Type" type="xs:string" use="optional"/>
                                  </xs:complexType>
                                </xs:element>
                                <xs:element name="Taxes" minOccurs="0">
                                  <xs:complexType>
                                    <xs:sequence>
                                      <xs:element name="Tax">
                                        <xs:complexType>
                                          <xs:attribute name="Amount" type="xs:string" use="required"/>
                                          <xs:attribute name="TaxCode" type="xs:string" use="required"/>
                                        </xs:complexType>
                                      </xs:element>
                                    </xs:sequence>
                                  </xs:complexType>
                                </xs:element>
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="MiscQualifiers" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="Certificate" minOccurs="0" maxOccurs="2">
                      <xs:complexType>
                        <xs:attribute name="Number" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="EndTransaction" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="FutureTicket" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Line" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="EndNumber" type="xs:integer" use="optional"/>
                              <xs:attribute name="NameNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="Number" type="xs:integer" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Invoice" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Ind" type="xs:boolean" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="NeedPrint" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="AuditorCoupon" type="xs:boolean" use="required"/>
                        <xs:attribute name="Itinerary" type="xs:boolean" use="required"/>
                        <xs:attribute name="PassengerReceipt" type="xs:boolean" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="Ticket" minOccurs="0">
                      <xs:complexType>
                        <xs:attribute name="Action" type="xs:string" use="optional"/>
                        <xs:attribute name="Type" type="xs:string" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="PricingQualifiers" minOccurs="0">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="ItineraryOptions" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="Segment" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="EndNumber" type="xs:integer" use="optional"/>
                              <xs:attribute name="Number" type="xs:integer" use="required"/>
                            </xs:complexType>
                          </xs:element>
                          <xs:element name="SideTrip" minOccurs="0">
                            <xs:complexType>
                              <xs:attribute name="EndNumber" type="xs:integer" use="optional"/>
                              <xs:attribute name="Number" type="xs:integer" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="NameSelect" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="EndNameNumber" type="xs:string" use="optional"/>
                        <xs:attribute name="NameNumber" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PhaseIV" minOccurs="0" maxOccurs="7">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="NameSelect" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:attribute name="EndNameNumber" type="xs:string" use="optional"/>
                              <xs:attribute name="NameNumber" type="xs:string" use="required"/>
                            </xs:complexType>
                          </xs:element>
                        </xs:sequence>
                        <xs:attribute name="Number" type="xs:integer" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="PriceQuote" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="EndNumber" type="xs:integer" use="optional"/>
                        <xs:attribute name="Number" type="xs:integer" use="optional"/>
                        <xs:attribute name="ReissueNumber" type="xs:integer" use="optional"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="NumResponses" type="xs:integer" use="required"/>
      <xs:attribute name="ReturnHostCommand" type="xs:boolean" use="optional"/>
      <xs:attribute name="TimeStamp" type="xs:dateTime" use="optional"/>
      <xs:attribute name="Version" type="xs:string" fixed="2.0.0" use="required"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/sws_common.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:simpleType name="date">
    <xs:annotation>
      <xs:documentation>A simple date type. Allows specifying a date without a year. Accepted formats: "yyyy-mm-dd" or "mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateTime">
    <xs:annotation>
      <xs:documentation>A date time type that forces both date and time to be specified. A year and seconds are allowed to be ommited. Example formats: "yyyy-mm-ddThh:mm:ss", "mm-ddThh:mm:ss", "mm-ddThh:mm", "yyyy-mm-ddThh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDate">
    <xs:annotation>
      <xs:documentation>A full date type. Accepted format: "yyyy-mm-dd"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:date">
      <xs:pattern value="\d{4}-\d{2}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="expireDate">
    <xs:annotation>
      <xs:documentation>A type representing credit card expiration date. Accepted format: "yyyy-mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:gYearMonth">
      <xs:pattern value="\d{4}-\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="dateOrTime">
    <xs:annotation>
      <xs:documentation>Allows all combinations of date and time</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="((((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))T(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}))|(((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-9])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-30)))|(((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))|(([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2})"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullDateTime">
    <xs:annotation>
      <xs:documentation>A full dateTime type. Accepted format: "yyyy-mm-ddThh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:dateTime">
      <xs:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="time">
    <xs:annotation>
      <xs:documentation>A simple time type. Seconds can be omitted, since those values are not propagated to the Sabre backend systems. Accepted formats: "hh:mm:ss" or "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="shortTime">
    <xs:annotation>
      <xs:documentation>A short time type, that does not allow specifying seconds. Accepted format: "hh:mm"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9])"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="fullTime">
    <xs:annotation>
      <xs:documentation>A full time type. Accepted format: "hh:mm:ss"</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:time">
      <xs:pattern value="\d{2}:\d{2}:\d{2}"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/AirTicketLLS2.0.0RS.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://webservices.sabre.com/sabreXML/2011/10" elementFormDefault="qualified" xmlns:sws="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:stl="http://services.sabre.com/STL/v01">
  <xs:import namespace="http://services.sabre.com/STL/v01" schemaLocation="STL_For_SabreProtocol_v.1.2.0.xsd"/>
  <xs:include schemaLocation="sws_common.xsd"/>
  <xs:element name="AirTicketRS">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="stl:ApplicationResults"/>
        <xs:element name="Text" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
      </xs:sequence>
      <xs:attribute name="Version" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_For_SabreProtocol_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://services.sabre.com/STL/v01" xmlns="http://services.sabre.com/STL/v01" xmlns:STL="http://services.sabre.com/STL/v01" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added ShortText to SystemSpecificResults.
  		
  		May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace

		Created: April 21, 2011
		Description: This schema is the minimal Sabre Type Library (STL) schema needed for the Sabre SOAP Envelope schema to
		identify the STL_Payload  substitution group head element and type to be extended by message schemas..

		Copyright Sabre 2011
		The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only with the written permission of Sabre or in accordance with the terms and conditions stipulated in theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://services.sabre.com/STL_Header/v120" schemaLocation="STL_Header_v.1.2.0.xsd"/>
  <xsd:element name="STL_Payload" type="STL_Payload" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Create all message root elements as member of the substitution group with the element as the head.
				Global message types must be defined as an extension of the STL_Payload type.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="STL_Payload">
    <xsd:annotation>
      <xsd:documentation>All message roots should be created as an extension of this base type. Global message elements
				must declare they are a member of the STL_Payload substitution group. This type may be used when an empty payload is
				needed for error handling.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="ApplicationResults" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="version">
      <xsd:annotation>
        <xsd:documentation>Version of the payload message.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1"/>
          <xsd:maxLength value="255"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  <!--- Results and Problem Information components.-->
  <xsd:element name="Results" type="Results" abstract="true">
    <xsd:annotation>
      <xsd:documentation>Results is an abstract type to be used as a substitution group head.
				ApplicationResults is an example of its intended usage.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="Results"></xsd:complexType>
  <xsd:element name="ApplicationResults" type="ApplicationResults" substitutionGroup="Results">
    <xsd:annotation>
      <xsd:documentation>ApplicationResults can be used anywhere where Results is referenced, specifically as
				the contents of a Sabre SOAP Fault/detail element.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="ApplicationResults">
    <xsd:complexContent>
      <xsd:extension base="Results">
        <xsd:sequence>
          <xsd:element name="Success" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Error" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
          <xsd:element name="Warning" type="ProblemInformation" minOccurs="0" maxOccurs="99"/>
        </xsd:sequence>
        <xsd:attribute name="status" type="stlh:CompletionCodes" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="ProblemInformation" type="ProblemInformation"/>
  <xsd:complexType name="ProblemInformation">
    <xsd:sequence>
      <xsd:element name="SystemSpecificResults" type="SystemSpecificResults" minOccurs="0" maxOccurs="99"/>
    </xsd:sequence>
    <xsd:attribute name="type" type="stlh:ErrorType">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="SystemSpecificResults">
    <xsd:sequence>
      <xsd:element name="HostCommand" type="HostCommand" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Host system command run to create this result.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="stlh:Message.Condition" minOccurs="0" maxOccurs="99">
        <xsd:annotation>
          <xsd:documentation>Application specific code and Message. A textual description to provide more 
					information about the specific condition, warning or error  with code attribute as numeric value.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="stlh:Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Element" type="stlh:Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute may identify an unknown or misspelled tag that caused 
					an error in processing. It is recommended that the Tag attribute use XPath notation to identify the 
					location of a tag in the event that more than one tag of the same name is present in the document. 
					Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="RecordID" type="stlh:Identifier" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute allows for batch processing and the identification of the 
					record that failed amongst a group of records. This value may contain a concatenation of a unique failed 
					transaction ID with specific record(s) associated with that transaction.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="DocURL" type="xsd:anyURI" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If present, this attribute refers to an online description of the error that occurred.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="HostCommand">
    <xsd:simpleContent>
      <xsd:extension base="stlh:Text.Long">
        <xsd:attribute name="LNIATA" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/STL_Header_v.1.2.0.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://services.sabre.com/STL_Header/v120" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:stlh="http://services.sabre.com/STL_Header/v120" xmlns="http://services.sabre.com/STL_Header/v120">
  <xsd:annotation>
    <xsd:documentation>October 11, 2011 - added key to trace attributes.
			
			August 8 - added HostCommand to system specific results.
			
		  	May 25, 2011 - version 1.1.1 - dmh - moved ApplicationResults and Results to STL namespace
		
			Created: April 21, 2011
			Description: This schema is a standalone schema that defines Header metadata 
			structures that are independent of the payload schema.
			
			Copyright Sabre 2011
			The copyright to the computer program(s) hereinis the property of Sabre. The program(s) may be used and/or copied only
			with the written permission of Sabre or in accordance with the terms and conditions stipulated in
			theagreement/contract under which the program(s) have been supplied.</xsd:documentation>
  </xsd:annotation>
  <xsd:element name="Diagnostics" type="Diagnostics"/>
  <xsd:element name="Identification" type="Identification"/>
  <xsd:element name="ResultSummary" type="ResultSummary"/>
  <xsd:element name="Security" type="Security"/>
  <xsd:element name="Service" type="Service"/>
  <xsd:element name="Traces" type="Traces"/>
  <xsd:element name="SabreHeader" type="SabreHeader"/>
  <xsd:complexType name="SabreHeader">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:group name="SabreHeaderGroup">
    <xsd:sequence>
      <xsd:element ref="Service"/>
      <xsd:element ref="Identification"/>
      <xsd:element ref="ResultSummary" minOccurs="0"/>
      <xsd:element ref="Security" minOccurs="0"/>
      <xsd:element ref="Traces" minOccurs="0"/>
      <xsd:element ref="Diagnostics" minOccurs="0"/>
    </xsd:sequence>
  </xsd:group>
  <xsd:complexType name="DiagnosticResults">
    <xsd:sequence>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Diagnostics">
    <xsd:sequence>
      <xsd:element name="Level" type="DiagnosticLevels" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Describes the level of diagnostic data requested or provided.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Data" type="Text.Long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Block of diagnostic data included in request or returned in the response.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Diagnostic" type="DiagnosticResults" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Diagnostic data. Must be defined in a differrent namespace as the header.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identification">
    <xsd:annotation>
      <xsd:documentation>The Identification metadata uniquely identify each message instance.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CustomerID" type="PseudoCityCodeOrOAC" minOccurs="1"/>
      <xsd:element name="CustomerAppID" type="stlh:Text.Short" minOccurs="0"/>
      <xsd:element name="ConversationID" type="TrackingID" minOccurs="1">
        <xsd:annotation>
          <xsd:documentation>The ConversationId element is a string identifying the set of related messages that make up a
						conversation between two or more Parties. The Party initiating a conversation determines the value of
						the ConversationId element that shall be reflected in all messages pertaining to that
						conversation. It remains constant for all messages within a conversation.
						Service providers are expected to increment the optional TrackingID integer attribute when present.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MessageID" type="Identifier" minOccurs="1"/>
      <xsd:element name="TimeStamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Identifier.System">
    <xsd:annotation>
      <xsd:documentation>System identifier used to uniquily identify the specific system.
 	"Source" is used to return the application name responsible for fulfilling the particular request transaction.
	"ApplicationInstance" is used to return the application instance responsible for fulfilling the particular request transaction.
	"Cluster" is used to return the application cluster responsible for fulfilling the particular request transaction.
	"HostName" is used to return the particular server name responsible for fulfilling the particular request transaction.
	Â Example: Source ApplicationInstance="PROD1" Cluster="PROD TPF SCC" HostName="PSS" TPF Source</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="instance" type="Identifier"/>
        <xsd:attribute name="cluster" type="Identifier"/>
        <xsd:attribute name="host" type="Identifier"/>
        <xsd:attribute name="uri" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The uri representing the endpoint reference by which this system can be accessed.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Message.Condition">
    <xsd:annotation>
      <xsd:documentation>Free text and code provided by the application or system that detected the condition. 
			Contents may be anything the system detecting the error chooses to convey. Used by service consumers.  
			Codes and/or messages should be agreed upon by service users. 
			Do not use for structured data, use parameters instead.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Text.Long">
        <xsd:attribute name="code" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="ProblemBase">
    <xsd:sequence></xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ProblemSummary">
    <xsd:sequence>
      <xsd:element name="Source" type="Identifier.System" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The system that the reporting system deemed to be the cause of the problem. If omitted, the
						reporting system is also the source of the problem. For application errors, the element may
						identify a system the application is dependent upon that failed to respond. For validation
						errors this may identify the service consumer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReportingSystem" type="Identifier.System">
        <xsd:annotation>
          <xsd:documentation>The system that created the results record. If the Source system identifier is omitted, the
						system identified here both was the cause of the problem and created the result record.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Message" type="Message.Condition" minOccurs="0" maxOccurs="1">
        <xsd:annotation>
          <xsd:documentation>An informative code and message that describes the results. Note: the message code and text must
						NOT be required to process to understand retry/compensate status.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ShortText" type="Text.Short" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An abbreviated version of the error in textual format.
						This value should be the same as in the SystemSpecificResults in the body.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="type" type="ErrorType" use="required">
      <xsd:annotation>
        <xsd:documentation>An indication of the source of error when processing the request.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="status" type="CompletionCodes" use="required">
      <xsd:annotation>
        <xsd:documentation>Impact of the error on process completion.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="timeStamp" type="xsd:dateTime"/>
  </xsd:complexType>
  <xsd:complexType name="ResultSummary">
    <xsd:choice>
      <xsd:element name="Success" type="EmptyElement">
        <xsd:annotation>
          <xsd:documentation>Success indicates that the request was
						processed successfully.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Error" type="ProblemSummary"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Security">
    <xsd:annotation>
      <xsd:documentation>Header records no longer contain user credentials (username/password) as these are needed only for 
     		 SessionCreateRQ in which the credentials should be in the payload.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="SecurityToken" type="Text.Long"/>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="Service">
    <xsd:simpleContent>
      <xsd:extension base="Text.Short">
        <xsd:attribute name="operation" type="Text.Short"/>
        <xsd:attribute name="version" type="Text.Short"/>
        <xsd:attribute name="ttl" type="xsd:nonNegativeInteger"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="Traces">
    <xsd:sequence>
      <xsd:element name="Trace" type="TraceRecord" minOccurs="0" maxOccurs="999"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="TraceRecord">
    <xsd:annotation>
      <xsd:documentation>Record for all systems (consumer, proxies and gateways, providers) to use to trace the message. 
			The value is the common system name.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="key" type="Text.Long">
          <xsd:annotation>
            <xsd:documentation>The key attribute is similar to ConversationID but is provided by the service requestor or entrypoint gateway and 
							must be unique across all Sabre gateways. Each gateway instance must prepend the ID value with its unique system identifier. 
							Internal service consumers must provide this value which may be their unique system identifier concantanated 
							with the ConversationID.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="start" type="xsd:dateTime" use="required">
          <xsd:annotation>
            <xsd:documentation>When the system stated processing the message.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="end" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation>When the system completed processing the message. 
						Example: 2002-10-10T12:00:00+05:00.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="appInstance" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application instance involved in the particular transaction. 
						For example: PROD1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="cluster" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The application server cluster involved in the particular transaction. 
						Example: PROD TPFC SCC</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="host" type="Identifier">
          <xsd:annotation>
            <xsd:documentation>The server name involved in the particular transaction. 
						Example: PSS</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="targetURI" type="xsd:anyURI">
          <xsd:annotation>
            <xsd:documentation>The targetURI is the endpoint address this system sent the message to. 
						For ServiceProviders it should be the abstract service address which is the address used by 
						registries to look up the actual service endpoint URI. The endpoint address may be a queue
						name (MOM service name).</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="role" type="TraceRole"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:complexType name="TrackingID">
    <xsd:annotation>
      <xsd:documentation>Tracking Identifier is an identifier intended for use to a set of related items and provide an 
			optional sequence number for the items.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="Identifier">
        <xsd:attribute name="seq" type="xsd:integer"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="CompletionCodes">
    <xsd:restriction base="xsd:token">
      <xsd:enumeration value="Complete"/>
      <xsd:enumeration value="Incomplete"/>
      <xsd:enumeration value="NotProcessed"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="DiagnosticLevels">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Mock">
        <xsd:annotation>
          <xsd:documentation>Return a sample message without invoking service logic.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Simulate">
        <xsd:annotation>
          <xsd:documentation>Compute response without making changes to service data, state or status.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="EmptyElement">
    <xsd:annotation>
      <xsd:documentation>Elements of this type are used for indicators whose presense denotes the 
				condition described by their name. They  have no content nor any attributes. 
				For example, an empty Success element denote that the process was successfully completed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ErrorType">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="Transport">
        <xsd:annotation>
          <xsd:documentation>Transport errors occur when the infrastructure systems are unable to deliver the request message
						to the service provider or the service response is not delivered within the allotted time frame.
						These errors are always detected by the transport infrastructure systems. The detecting system
						should indicate the need for compensation in Severity and Status values. These errors may be
						transient and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Validation">
        <xsd:annotation>
          <xsd:documentation>Validation errors occur when the message is determined to not conform to the interface
						specifications. For example, it is an validation error when the request violates security
						requirements or the message is not schema valid according to the service interface schema. These
						errors may be detected by either the transport or application systems. Applications must not
						make changes that will require compensation when validation errors are detected. These errors
						are caused by the structure or content of the request and consumers should not attempt to retry
						their unmodified request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="Application">
        <xsd:annotation>
          <xsd:documentation>Application errors occur when a valid message is delivered to the service provider yet the
						request cannot be completely processed. This can occur when the provider has technical issues
						such as internal exceptions, database locks, or connectivity failure to a system it is dependent
						upon. These errors are always detected by the application system. The application should
						indicate the need for compensation in Severity and Status values. These errors may be transient
						and consumers may choose to retry their request.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="BusinessLogic">
        <xsd:annotation>
          <xsd:documentation>Business logic errors occur when a service provider is able to process the request message but
						the request violates pre-condition or internal application business logic. Example business
						logic errors are a request for flight information but the flight does not exist or a request to
						reserve more seats than are on the aircraft. The response message will likely provide details
						about the error condition and may or may not use a standard error response record. Business
						logic errors are always detected by the application system. Applications must not make changes
						that will require compensation when business logic errors are detected. These errors are caused
						by content of the request; consumers should only attempt to retry their unmodified request if
						the business condition described in the application specific response indicates the condition
						may be transient. Service providers should use the ErrorMessage and code attribute to describe
						the business condition and document those conditions in their service contract.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Identifier">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="PseudoCityCodeOrOAC">
    <xsd:annotation>
      <xsd:documentation>Customer Identifier assigned to office or agency or location. Commonly use values are 
			Psuedo City Code - 3 to 16 characters or the Sabre Office accounting code (OAC) which can be upto 25 characters.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Long">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Long - A field text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="0"/>
      <xsd:maxLength value="4096"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Text.Short">
    <xsd:annotation>
      <xsd:documentation>Same as STL Text.Short - A field of text characters and no other constraints.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="128"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TraceRole">
    <xsd:restriction base="xsd:NMTOKEN">
      <xsd:enumeration value="consumer">
        <xsd:annotation>
          <xsd:documentation>the system that initiated the service request and will be the ultimate consumer 
					of the service results.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="provider">
        <xsd:annotation>
          <xsd:documentation>System that performs the service operation defined in the service interface. 
					For RQ/RS exchange patterns, the provider reads the request message, applies business logic and 
					returns a response.</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="gateway"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/msg-header-2_0.xsd</con:url><con:content><![CDATA[<!--Some parsers may require explicit declaration of 'xmlns:xml="http://www.w3.org/XML/1998/namespace"'. 
     In that case, a copy of this schema augmented with the above declaration should be cached and used
     for the purpose of schema validation on ebXML messages.-->
<schema targetNamespace="http://www.ebxml.org/namespaces/messageHeader" elementFormDefault="qualified" attributeFormDefault="qualified" version="2.0c" xmlns:tns="http://www.ebxml.org/namespaces/messageHeader" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="xmldsig-core-schema.xsd"/>
  <import namespace="http://www.w3.org/1999/xlink" schemaLocation="xlink.xsd"/>
  <import namespace="http://schemas.xmlsoap.org/soap/envelope/" schemaLocation="envelope.xsd"/>
  <import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <!--MANIFEST, for use in soap:Body element-->
  <element name="Manifest">
    <complexType>
      <sequence>
        <element ref="tns:Reference" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <element name="Reference">
    <complexType>
      <sequence>
        <element ref="tns:Schema" minOccurs="0" maxOccurs="unbounded"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute ref="xlink:type" fixed="simple"/>
      <attribute ref="xlink:href" use="required"/>
      <attribute ref="xlink:role"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <element name="Schema">
    <complexType>
      <attribute name="location" type="anyURI" use="required"/>
      <attribute name="version" type="tns:non-empty-string"/>
    </complexType>
  </element>
  <!--MESSAGEHEADER, for use in soap:Header element-->
  <element name="MessageHeader">
    <complexType>
      <sequence>
        <element ref="tns:From"/>
        <element ref="tns:To"/>
        <element ref="tns:CPAId"/>
        <element ref="tns:ConversationId"/>
        <element ref="tns:Service"/>
        <element ref="tns:Action"/>
        <element ref="tns:MessageData"/>
        <element ref="tns:DuplicateElimination" minOccurs="0"/>
        <element ref="tns:Description" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="CPAId" type="tns:non-empty-string"/>
  <element name="ConversationId" type="tns:non-empty-string"/>
  <element name="Service">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="Action" type="tns:non-empty-string"/>
  <element name="MessageData">
    <complexType>
      <sequence>
        <element ref="tns:MessageId"/>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId" minOccurs="0"/>
        <element ref="tns:TimeToLive" minOccurs="0"/>
        <element ref="tns:Timeout" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="MessageId" type="tns:non-empty-string"/>
  <element name="Timeout" type="nonNegativeInteger"/>
  <element name="TimeToLive" type="dateTime"/>
  <element name="DuplicateElimination" type="anyType"/>
  <!--SYNC REPLY, for use in soap:Header element-->
  <element name="SyncReply">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor" use="required"/>
    </complexType>
  </element>
  <!--MESSAGE ORDER, for use in soap:Header element-->
  <element name="MessageOrder">
    <complexType>
      <sequence>
        <element ref="tns:SequenceNumber"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
    </complexType>
  </element>
  <element name="SequenceNumber" type="tns:sequenceNumber.type"/>
  <!--ACK REQUESTED, for use in soap:Header element-->
  <element name="AckRequested">
    <complexType>
      <sequence>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
      <attribute name="signed" type="boolean" use="required"/>
    </complexType>
  </element>
  <!--ACKNOWLEDGMENT, for use in soap:Header element-->
  <element name="Acknowledgment">
    <complexType>
      <sequence>
        <element ref="tns:Timestamp"/>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:From" minOccurs="0"/>
        <element ref="tns:Reference" minOccurs="0" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute ref="soap:actor"/>
    </complexType>
  </element>
  <!--ERROR LIST, for use in soap:Header element-->
  <element name="ErrorList">
    <complexType>
      <sequence>
        <element ref="tns:Error" maxOccurs="unbounded"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:headerExtension.grp"/>
      <attribute name="highestSeverity" type="tns:severity.type" use="required"/>
    </complexType>
  </element>
  <element name="Error">
    <complexType>
      <sequence>
        <element ref="tns:Description" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attribute ref="tns:id"/>
      <attribute name="codeContext" type="anyURI" default="urn:oasis:names:tc:ebxml-msg:service:errors"/>
      <attribute name="errorCode" type="tns:non-empty-string" use="required"/>
      <attribute name="severity" type="tns:severity.type" use="required"/>
      <attribute name="location" type="tns:non-empty-string"/>
      <anyAttribute namespace="##other" processContents="lax"/>
    </complexType>
  </element>
  <!--STATUS RESPONSE, for use in soap:Body element-->
  <element name="StatusResponse">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <element ref="tns:Timestamp" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
      <attribute name="messageStatus" type="tns:messageStatus.type" use="required"/>
    </complexType>
  </element>
  <!--STATUS REQUEST, for use in soap:Body element-->
  <element name="StatusRequest">
    <complexType>
      <sequence>
        <element ref="tns:RefToMessageId"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <attributeGroup ref="tns:bodyExtension.grp"/>
    </complexType>
  </element>
  <!--COMMON TYPES-->
  <complexType name="sequenceNumber.type">
    <simpleContent>
      <extension base="nonNegativeInteger">
        <attribute name="status" type="tns:status.type" default="Continue"/>
      </extension>
    </simpleContent>
  </complexType>
  <simpleType name="status.type">
    <restriction base="NMTOKEN">
      <enumeration value="Reset"/>
      <enumeration value="Continue"/>
    </restriction>
  </simpleType>
  <simpleType name="messageStatus.type">
    <restriction base="NMTOKEN">
      <enumeration value="UnAuthorized"/>
      <enumeration value="NotRecognized"/>
      <enumeration value="Received"/>
      <enumeration value="Processed"/>
      <enumeration value="Forwarded"/>
    </restriction>
  </simpleType>
  <simpleType name="non-empty-string">
    <restriction base="string">
      <minLength value="1"/>
    </restriction>
  </simpleType>
  <simpleType name="severity.type">
    <restriction base="NMTOKEN">
      <enumeration value="Warning"/>
      <enumeration value="Error"/>
    </restriction>
  </simpleType>
  <!--COMMON ATTRIBUTES and ATTRIBUTE GROUPS-->
  <attribute name="id" type="ID"/>
  <attribute name="version" type="tns:non-empty-string"/>
  <attributeGroup name="headerExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
    <!--attribute ref="soap:mustUnderstand" use="optional"/-->
  </attributeGroup>
  <attributeGroup name="bodyExtension.grp">
    <attribute ref="tns:id"/>
    <attribute ref="tns:version" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </attributeGroup>
  <!--COMMON ELEMENTS-->
  <element name="PartyId">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="type" type="tns:non-empty-string"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="To">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="From">
    <complexType>
      <sequence>
        <element ref="tns:PartyId" maxOccurs="unbounded"/>
        <element name="Role" type="tns:non-empty-string" minOccurs="0"/>
      </sequence>
    </complexType>
  </element>
  <element name="Description">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute ref="xml:lang" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  <element name="RefToMessageId" type="tns:non-empty-string"/>
  <element name="Timestamp" type="string"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" elementFormDefault="qualified" version="0.1" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" type="ds:HMACOutputLengthType" minOccurs="0"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <element name="XPath" type="string"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <sequence>
      <element name="PGPKeyID" type="base64Binary"/>
      <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <attribute name="Encoding" type="anyURI" use="optional"/>
    <!--add a grep facet-->
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xlink.xsd</con:url><con:content><![CDATA[<xsd:schema targetNamespace="http://www.w3.org/1999/xlink" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink">
  <xsd:attribute name="type">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="simple"/>
        <xsd:enumeration value="extended"/>
        <xsd:enumeration value="locator"/>
        <xsd:enumeration value="arc"/>
        <xsd:enumeration value="resource"/>
        <xsd:enumeration value="title"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="role" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:anyURI"></xsd:attribute>
  <xsd:attribute name="title" type="xsd:string"></xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN"></xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:NMTOKEN">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/envelope.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tns="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Envelope, header and body-->
  <xs:element name="Envelope" type="tns:Envelope"/>
  <xs:complexType name="Envelope">
    <xs:sequence>
      <xs:element ref="tns:Header" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element ref="tns:Body"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Header" type="tns:Header"/>
  <xs:complexType name="Header">
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:element name="Body" type="tns:Body"/>
  <xs:complexType name="Body">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax">
      <xs:annotation>
        <xs:documentation>Prose in the spec does not specify that attributes are allowed on the Body element</xs:documentation>
      </xs:annotation>
    </xs:anyAttribute>
  </xs:complexType>
  <!--Global Attributes.  The following attributes are intended to be usable via qualified attribute names on any complex type referencing them.-->
  <xs:attribute name="mustUnderstand">
    <xs:simpleType>
      <xs:restriction base="xs:boolean">
        <xs:pattern value="0|1"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="actor" type="xs:anyURI"/>
  <xs:simpleType name="encodingStyle">
    <xs:annotation>
      <xs:documentation>'encodingStyle' indicates any canonicalization conventions followed in the contents of the containing element.  For example, the value 'http://schemas.xmlsoap.org/soap/encoding/' indicates the pattern described in SOAP specification</xs:documentation>
    </xs:annotation>
    <xs:list itemType="xs:anyURI"/>
  </xs:simpleType>
  <xs:attribute name="encodingStyle" type="tns:encodingStyle"/>
  <xs:attributeGroup name="encodingStyle">
    <xs:attribute ref="tns:encodingStyle"/>
  </xs:attributeGroup>
  <xs:element name="Fault" type="tns:Fault"/>
  <xs:complexType name="Fault" final="extension">
    <xs:annotation>
      <xs:documentation>Fault reporting structure</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="faultcode" type="xs:QName"/>
      <xs:element name="faultstring" type="xs:string"/>
      <xs:element name="faultactor" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="detail" type="tns:detail" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="detail">
    <xs:sequence>
      <xs:any namespace="##any" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##any" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/xml.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:documentation>See http://www.w3.org/XML/1998/namespace.html and
   http://www.w3.org/TR/REC-xml for information about this namespace.</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>This schema defines attributes and an attribute group
        suitable for use by
        schemas wishing to allow xml:base, xml:lang or xml:space attributes
        on elements they define.

        To enable this, such a schema must import this schema
        for the XML namespace, e.g. as follows:
        &lt;schema . . .>
         . . .
         &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                    schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

        Subsequently, qualified reference to any of the attributes
        or the group defined below will have the desired effect, e.g.

        &lt;type . . .>
         . . .
         &lt;attributeGroup ref="xml:specialAttrs"/>
 
         will define a type which will schema-validate an instance
         element with any of those attributes</xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>In keeping with the XML Schema WG's standard versioning
   policy, this schema document will persist at
   http://www.w3.org/2001/03/xml.xsd.
   At the date of issue it can also be found at
   http://www.w3.org/2001/xml.xsd.
   The schema document at that URI may however change in the future,
   in order to remain compatible with the latest version of XML Schema
   itself.  In other words, if the XML Schema namespace changes, the version
   of this document at
   http://www.w3.org/2001/xml.xsd will change
   accordingly; the version at
   http://www.w3.org/2001/03/xml.xsd will not change.</xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang" type="xs:language">
    <xs:annotation>
      <xs:documentation>In due course, we should install the relevant ISO 2- and 3-letter
         codes as the enumerated possible values . . .</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="space" default="preserve">
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>See http://www.w3.org/TR/xmlbase/ for
                     information about this attribute.</xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
  </xs:attributeGroup>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://webservices.sabre.com/wsdl/tpfc/wsse.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="http://schemas.xmlsoap.org/ws/2002/12/secext" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:app2="http://schemas.xmlsoap.org/ws/2002/12/secext">
  <xs:element name="Security" msdata:Prefix="wsse">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="UsernameToken" msdata:Prefix="wsse" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="Password" type="xs:string" minOccurs="0" msdata:Prefix="wsse"/>
              <xs:element name="NewPassword" type="xs:string" minOccurs="0" maxOccurs="2" msdata:Prefix="wsse"/>
              <xs:element name="Organization" type="xs:string" form="unqualified" minOccurs="0"/>
              <xs:element name="Domain" type="xs:string" form="unqualified" minOccurs="0"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SabreAth" msdata:Prefix="wsse" minOccurs="0" type="xs:string"/>
        <element name="BinarySecurityToken" type="xs:string" minOccurs="0" msdata:Prefix="wsse">
          <!--xs:complexType>
						<xs:attribute name="EncodingType" type="xs:string" use="optional"/>
						<xs:attribute name="valueType" type="xs:string" use="optional"/>						
					</xs:complexType-->
        </element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint></con:endpoints><con:operation isOneWay="false" action="AirTicketLLSRQ" name="AirTicketLLSRQ" bindingOperationName="AirTicketRQ" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional" id="1211d42f-98b8-4ffa-8572-67eb46aa5fec"><con:settings/><con:call name="AirTicketLLSRQ" id="88d98642-6a68-49d5-97c3-b6e785e13107"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>ipcc</eb:CPAId>
         <eb:ConversationId>conversationID</eb:ConversationId>
         <eb:Service eb:type="OTA">AirTicketLLSRQ</eb:Service>
         <eb:Action>AirTicketLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/RESG!ICESMSLB\/RES.LB!-4210745990415812605!1154630!0</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <AirTicketRQ NumResponses="1" Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10">
         <OptionalQualifiers>
            <FlightQualifiers>
               <VendorPrefs>
                  <Airline Code="XX"/>
               </VendorPrefs>
            </FlightQualifiers>
            <MiscQualifiers>
               <Ticket Type="ETR"/>
            </MiscQualifiers>
            <PricingQualifiers>
               <PriceQuote Number="1"/>
            </PricingQualifiers>
         </OptionalQualifiers>
      </AirTicketRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="AirTicketLLSRQ"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite name="SWS Sample Workflows" id="dce4d556-96b1-4b00-a824-f7f44c102604"><con:description>The Test Cases in this Test Suite are based on the Sample 1.x TPF Connector-Based Air Workflow in the
Sabre Web Services Developer Resource Center (DRC) Sample Workflows asset.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Sample Air Workflow" searchProperties="true" id="ebefe9f6-5284-47b3-b323-c353ce8b8507"><con:description>This test case (based on Sample 1.x TPF Connector-Based Air Workflow) uses a mix of 1.x and 2.x SWS
to book and price a pre-selected itinerary (see Test Properties) and build a basic PNR.  The transaction
is ignored and no PNR is created since the project books and prices live inventory.</con:description><con:settings/><con:testStep type="properties" name="Test Properties" id="b0e6aaa2-0848-48fb-bed0-fb02d861a9c2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>GivenName</con:name><con:value>RICHARD</con:value></con:property><con:property><con:name>Surname</con:name><con:value>FEYNMAN</con:value></con:property><con:property><con:name>eMail_Address</con:name><con:value>RICHARD.FEYNMAN@CALTECH.EDU</con:value></con:property><con:property><con:name>OriginCity</con:name><con:value>DFW</con:value></con:property><con:property><con:name>DestinationCity</con:name><con:value>LAX</con:value></con:property><con:property><con:name>DepartureDateTime</con:name><con:value>2015-02-23T09:15:00</con:value></con:property><con:property><con:name>DepartureFlightNum</con:name><con:value>2419</con:value></con:property><con:property><con:name>DepartureAirline</con:name><con:value>AA</con:value></con:property><con:property><con:name>ReturnDateTime</con:name><con:value>2015-02-27T15:15:00</con:value></con:property><con:property><con:name>ReturnFlightNum</con:name><con:value>2433</con:value></con:property><con:property><con:name>ReturnAirline</con:name><con:value>AA</con:value></con:property><con:property><con:name>ClassOfService</con:name><con:value>Y</con:value></con:property><con:property><con:name>Future Queue</con:name><con:value>499</con:value></con:property><con:property><con:name>FutureQueueDateTime</con:name><con:value>2015-03-31T06:00:00</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="SessionCreateRQ" id="1df0ac74-5603-49b0-a32e-9943d1315e89"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCreateSoapBinding</con:interface><con:operation>SessionCreateRQ</con:operation><con:request name="SessionCreateRQ" id="9a24ce23-d892-4e6d-86cb-8e5e44caf6ad"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">999999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCreateRQ</eb:Service>
         <eb:Action>SessionCreateRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1000</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:00</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:UsernameToken>
            <wsse:Username>${#Project#Username}</wsse:Username>
            <wsse:Password>${#Project#Password}</wsse:Password>
            <Organization>${#Project#Organization}</Organization>
            <Domain>${#Project#Domain}</Domain>
         </wsse:UsernameToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCreateRQ>
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
      </SessionCreateRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="645c3aca-2da0-46e5-9e36-efc54ea0e0e7"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="f0e1e91b-e390-4063-8b1b-ae377cf98191"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="OTA" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer Security Token" id="21469c62-1290-47fa-96ab-fa789451182a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Persist Security Token</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SessionCreateRQ</con:sourceStep><con:sourcePath>declare namespace wsse='http://schemas.xmlsoap.org/ws/2002/12/secext';
//wsse:BinarySecurityToken</con:sourcePath><con:targetType>SecurityToken</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="TravelItineraryAddInfoLLSRQ" id="52fd8427-2a77-4ca6-ae1c-3428e34f3493"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TravelItineraryAddInfoSoapBinding</con:interface><con:operation>TravelItineraryAddInfoLLSRQ</con:operation><con:request name="TravelItineraryAddInfoLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="f9e3d9a9-5592-4e95-a0c7-5c24a578acc1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">TravelItineraryAddInfoLLSRQ</eb:Service>
         <eb:Action>TravelItineraryAddInfoLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <TravelItineraryAddInfoRQ Version="1.9.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
         <CustomerInfo>
            <PersonName TravelerRefNumber="1.1">
               <GivenName>${Test Properties#GivenName}</GivenName>
               <Surname>${Test Properties#Surname}</Surname>
               <NameReference Text="REF1"/>
            </PersonName>
            <Telephone AreaCityCode="817" PhoneNumber="555-1212" PhoneUseType="H" TravelerRefNumber="1.1"/>
            <Email EmailAddress="${Test Properties#eMail_Address}" TravelerRefNumber="1.1"/>
            <CustomerIdentifier Identifier="1234567890"/>
         </CustomerInfo>
         <AgencyInfo>
            <Address>
               <TPA_Extensions>
                  <AgencyName>SABRE TRAVEL</AgencyName>
               </TPA_Extensions>
               <StreetNmbr>3150 SABRE DRIVE</StreetNmbr>
               <CityName>SOUTHLAKE</CityName>
               <PostalCode>76092</PostalCode>
               <StateCountyProv StateCode="TX"/>
               <CountryName Code="US"/>
            </Address>
            <Telephone AreaCityCode="817" PhoneNumber="555-1212" PhoneUseType="A"/>
            <Ticketing TicketType="7T-"/>
         </AgencyInfo>
      </TravelItineraryAddInfoRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="1528d721-90a1-407a-aab6-7ce13451d806"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="0e3de673-80f6-4fd7-bfcd-0acbe81b8914"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="TravelItineraryAddInfoLLSRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OTA_AirBookLLSRQ" id="bca2712a-0215-4331-8473-dc8317c46a78"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OTA_AirBookSoapBinding</con:interface><con:operation>OTA_AirBookRQ</con:operation><con:request name="OTA_AirBookLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="9c62ab78-755c-4c01-8025-7274d0c06790"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">OTA_AirBookLLSRQ</eb:Service>
         <eb:Action>OTA_AirBookLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <OTA_AirBookRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <OriginDestinationInformation>
            <FlightSegment DepartureDateTime="${Test Properties#DepartureDateTime}" FlightNumber="${Test Properties#DepartureFlightNum}" NumberInParty="1" Status="NN" ResBookDesigCode="${Test Properties#ClassOfService}">
               <DestinationLocation LocationCode="${Test Properties#DestinationCity}"/>
               <MarketingAirline Code="${Test Properties#ReturnAirline}" FlightNumber="${Test Properties#DepartureFlightNum}"/>
               <OriginLocation LocationCode="${Test Properties#OriginCity}"/>
            </FlightSegment>
            <FlightSegment DepartureDateTime="${Test Properties#ReturnDateTime}" FlightNumber="${Test Properties#ReturnFlightNum}" NumberInParty="1" Status="NN" ResBookDesigCode="${Test Properties#ClassOfService}">
               <DestinationLocation LocationCode="${Test Properties#OriginCity}"/>
               <MarketingAirline Code="${Test Properties#ReturnAirline}" FlightNumber="${Test Properties#ReturnFlightNum}"/>
               <OriginLocation LocationCode="${Test Properties#DestinationCity}"/>
            </FlightSegment>
         </OriginDestinationInformation>
      </OTA_AirBookRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="5f4b9e42-b98d-45ee-9fc5-44b5e52f2e84"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="bdb3119c-807f-41bf-b866-3244f99bb375"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA_AirBookLLSRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OTA_AirPriceLLSRQ" id="de22bf3b-d3fc-4ad3-87f1-7ea87e10b7fe"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OTA_AirPriceSoapBinding</con:interface><con:operation>OTA_AirPriceRQ</con:operation><con:request name="OTA_AirPriceLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5358f008-c4df-47b7-acd9-71141c7ed34e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">OTA_AirPriceLLSRQ</eb:Service>
         <eb:Action>OTA_AirPriceLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <OTA_AirPriceRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <PriceRequestInformation Retain="true">
            <OptionalQualifiers>
               <PricingQualifiers>
                  <PassengerType Code="ADT" Quantity="1"/>
               </PricingQualifiers>
            </OptionalQualifiers>
         </PriceRequestInformation>
      </OTA_AirPriceRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="2a13c758-d7f2-4d4d-a719-30f33a528bc5"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="354249c5-2a1e-4f6a-83ba-714fdc816a92"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA_AirPriceLLSRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="MiscSegmentSellLLSRQ" id="9f098684-e670-4940-aa2a-d266cb9c4ac6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MiscSegmentSellSoapBinding</con:interface><con:operation>MiscSegmentSellLLSRQ</con:operation><con:request name="MiscSegmentSellLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="de445913-c23a-4dff-9498-8fb219b6fd96"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">MiscSegmentSellLLSRQ</eb:Service>
         <eb:Action>MiscSegmentSellLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <MiscSegmentSellRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <MiscSegment DepartureDateTime="12-31" NumberInParty="1" Status="GK" Type="OTH">
            <OriginLocation LocationCode="${Test Properties#OriginCity}"/>
            <Text>SWS TEST RETENTION SEGMENT</Text>
            <VendorPrefs>
               <Airline Code="${Test Properties#DepartureAirline}"/>
            </VendorPrefs>
         </MiscSegment>
      </MiscSegmentSellRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="baf0df0c-ca9e-4150-8f87-a31524006391"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="366f8450-3d71-4654-ba09-a55c0a5f6829"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="MiscSegmentSellLLSRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AddRemarkLLSRQ" id="ffbb15ac-aa33-46cb-8092-1b3de608f915"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AddRemarkSoapBinding</con:interface><con:operation>AddRemarkLLSRQ</con:operation><con:request name="AddRemarkLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b1d46761-ee02-4725-b6da-732027148b89"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">AddRemarkLLSRQ</eb:Service>
         <eb:Action>AddRemarkLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <AddRemarkRQ Version="1.4.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
         <BasicRemark Text="SABRE WEB SERVICES SAMPLE AIR WORKFLOW"/>
         <AlphaCodedRemark Code="S" Text="TEST ALPHA CODED REMARK"/>
         <ClientAddressRemark Text="1400 S LAMAR ST"/>
         <ClientAddressRemark Text="DALLAS TX 75215"/>
         <FOPRemark Type="CC">
            <CCInfo>
               <CreditCardVendor Code="DS"/>
               <CreditCardNumber Code="6011333333333333"/>
               <CreditCardExpiration ExpireDate="2013-12"/>
               <SuppressCCInfo Code="XN"/>
               <CardSecurity Code="1234"/>
            </CCInfo>
         </FOPRemark>
         <FutureQueuePlaceRemark DateTime="${Test Properties#FutureQueueDateTime}" PICCode="11" PseudoCityCode="${#Project#Organization}" QueueIdentifier="${Test Properties#Future Queue}"/>
      </AddRemarkRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="fcecc1ba-3f42-499d-bda2-b7ecbad6ce64"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d255ca10-3d78-41d2-902f-5ef1381b14c9"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SpecialServiceLLSRQ" id="2b34ff39-7043-4d96-ab00-d0b651c4aa8b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SpecialServiceSoapBinding</con:interface><con:operation>SpecialServiceLLSRQ</con:operation><con:request name="SpecialServiceLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="6354d135-5744-4eb8-b488-61ef48d81eee"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SpecialServiceLLSRQ</eb:Service>
         <eb:Action>SpecialServiceLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SpecialServiceRQ Version="1.5.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
         <SpecialServices>
            <SecureFlight SSRCode="DOCS" SegmentNumber="A">
               <Airline Hosted="true"/>
               <PersonName DateOfBirth="1932-02-16" Gender="M" NameNumber="1.1">
                  <GivenName>${Test Properties#GivenName}</GivenName>
                  <Surname>${Test Properties#Surname}</Surname>
               </PersonName>
            </SecureFlight>
         </SpecialServices>
      </SpecialServiceRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="97c52c71-4e28-4e10-8df5-6d5f819eb4f6"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d9a9498c-7515-45d5-8264-9cda054c15b3"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="SpecialServiceLLSRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TravelItineraryReadRQ" id="f49e2919-0036-4704-9b82-510714b54090"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TravelItineraryReadSoapBinding</con:interface><con:operation>TravelItineraryReadRQ</con:operation><con:request name="TravelItineraryReadRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="afde221c-1263-481f-ad48-b02ccd6fab40"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">99999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="Sabre">TravelItineraryReadLLSRQ</eb:Service>
         <eb:Action>TravelItineraryReadLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01Z</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59Z</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <TravelItineraryReadRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <MessagingDetails>
            <Transaction Code="PNR"/>
         </MessagingDetails>
         <!--<UniqueID ID="PNR locator"/>-->
      </TravelItineraryReadRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="096e9592-343c-46c4-93d3-de8a6952010e"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="c0f4df92-4227-4e0e-9165-08671fdf8263"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="TravelItineraryReadLLSRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="IgnoreTransactionLLSRQ" id="9ec61ab5-c27e-47ac-9745-72d49ccf21f6"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>IgnoreTransactionSoapBinding</con:interface><con:operation>IgnoreTransactionLLSRQ</con:operation><con:request name="IgnoreTransactionLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="970e5bff-229e-4cd9-a13b-155562cbeabd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="URI">clientURI.com</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="URI">webservices.sabre.com</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">IgnoreTransactionLLSRQ</eb:Service>
         <eb:Action>IgnoreTransactionLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>2001-02-15T11:15:12Z</eb:Timestamp>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <IgnoreTransactionRQ Version="2003A.TsabreXML1.0.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
         <IgnoreTransaction Ind="true"/>
      </IgnoreTransactionRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b0a171a6-a03a-46f1-bb18-0d6cd21c2720"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="https://webservices.sabre.com/websvc/IgnoreTransactionPortType/IgnoreTransactionRQRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SessionCloseRQ" id="ff953d09-ba70-4e84-99d1-6c7dd957f779"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCloseSoapBinding</con:interface><con:operation>SessionCloseRQ</con:operation><con:request name="SessionCloseRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="7839d3ab-a120-4069-8eb6-76e503c0d604"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCloseRQ</eb:Service>
         <eb:Action>SessionCloseRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCloseRQ>
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
      </SessionCloseRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="20e27c13-4a9f-4117-94bc-9bca5cb69139"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="6f7b05a8-4a32-44e7-a232-9624298ac3b2"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>SecurityToken</con:name><con:value>Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/CERTG!ICESMSLB\/CRT.LB!-3369532370817206236!411590!0</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Sample Air Workflow (Creates PNR)" searchProperties="true" id="5a088603-75a8-4542-a07c-fedb5a3a9c10"><con:description>This test case (based on Sample 1.x TPF Connector-Based Air Workflow) uses a mix of 1.x and 2.x SWS
to complete a basic PNR.  The test case enters an OTH segment so as not to book live inventory.
The PNR locator is stored in the 'PNR Locator' property in the Custom Properties section of the test case.
</con:description><con:settings/><con:testStep type="properties" name="Test Properties" id="e21e21de-a5c5-45ca-a597-8ff09c8f668f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>GivenName</con:name><con:value>MAX</con:value></con:property><con:property><con:name>Surname</con:name><con:value>PLANCK</con:value></con:property><con:property><con:name>eMail_Address</con:name><con:value>MAX.PLANCK@HOTMAIL.COM</con:value></con:property><con:property><con:name>OriginCity</con:name><con:value>DFW</con:value></con:property><con:property><con:name>DestinationCity</con:name><con:value>LAX</con:value></con:property><con:property><con:name>DepartureDateTime</con:name><con:value>2015-02-23T09:15:00</con:value></con:property><con:property><con:name>DepartureFlightNum</con:name><con:value>2419</con:value></con:property><con:property><con:name>DepartureAirline</con:name><con:value>AA</con:value></con:property><con:property><con:name>ReturnDateTime</con:name><con:value>2015-02-27T15:15:00</con:value></con:property><con:property><con:name>ReturnFlightNum</con:name><con:value>2433</con:value></con:property><con:property><con:name>ReturnAirline</con:name><con:value>AA</con:value></con:property><con:property><con:name>ClassOfService</con:name><con:value>Y</con:value></con:property><con:property><con:name>AgentName</con:name><con:value>ALVADEEN COKER</con:value></con:property><con:property><con:name>Future Queue</con:name><con:value>499</con:value></con:property><con:property><con:name>FutureQueueDateTime</con:name><con:value>2015-03-31T06:00:00</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="SessionCreateRQ" id="280c6304-547f-41d0-946f-8f907a4f3cf2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCreateSoapBinding</con:interface><con:operation>SessionCreateRQ</con:operation><con:request name="SessionCreateRQ" id="1fb673bd-fc75-4ba5-9b0c-424a969729b0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">999999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCreateRQ</eb:Service>
         <eb:Action>SessionCreateRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1000</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:00</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:UsernameToken>
            <wsse:Username>${#Project#Username}</wsse:Username>
            <wsse:Password>${#Project#Password}</wsse:Password>
            <Organization>${#Project#Organization}</Organization>
            <Domain>${#Project#Domain}</Domain>
         </wsse:UsernameToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCreateRQ>
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
      </SessionCreateRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="d5d9f392-5ea7-45f8-988a-916a4722b70f"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="26d6c168-fa67-4066-bf58-cbcd9821abe7"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="OTA" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer Security Token" id="10266a22-c310-42af-8a6e-8e41c4d693ba"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Persist Security Token</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SessionCreateRQ</con:sourceStep><con:sourcePath>declare namespace wsse='http://schemas.xmlsoap.org/ws/2002/12/secext';
//wsse:BinarySecurityToken</con:sourcePath><con:targetType>SecurityToken</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="TravelItineraryAddInfoLLSRQ" id="27a3321e-e0a9-47fe-80b3-e4782ab40522"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TravelItineraryAddInfoSoapBinding</con:interface><con:operation>TravelItineraryAddInfoLLSRQ</con:operation><con:request name="TravelItineraryAddInfoLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4b978694-c846-4a59-84b2-e95743bf25d9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">TravelItineraryAddInfoLLSRQ</eb:Service>
         <eb:Action>TravelItineraryAddInfoLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <TravelItineraryAddInfoRQ Version="1.9.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
         <CustomerInfo>
            <PersonName TravelerRefNumber="1.1">
               <GivenName>${Test Properties#GivenName}</GivenName>
               <Surname>${Test Properties#Surname}</Surname>
               <NameReference Text="REF1"/>
            </PersonName>
            <Telephone AreaCityCode="817" PhoneNumber="555-1212" PhoneUseType="H" TravelerRefNumber="1.1"/>
            <Email EmailAddress="${Test Properties#eMail_Address}" TravelerRefNumber="1.1"/>
            <CustomerIdentifier Identifier="1234567890"/>
         </CustomerInfo>
         <AgencyInfo>
            <Address>
               <TPA_Extensions>
                  <AgencyName>SABRE TRAVEL</AgencyName>
               </TPA_Extensions>
               <StreetNmbr>3150 SABRE DRIVE</StreetNmbr>
               <CityName>SOUTHLAKE</CityName>
               <PostalCode>76092</PostalCode>
               <StateCountyProv StateCode="TX"/>
               <CountryName Code="US"/>
            </Address>
            <Telephone AreaCityCode="817" PhoneNumber="555-1212" PhoneUseType="A"/>
            <Ticketing TicketType="7T-"/>
         </AgencyInfo>
      </TravelItineraryAddInfoRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="0e114810-86a2-438d-a138-23dca3add4c7"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="5912a8f9-b8cd-481a-92b6-e3fa9a6633b7"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="TravelItineraryAddInfoLLSRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="MiscSegmentSellLLSRQ" id="8e94bcde-8359-4449-8b65-19a099c2e28d"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MiscSegmentSellSoapBinding</con:interface><con:operation>MiscSegmentSellLLSRQ</con:operation><con:request name="MiscSegmentSellLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="8a4b9113-b84e-4c2c-a0f6-46f5b6b16516"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">MiscSegmentSellLLSRQ</eb:Service>
         <eb:Action>MiscSegmentSellLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <MiscSegmentSellRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <MiscSegment DepartureDateTime="12-31" NumberInParty="1" Status="GK" Type="OTH">
            <OriginLocation LocationCode="${Test Properties#OriginCity}"/>
            <Text>SWS TEST RETENTION SEGMENT</Text>
            <VendorPrefs>
               <Airline Code="${Test Properties#DepartureAirline}"/>
            </VendorPrefs>
         </MiscSegment>
      </MiscSegmentSellRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="1797ffd7-8dfb-43d9-acf3-6e4c817f6765"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="cae1bdb2-10e8-4517-a6c6-f1377d58a75c"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="MiscSegmentSellLLSRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="AddRemarkLLSRQ" id="b72aa880-7e52-454d-97d6-5e217ec2fd38"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AddRemarkSoapBinding</con:interface><con:operation>AddRemarkLLSRQ</con:operation><con:request name="AddRemarkLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="8a29207b-b6f2-4267-bdf5-5b0c96e56bdf"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">AddRemarkLLSRQ</eb:Service>
         <eb:Action>AddRemarkLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <AddRemarkRQ Version="1.4.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
         <BasicRemark Text="SABRE WEB SERVICES SAMPLE AIR WORKFLOW"/>
         <AlphaCodedRemark Code="S" Text="TEST ALPHA CODED REMARK"/>
         <ClientAddressRemark Text="1400 S LAMAR ST"/>
         <ClientAddressRemark Text="DALLAS TX 75215"/>
         <FOPRemark Type="CC">
            <CCInfo>
               <CreditCardVendor Code="DS"/>
               <CreditCardNumber Code="6011333333333333"/>
               <CreditCardExpiration ExpireDate="2013-12"/>
               <SuppressCCInfo Code="XN"/>
               <CardSecurity Code="1234"/>
            </CCInfo>
         </FOPRemark>
         <FutureQueuePlaceRemark DateTime="${Test Properties#FutureQueueDateTime}" PICCode="11" PseudoCityCode="${#Project#Organization}" QueueIdentifier="${Test Properties#Future Queue}"/>
      </AddRemarkRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="8d7e9fdf-2b07-4ce4-a8fc-faa60aedbfd3"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="0c25b87a-6167-4c05-b9f8-b25cf58f40ef"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="EndTransactionLLSRQ" id="dc2546ef-69f5-4f0f-9861-1e4c0bb3091a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EndTransactionSoapBinding</con:interface><con:operation>EndTransactionLLSRQ</con:operation><con:request name="EndTransactionLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="df8807af-2bb8-4c41-88be-c7cd55272ed1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">EndTransactionLLSRQ</eb:Service>
         <eb:Action>EndTransactionLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <EndTransactionRQ Version="1.4.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
         <UpdatedBy>
            <TPA_Extensions>
               <Access>
                  <AccessPerson>
                     <GivenName>${Test Properties#AgentName}</GivenName>
                  </AccessPerson>
               </Access>
            </TPA_Extensions>
         </UpdatedBy>
         <EndTransaction Ind="true"/>
      </EndTransactionRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="c1b49de7-5860-46b2-b430-df2624d79147"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="ada2d261-2628-4e3e-81dd-330bf168de61"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Save PNR Locator" id="94f411ab-0d2c-4913-8e61-6368750c556b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Save PNR Locator</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>EndTransactionLLSRQ</con:sourceStep><con:sourcePath>declare namespace ns1='http://webservices.sabre.com/sabreXML/2003/07';
(//ns1:UniqueID)[1]/@ID

</con:sourcePath><con:targetType>PNR Locator</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="TravelItineraryReadRQ" id="9a55d93d-fd33-4df3-a50f-ecb875140611"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TravelItineraryReadSoapBinding</con:interface><con:operation>TravelItineraryReadRQ</con:operation><con:request name="TravelItineraryReadRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="181b4ade-0422-4398-aaf3-8f46b50e24f8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">99999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="Sabre">TravelItineraryReadLLSRQ</eb:Service>
         <eb:Action>TravelItineraryReadLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01Z</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59Z</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <TravelItineraryReadRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <MessagingDetails>
            <Transaction Code="PNR"/>
         </MessagingDetails>
         <UniqueID ID="${#TestCase#PNR Locator}"/>
      </TravelItineraryReadRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="0d2070ff-af7c-4826-9edc-278dc8be5494"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="cf582878-846f-439a-aad2-344cbc674dd5"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="TravelItineraryReadLLSRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="IgnoreTransactionLLSRQ" id="48eaf7cf-f8f9-41e4-934d-5c49ca7fbaaa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>IgnoreTransactionSoapBinding</con:interface><con:operation>IgnoreTransactionLLSRQ</con:operation><con:request name="IgnoreTransactionLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b15d2538-b3a4-43a8-8251-5e0a296201a0"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="URI">clientURI.com</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="URI">webservices.sabre.com</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">IgnoreTransactionLLSRQ</eb:Service>
         <eb:Action>IgnoreTransactionLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>2001-02-15T11:15:12Z</eb:Timestamp>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <IgnoreTransactionRQ Version="2003A.TsabreXML1.0.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
         <IgnoreTransaction Ind="true"/>
      </IgnoreTransactionRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="1c42e4f8-82c8-4834-9e42-45d23e11e941"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="https://webservices.sabre.com/websvc/IgnoreTransactionPortType/IgnoreTransactionRQRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SessionCloseRQ" id="a773f7a6-f814-4d59-890c-6896a3b84561"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCloseSoapBinding</con:interface><con:operation>SessionCloseRQ</con:operation><con:request name="SessionCloseRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="af093a6d-dfe1-4068-851f-9ce9694116be"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCloseRQ</eb:Service>
         <eb:Action>SessionCloseRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCloseRQ>
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
      </SessionCloseRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="0d16366b-fd40-433f-9263-0277cd435123"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="6eb08166-60bd-47f3-8867-d8b5736d4252"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>PNR Locator</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>SecurityToken</con:name><con:value>Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/ACPCRTD!ICESMSLB\/CRT.LB!-3369532353627302106!311923!0</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="Generic Test Shell" id="2e569bbd-eb54-40ea-b55d-7b4749009c12"><con:description>The test case in this test suite creates a session and runs a simple SabreCommandLLSRQ (pass-through) native
Sabre command.  You can use this test case as a template to build new test cases of your own with the basic
SWS set-up already in place.  To clone this test case, right-click on 'SWS Test Case Shell' and select
Clone TestCase (F9) from the list.  The Clone TestCase wizard will open which allows you to give the new
clone a unique name and assign it to a new or existing Test Suite.
</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SWS Test Case Shell" searchProperties="true" id="7a81e06b-81df-4771-b1cc-ff555b54f6e8"><con:description>Generic SWS Test Case Shell.  Right click and select 'Clone TestCase' to create a new copy
of this test case.</con:description><con:settings/><con:testStep type="properties" name="Test Properties" id="91df81cc-8752-4e10-b8e3-8678f310adac"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Origin City Code</con:name><con:value>DFW</con:value></con:property><con:property><con:name>Destination City Code</con:name><con:value>ORD</con:value></con:property><con:property><con:name>Departure Date</con:name><con:value>2015-02-23</con:value></con:property><con:property><con:name>Return Date</con:name><con:value>2015-02-27</con:value></con:property><con:property><con:name>Surname</con:name><con:value>FEYNMAN</con:value></con:property><con:property><con:name>Given Name</con:name><con:value>RICHARD</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="SessionCreateRQ" id="6ef4366f-182b-4201-bbb3-063bd39a7aeb"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCreateSoapBinding</con:interface><con:operation>SessionCreateRQ</con:operation><con:request name="SessionCreateRQ" id="fb92b256-0b41-4545-ad19-131f66b13880"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">999999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCreateRQ</eb:Service>
         <eb:Action>SessionCreateRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1000</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:00</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:UsernameToken>
            <wsse:Username>${#Project#Username}</wsse:Username>
            <wsse:Password>${#Project#Password}</wsse:Password>
            <Organization>${#Project#Organization}</Organization>
            <Domain>${#Project#Domain}</Domain>
         </wsse:UsernameToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCreateRQ>
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
      </SessionCreateRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="07abbfa5-c841-47df-a75b-5421f5bd5f00"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="7d126e60-3207-4f83-89a4-c7599ad381fc"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="OTA" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer Security Token" id="d6505eb3-7dba-4103-afc9-b45fee4f7c42"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Persist Security Token</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SessionCreateRQ</con:sourceStep><con:sourcePath>declare namespace wsse='http://schemas.xmlsoap.org/ws/2002/12/secext';
//wsse:BinarySecurityToken</con:sourcePath><con:targetType>SecurityToken</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="SabreCommandLLSRQ" id="c4de8e37-0680-49f5-b9f4-996d84a43a64"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCreateSoapBinding</con:interface><con:operation>SessionCreateRQ</con:operation><con:request name="SabreCommandLLSRQ" id="09a82162-593b-4421-804f-5328d0b0ad72"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SabreCommandLLSRQ</eb:Service>
         <eb:Action>SabreCommandLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SabreCommandLLSRQ Version="2003A.TsabreXML1.5.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <!--Character entites for Sabre characters:
			Change Key:  &#xA5;
			Cross of Lorraine:  &#xE7;
			End Item:  &#xA7;
      -->
         <Request Output="SCREEN" CDATA="true">
            <HostCommand>*S</HostCommand>
         </Request>
      </SabreCommandLLSRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2d04426d-294c-473c-a6f9-df43368264fd"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SessionCloseRQ" id="cabda96c-c602-4a10-8887-d6e727c60a49"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCloseSoapBinding</con:interface><con:operation>SessionCloseRQ</con:operation><con:request name="SessionCloseRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="7cc57db8-9f52-440e-9f14-da70d434e80c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCloseRQ</eb:Service>
         <eb:Action>SessionCloseRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCloseRQ>
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
      </SessionCloseRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6fefe660-fe53-4ac1-b931-4b7b06fcdfc0"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d56384b4-2bbd-40ec-a68f-a04ab215d356"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>SecurityToken</con:name><con:value>Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/ACPCRTD!ICESMSLB\/CRT.LB!-3368938572859491801!798115!0</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="Orchestrated SWS" id="33414d3e-723b-45ba-a197-63905cb8fe99"><con:description>The Test Cases in this Test Suite are based on the Sample 1.x TPF Connector-Based Air Workflow in the
Sabre Web Services Developer Resource Center (DRC) Sample Workflows asset.  The test cases below
perform basic SWS functions using Orchestrated Sabre Web Services (OSWS).</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Orchestrated SWS (Creates PNR)" searchProperties="true" id="b5c6ba81-803e-4725-b693-6094870720dc"><con:description>This test case (based on Sample 1.x TPF Connector-Based Air Workflow) uses Orchestrated SWS
to complete a basic PNR.  The test case enters an OTH segment so as not to book live inventory.
The PNR locator is stored in the 'PNR_Locator' property in the Custom Properties section of the test case.
</con:description><con:settings/><con:testStep type="properties" name="Test Properties" id="c722bf56-76b3-4f0c-aa15-97d6104f6c4d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Given Name</con:name><con:value>RICHARD</con:value></con:property><con:property><con:name>Surname</con:name><con:value>FEYNMAN</con:value></con:property><con:property><con:name>eMail Address</con:name><con:value>RICHARD.FEYNMAN@CALTECH.EDU</con:value></con:property><con:property><con:name>Origin City Code</con:name><con:value>DFW</con:value></con:property><con:property><con:name>Destination City Code</con:name><con:value>LAX</con:value></con:property><con:property><con:name>Departure Date</con:name><con:value>2015-02-23</con:value></con:property><con:property><con:name>Return Date</con:name><con:value>2015-02-27</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="SessionCreateRQ" id="d49d669d-0a37-4ee2-ab2d-90806e5becc2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCreateSoapBinding</con:interface><con:operation>SessionCreateRQ</con:operation><con:request name="SessionCreateRQ" id="0a0d7f5a-6cd8-4369-9662-21a6cc63520c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">999999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCreateRQ</eb:Service>
         <eb:Action>SessionCreateRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1000</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:00</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:UsernameToken>
            <wsse:Username>${#Project#Username}</wsse:Username>
            <wsse:Password>${#Project#Password}</wsse:Password>
            <Organization>${#Project#Organization}</Organization>
            <Domain>${#Project#Domain}</Domain>
         </wsse:UsernameToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCreateRQ>
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
      </SessionCreateRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="05e5858d-fb29-46de-868b-589e2bcf9f1e"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="161748be-4f8a-4a5c-b7d5-a9e5d920bb77"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="OTA" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Save Security Token" id="2af871e1-04b3-45f2-bead-fbe724deb896"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Save Security Token</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SessionCreateRQ</con:sourceStep><con:sourcePath>declare namespace wsse='http://schemas.xmlsoap.org/ws/2002/12/secext';
//wsse:BinarySecurityToken</con:sourcePath><con:targetType>SecurityToken</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="PassengerDetailsRQ" id="e7e669c0-5db5-4efd-8a3b-27782aff5ab0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PassengerDetailsSoapBinding</con:interface><con:operation>PassengerDetailsRQ</con:operation><con:request name="PassengerDetailsRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="cfe2aba3-a14e-4d48-a7eb-dbae6faa50eb"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="Sabre">PassengerDetailsRQ</eb:Service>
         <eb:Action>PassengerDetailsRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <PassengerDetailsRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <MiscSegmentSellRQ HaltOnError="true">
            <MiscSegment DepartureDateTime="${Test Properties#Return Date}" NumberInParty="1" Type="OTH" Status="HK">
               <OriginLocation LocationCode="${Test Properties#Origin City Code}"/>
               <Text>RETENTION SEGMENT FOR SWS ORCHESTRATED SERVICES TEST</Text>
               <VendorPrefs>
                  <Airline Code="DL"/>
               </VendorPrefs>
            </MiscSegment>
         </MiscSegmentSellRQ>
         <PostProcessing HaltOnError="true" RedisplayReservation="true">
            <EndTransactionRQ HaltOnError="true">
               <EndTransaction Ind="true"/>
               <Source ReceivedFrom="SWS ORCHESTRATED SERVICES TEST"/>
            </EndTransactionRQ>
         </PostProcessing>
         <SpecialReqDetails>
            <AddRemarkRQ HaltOnError="true">
               <RemarkInfo>
                  <FOP_Remark Type="CHECK"/>
                  <Remark Type="General">
                     <Text>GENERAL REMARK TEST</Text>
                  </Remark>
                  <Remark Type="Hidden">
                     <Text>HIDDEN REMARK TEST</Text>
                  </Remark>
                  <Remark Type="Historical">
                     <Text>HISTORICAL REMARK TEST</Text>
                  </Remark>
               </RemarkInfo>
            </AddRemarkRQ>
         </SpecialReqDetails>
         <TravelItineraryAddInfoRQ HaltOnError="true">
            <AgencyInfo>
               <Address>
                  <AddressLine>SABRE TRAVEL</AddressLine>
                  <CityName>SOUTHLAKE</CityName>
                  <CountryCode>US</CountryCode>
                  <PostalCode>76092</PostalCode>
                  <StateCountyProv StateCode="TX"/>
                  <StreetNmbr>3150 SABRE DRIVE</StreetNmbr>
               </Address>
               <Ticketing TicketType="7T-A"/>
            </AgencyInfo>
            <CustomerInfo>
               <ContactNumbers>
                  <ContactNumber Phone="817-555-1212" PhoneUseType="A"/>
                  <ContactNumber Phone="972-555-1212" PhoneUseType="H"/>
               </ContactNumbers>
               <Email Address="${Test Properties#eMail Address}" NameNumber="1.1" ShortText="ABC123" Type="CC"/>
               <PersonName>
                  <GivenName>${Test Properties#Given Name}</GivenName>
                  <Surname>${Test Properties#Surname}</Surname>
               </PersonName>
            </CustomerInfo>
         </TravelItineraryAddInfoRQ>
      </PassengerDetailsRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b7c51f38-0e7f-4b1e-89b2-06ef1a76106f"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="31817640-a88c-4617-8388-8658428f3829"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="PassengerDetailsRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Save PNR Locator" id="41ef28ef-b092-4dea-aaaa-853f464adf06"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="false" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>PNR</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>PassengerDetailsRQ</con:sourceStep><con:sourcePath>declare namespace ns1='http://webservices.sabre.com/sabreXML/2011/10';
(//ns1:ItineraryRef)[1]/@ID
</con:sourcePath><con:targetType>PNR_Locator</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="TravelItineraryReadLLSRQ" id="315ba578-e467-407f-8fbb-da5197d550ab"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TravelItineraryReadSoapBinding</con:interface><con:operation>TravelItineraryReadRQ</con:operation><con:request name="TravelItineraryReadLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="a3fb4b5c-1fdd-4899-8b6b-275d60cf5f46"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">99999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="Sabre">TravelItineraryReadLLSRQ</eb:Service>
         <eb:Action>TravelItineraryReadLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01Z</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59Z</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <TravelItineraryReadRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <MessagingDetails>
            <Transaction Code="PNR"/>
         </MessagingDetails>
         <UniqueID ID="${#TestCase#PNR_Locator}"/> 
      </TravelItineraryReadRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b2f30ae7-2549-4e41-822d-167790d58d9d"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="96561817-9e7a-4601-8e36-7b700568c2cb"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="TravelItineraryReadLLSRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="IgnoreTransactionLLSRQ" id="4a5a82b2-a80b-411f-ad8c-a1db2d40b433"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>IgnoreTransactionSoapBinding</con:interface><con:operation>IgnoreTransactionLLSRQ</con:operation><con:request name="IgnoreTransactionLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="639a5c6b-43ea-45a6-a14c-17399c293388"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="URI">clientURI.com</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="URI">webservices.sabre.com</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">IgnoreTransactionLLSRQ</eb:Service>
         <eb:Action>IgnoreTransactionLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>2001-02-15T11:15:12Z</eb:Timestamp>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <IgnoreTransactionRQ Version="2003A.TsabreXML1.0.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
         <IgnoreTransaction Ind="true"/>
      </IgnoreTransactionRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="09c8b6f1-4c18-45c1-a434-e8efa66329a8"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="https://webservices.sabre.com/websvc/IgnoreTransactionPortType/IgnoreTransactionRQRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SessionCloseRQ" id="e794aca5-a98f-4bd8-8b26-dd47f2a60d5e"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCloseSoapBinding</con:interface><con:operation>SessionCloseRQ</con:operation><con:request name="SessionCloseRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="53e41684-ac95-4ca1-a2eb-ab352cecaf22"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCloseRQ</eb:Service>
         <eb:Action>SessionCloseRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCloseRQ>
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
      </SessionCloseRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="9b545527-0ce0-4aa7-bab6-8acbe1ef50c6"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="0640080f-f472-4b4b-bc70-98f93aff70a6"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>PNR_Locator</con:name><con:value>QSMREU</con:value></con:property><con:property><con:name>SecurityToken</con:name><con:value>Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/ACPCRTD!ICESMSLB\/CRT.LB!-3677046740270747391!1168211!0</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Orchestrated SWS" searchProperties="true" id="b6667b68-2ea4-4b48-a853-ef74e1519332"><con:description>This test case (based on Sample 1.x TPF Connector-Based Air Workflow) uses Orchestrated SWS
to book and price a pre-selected itinerary (see Test Properties) and build a basic PNR.  The transaction
is ignored and no PNR is created since the project books and prices live inventory.</con:description><con:settings/><con:testStep type="properties" name="Test Properties" id="f402d399-81c8-4698-9d0b-abb0b3a23d93"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Given Name</con:name><con:value>RICHARD</con:value></con:property><con:property><con:name>Surname</con:name><con:value>FEYNMAN</con:value></con:property><con:property><con:name>eMail Address</con:name><con:value>RICHARD.FEYNMAN@CALTECH.EDU</con:value></con:property><con:property><con:name>Origin City Code</con:name><con:value>DFW</con:value></con:property><con:property><con:name>Destination City Code</con:name><con:value>LAX</con:value></con:property><con:property><con:name>Departure DateTime</con:name><con:value>2015-02-23T09:15:00</con:value></con:property><con:property><con:name>Retention Date</con:name><con:value>2015-03-01</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>2419</con:value></con:property><con:property><con:name>Marketing Airline</con:name><con:value>AA</con:value></con:property><con:property><con:name>Operating Airline</con:name><con:value>AA</con:value></con:property><con:property><con:name>Validating Carrier</con:name><con:value>AA</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="SessionCreateRQ" id="bb3cc574-589d-4d71-91ea-3841d81ba11a"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCreateSoapBinding</con:interface><con:operation>SessionCreateRQ</con:operation><con:request name="SessionCreateRQ" id="8d6811f6-5342-45f6-b2a8-18d064d53eb8"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">999999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCreateRQ</eb:Service>
         <eb:Action>SessionCreateRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1000</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:00</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:UsernameToken>
            <wsse:Username>${#Project#Username}</wsse:Username>
            <wsse:Password>${#Project#Password}</wsse:Password>
            <Organization>${#Project#Organization}</Organization>
            <Domain>${#Project#Domain}</Domain>
         </wsse:UsernameToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCreateRQ>
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
      </SessionCreateRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b10bcc71-36bb-4445-b513-bf5fe51ee91c"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="2f17a842-7fe0-43b7-b5f8-7313aee71a20"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="OTA" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Save Security Token" id="8ea4dd55-9ae9-48fc-8888-79f791b272ce"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Save Security Token</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SessionCreateRQ</con:sourceStep><con:sourcePath>declare namespace wsse='http://schemas.xmlsoap.org/ws/2002/12/secext';
//wsse:BinarySecurityToken</con:sourcePath><con:targetType>SecurityToken</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" name="EnhancedAirBookRQ" id="dc659ef8-d09e-4bc9-bf6d-98addbd9aecc"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EnhancedAirBookSoapBinding</con:interface><con:operation>EnhancedAirBookRQ</con:operation><con:request name="EnhancedAirBookRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e021aa64-586b-4e06-8a99-47596c8b0c66"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="Sabre">EnhancedAirBookRQ</eb:Service>
         <eb:Action>EnhancedAirBookRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <EnhancedAirBookRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:stl="http://services.sabre.com/STL/v01">
         <OTA_AirBookRQ HaltOnError="true">
            <OriginDestinationInformation>
               <FlightSegment FlightNumber="${Test Properties#Flight Number}" DepartureDateTime="${Test Properties#Departure DateTime}" NumberInParty="1" Status="NN" ResBookDesigCode="Y">
                  <DestinationLocation LocationCode="${Test Properties#Destination City Code}"/>
                  <Equipment AirEquipType="333"/>
                  <MarketingAirline Code="${Test Properties#Marketing Airline}" FlightNumber="${Test Properties#Flight Number}"/>
                  <OperatingAirline Code="${Test Properties#Operating Airline}"/>
                  <OriginLocation LocationCode="${Test Properties#Origin City Code}"/>
               </FlightSegment>
            </OriginDestinationInformation>
         </OTA_AirBookRQ>
         <OTA_AirPriceRQ HaltOnError="true">
            <PriceRequestInformation Retain="true">
               <OptionalQualifiers>
                  <FlightQualifiers>
                     <VendorPrefs>
                        <Airline Code="${Test Properties#Validating Carrier}"/>
                     </VendorPrefs>
                  </FlightQualifiers>
                  <PricingQualifiers>
                     <PassengerType Code="ADT" Quantity="1"/>
                  </PricingQualifiers>
               </OptionalQualifiers>
            </PriceRequestInformation>
         </OTA_AirPriceRQ>
         <PostProcessing HaltOnError="true" RedisplayReservation="true"/>
      </EnhancedAirBookRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6c6781b8-71e9-4fad-8b86-386c58838204"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="30cb1960-f411-4988-84d8-d8e7b65f3c1a"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="EnhancedAirBookRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="PassengerDetailsRQ" id="797ea9f0-13a6-408b-bc2a-3ecc0996e0cd"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>PassengerDetailsSoapBinding</con:interface><con:operation>PassengerDetailsRQ</con:operation><con:request name="PassengerDetailsRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="067bd0b4-aca6-4e77-8ed4-fdf46a07d714"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="Sabre">PassengerDetailsRQ</eb:Service>
         <eb:Action>PassengerDetailsRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <PassengerDetailsRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <MiscSegmentSellRQ HaltOnError="true">
            <MiscSegment DepartureDateTime="${Test Properties#Retention Date}" NumberInParty="1" Type="OTH" Status="HK">
               <OriginLocation LocationCode="${Test Properties#Origin City Code}"/>
               <Text>RETENTION SEGMENT FOR SWS TEST</Text>
               <VendorPrefs>
                  <Airline Code="DL"/>
               </VendorPrefs>
            </MiscSegment>
         </MiscSegmentSellRQ>
         <PostProcessing HaltOnError="true" RedisplayReservation="false">
            <EndTransactionRQ HaltOnError="true">
               <EndTransaction Ind="false"/>
               <Source ReceivedFrom="SWS ORCHESTRATED SERVICES TEST"/>
            </EndTransactionRQ>
         </PostProcessing>
         <PriceQuoteInfo HaltOnError="true">
            <Link Record="1"/>
         </PriceQuoteInfo>
         <SpecialReqDetails>
            <AddRemarkRQ HaltOnError="true">
               <RemarkInfo>
                  <FOP_Remark Type="CHECK"/>
                  <Remark Type="General">
                     <Text>GENERAL REMARK TEST</Text>
                  </Remark>
                  <Remark Type="Hidden">
                     <Text>HIDDEN REMARK TEST</Text>
                  </Remark>
                  <Remark Type="Historical">
                     <Text>HISTORICAL REMARK TEST</Text>
                  </Remark>
               </RemarkInfo>
            </AddRemarkRQ>
         </SpecialReqDetails>
         <TravelItineraryAddInfoRQ HaltOnError="true">
            <AgencyInfo>
               <Address>
                  <AddressLine>SABRE TRAVEL</AddressLine>
                  <CityName>SOUTHLAKE</CityName>
                  <CountryCode>US</CountryCode>
                  <PostalCode>76092</PostalCode>
                  <StateCountyProv StateCode="TX"/>
                  <StreetNmbr>3150 SABRE DRIVE</StreetNmbr>
               </Address>
               <Ticketing TicketType="7T-"/>
            </AgencyInfo>
            <CustomerInfo>
               <ContactNumbers>
                  <ContactNumber Phone="817-555-1212" PhoneUseType="A"/>
                  <ContactNumber Phone="972-555-1212" PhoneUseType="H"/>
               </ContactNumbers>
               <Email Address="${Test Properties#eMail Address}" NameNumber="1.1" ShortText="ABC123" Type="CC"/>
               <PersonName>
                  <GivenName>${Test Properties#Given Name}</GivenName>
                  <Surname>${Test Properties#Surname}</Surname>
               </PersonName>
            </CustomerInfo>
         </TravelItineraryAddInfoRQ>
      </PassengerDetailsRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="48f09230-1c28-440b-9a77-3c505f5d7130"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="581ffa75-bc9f-438b-b7dd-0ab5632f6933"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="PassengerDetailsRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TravelItineraryReadLLSRQ" id="1f25e96a-d562-4cc8-857b-03858a514cc0"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>TravelItineraryReadSoapBinding</con:interface><con:operation>TravelItineraryReadRQ</con:operation><con:request name="TravelItineraryReadLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="85706b28-38f6-4a37-9f5a-39a4a39e6a2c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">99999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="Sabre">TravelItineraryReadLLSRQ</eb:Service>
         <eb:Action>TravelItineraryReadLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01Z</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59Z</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <TravelItineraryReadRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2011/10" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <MessagingDetails>
            <Transaction Code="PNR"/>
         </MessagingDetails>
      </TravelItineraryReadRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="b2bed334-56c5-4607-9212-1f2ec907e0b7"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="246321bd-4a23-45c1-936b-f665a1b3917a"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="TravelItineraryReadLLSRQ"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="IgnoreTransactionLLSRQ" id="14cc4f68-58cb-401b-b321-10813980145f"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>IgnoreTransactionSoapBinding</con:interface><con:operation>IgnoreTransactionLLSRQ</con:operation><con:request name="IgnoreTransactionLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="3f465a45-0bed-4fe6-bc4f-2b19d0efcb84"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="URI">clientURI.com</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="URI">webservices.sabre.com</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">IgnoreTransactionLLSRQ</eb:Service>
         <eb:Action>IgnoreTransactionLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>mid:20001209-133003-2333@clientofsabre.com</eb:MessageId>
            <eb:Timestamp>2001-02-15T11:15:12Z</eb:Timestamp>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <IgnoreTransactionRQ Version="2003A.TsabreXML1.0.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
         <IgnoreTransaction Ind="true"/>
      </IgnoreTransactionRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6aa2d031-f25f-49b8-9c7a-43ec54f26391"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="https://webservices.sabre.com/websvc/IgnoreTransactionPortType/IgnoreTransactionRQRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SessionCloseRQ" id="1aa835b2-caa8-47e8-882d-07404e6f770b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCloseSoapBinding</con:interface><con:operation>SessionCloseRQ</con:operation><con:request name="SessionCloseRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="bf55bd7c-316c-4e93-8945-4d42e7f352cc"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCloseRQ</eb:Service>
         <eb:Action>SessionCloseRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCloseRQ>
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
      </SessionCloseRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="219acb98-622e-41d7-959b-65b908008089"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="0fd24468-988a-4d25-afb7-6a9bfe588cc4"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>PNR_Locator</con:name><con:value>BJYWMD</con:value></con:property><con:property><con:name>SecurityToken</con:name><con:value>Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/ACPCRTC!ICESMSLB\/CRT.LB!-3677044831748503295!94186!0</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="Copy of Generic Test Shell" id="43666bab-c04d-48f9-b1fc-17e2af02c53f"><con:description>The test case in this test suite creates a session and runs a simple SabreCommandLLSRQ (pass-through) native
Sabre command.  You can use this test case as a template to build new test cases of your own with the basic
SWS set-up already in place.  To clone this test case, right-click on 'SWS Test Case Shell' and select
Clone TestCase (F9) from the list.  The Clone TestCase wizard will open which allows you to give the new
clone a unique name and assign it to a new or existing Test Suite.
</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SWS Test Case Shell" searchProperties="true" id="7ab779e2-10a3-4576-ae25-dc7d0981dfdd"><con:description>Generic SWS Test Case Shell.  Right click and select 'Clone TestCase' to create a new copy
of this test case.</con:description><con:settings/><con:testStep type="properties" name="Test Properties" id="b89fb7b4-998c-4e6b-ae4b-bc1375f2c0a4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>Origin City Code</con:name><con:value>DFW</con:value></con:property><con:property><con:name>Destination City Code</con:name><con:value>ORD</con:value></con:property><con:property><con:name>Departure Date</con:name><con:value>2015-02-23</con:value></con:property><con:property><con:name>Return Date</con:name><con:value>2015-02-27</con:value></con:property><con:property><con:name>Surname</con:name><con:value>FEYNMAN</con:value></con:property><con:property><con:name>Given Name</con:name><con:value>RICHARD</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="request" name="SessionCreateRQ" id="16ae8f9e-7546-41da-9bd6-cb99997bca20"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCreateSoapBinding</con:interface><con:operation>SessionCreateRQ</con:operation><con:request name="SessionCreateRQ" id="fb92b256-0b41-4545-ad19-131f66b13880"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="1.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">999999</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">123123</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCreateRQ</eb:Service>
         <eb:Action>SessionCreateRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1000</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:00</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:UsernameToken>
            <wsse:Username>${#Project#Username}</wsse:Username>
            <wsse:Password>${#Project#Password}</wsse:Password>
            <Organization>${#Project#Organization}</Organization>
            <Domain>${#Project#Domain}</Domain>
         </wsse:UsernameToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCreateRQ>
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
      </SessionCreateRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="07abbfa5-c841-47df-a75b-5421f5bd5f00"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="7d126e60-3207-4f83-89a4-c7599ad381fc"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="OTA" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer Security Token" id="3a084dce-7241-4efd-8a85-ffef33405e8b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Persist Security Token</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>SessionCreateRQ</con:sourceStep><con:sourcePath>declare namespace wsse='http://schemas.xmlsoap.org/ws/2002/12/secext';
//wsse:BinarySecurityToken</con:sourcePath><con:targetType>SecurityToken</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="request" id="2900120b-f6b4-4c99-af93-b0c4aee2cddf" name="OTA_AirAvailLLSRQ"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>OTA_AirAvailSoapBinding</con:interface><con:operation>OTA_AirAvailLLSRQ</con:operation><con:request name="OTA_AirAvailLLSRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="b137d218-81b9-41f8-a356-265690e59310"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://webservices.sabre.com/websvc</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">OTA_AirAvailLLSRQ</eb:Service>
         <eb:Action>OTA_AirAvailLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1002</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <OTA_AirAvailRQ Version="2.0.0" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
         <OriginDestinationInformation>
            <FlightSegment DepartureDateTime="06-06T14:00">
               <ConnectionLocations>
                  <ConnectionLocation LocationCode="SLC"/>
               </ConnectionLocations>
               <DestinationLocation LocationCode="LAS"/>
               <OriginLocation LocationCode="DFW"/>
            </FlightSegment>
         </OriginDestinationInformation>
      </OTA_AirAvailRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" id="fc238b9d-61ae-4c26-8df8-30438c6715af" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="https://webservices.sabre.com/websvc/OTA_AirAvailPortType/OTA_AirAvailRQRequest"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SabreCommandLLSRQ" id="eba32887-e679-4d38-9716-6115bdf41c87"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCreateSoapBinding</con:interface><con:operation>SessionCreateRQ</con:operation><con:request name="SabreCommandLLSRQ" id="09a82162-593b-4421-804f-5328d0b0ad72"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SabreCommandLLSRQ</eb:Service>
         <eb:Action>SabreCommandLLSRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1001</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SabreCommandLLSRQ Version="2003A.TsabreXML1.5.1" xmlns="http://webservices.sabre.com/sabreXML/2003/07" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <!--Character entites for Sabre characters:
			Change Key:  &#xA5;
			Cross of Lorraine:  &#xE7;
			End Item:  &#xA7;
      -->
         <Request Output="SCREEN" CDATA="true">
            <HostCommand>*S</HostCommand>
         </Request>
      </SabreCommandLLSRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" id="2d04426d-294c-473c-a6f9-df43368264fd"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="SessionCloseRQ" id="c883637d-02e6-4ca6-9fa8-f17f7c97f9a9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>SessionCloseSoapBinding</con:interface><con:operation>SessionCloseRQ</con:operation><con:request name="SessionCloseRQ" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="7cc57db8-9f52-440e-9f14-da70d434e80c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://sws-crt.cert.sabre.com/</con:endpoint><con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:eb="http://www.ebxml.org/namespaces/messageHeader" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/1999/XMLSchema">
   <SOAP-ENV:Header>
      <eb:MessageHeader SOAP-ENV:mustUnderstand="1" eb:version="2.0">
         <eb:From>
            <eb:PartyId type="urn:x12.org:IO5:01">1212</eb:PartyId>
         </eb:From>
         <eb:To>
            <eb:PartyId type="urn:x12.org:IO5:01">2323</eb:PartyId>
         </eb:To>
         <eb:CPAId>${#Project#Organization}</eb:CPAId>
         <eb:ConversationId>${#Project#ConversationID}</eb:ConversationId>
         <eb:Service eb:type="OTA">SessionCloseRQ</eb:Service>
         <eb:Action>SessionCloseRQ</eb:Action>
         <eb:MessageData>
            <eb:MessageId>1003</eb:MessageId>
            <eb:Timestamp>2012-06-07T10:00:01</eb:Timestamp>
            <eb:TimeToLive>2013-06-06T23:59:59</eb:TimeToLive>
         </eb:MessageData>
      </eb:MessageHeader>
      <wsse:Security xmlns:wsse="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsu="http://schemas.xmlsoap.org/ws/2002/12/utility">
         <wsse:BinarySecurityToken valueType="String" EncodingType="wsse:Base64Binary">${#TestCase#SecurityToken}</wsse:BinarySecurityToken>
      </wsse:Security>
   </SOAP-ENV:Header>
   <SOAP-ENV:Body>
      <SessionCloseRQ>
         <POS>
            <Source PseudoCityCode="${#Project#Organization}"/>
         </POS>
      </SessionCloseRQ>
   </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request><con:assertion type="SOAP Response" name="SOAP Response" id="6fefe660-fe53-4ac1-b931-4b7b06fcdfc0"/><con:assertion type="SOAP Fault Assertion" name="Not SOAP Fault" id="d56384b4-2bbd-40ec-a68f-a04ab215d356"/><con:credentials><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="OTA"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties><con:property><con:name>SecurityToken</con:name><con:value>Shared/IDL:IceSess\/SessMgr:1\.0.IDL/Common/!ICESMS\/CERTG!ICESMSLB\/CRT.LB!-3368933483439997791!1248622!0</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>ConversationID</con:name><con:value>SWS-Test-${#Project#Organization}</con:value></con:property><con:property><con:name>Username</con:name><con:value>6krfhcibcj5cld4y</con:value></con:property><con:property><con:name>Password</con:name><con:value>BgU84Adp</con:value></con:property><con:property><con:name>Organization</con:name><con:value>DEVCENTER</con:value></con:property><con:property><con:name>Domain</con:name><con:value>EXT</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>